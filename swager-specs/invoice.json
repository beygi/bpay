{
    "swagger": "2.0",
    "info": {
        "description": "Invoice Service",
        "version": "1.0",
        "title": "Invoice",
        "termsOfService": "www.becopay.com/terms",
        "contact": {
            "name": "becopay",
            "url": "http://www.becopay.com",
            "email": "info@becopay.com"
        },
        "license": {
            "name": "becopay",
            "url": "www.becopay.com/license"
        }
    },
    "host": "87.98.188.77:9193",
    "basePath": "/",
    "tags": [{
        "name": "invoice-rest",
        "description": "Invoice Rest"
    }, {
        "name": "merchant-rest",
        "description": "Merchant Rest"
    }, {
        "name": "operation-handler",
        "description": "Operation Handler"
    }, {
        "name": "settleup-rest",
        "description": "Settleup Rest"
    }, {
        "name": "web-mvc-endpoint-handler-mapping",
        "description": "Web Mvc Endpoint Handler Mapping"
    }],
    "schemes": ["https"],
    "paths": {
        "/actuator": {
            "get": {
                "tags": ["web-mvc-endpoint-handler-mapping"],
                "summary": "links",
                "operationId": "linksUsingGET",
                "produces": ["application/json", "application/vnd.spring-boot.actuator.v2+json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/Link"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/actuator/health": {
            "get": {
                "tags": ["operation-handler"],
                "summary": "handle",
                "operationId": "handleUsingGET",
                "produces": ["application/json", "application/vnd.spring-boot.actuator.v2+json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "body",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/actuator/info": {
            "get": {
                "tags": ["operation-handler"],
                "summary": "handle",
                "operationId": "handleUsingGET_1",
                "produces": ["application/json", "application/vnd.spring-boot.actuator.v2+json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "body",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/invoice": {
            "get": {
                "tags": ["invoice-rest"],
                "summary": "getById",
                "operationId": "getByIdUsingGET",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "query",
                    "description": "id",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["invoice-rest"],
                "summary": "create new invoice.",
                "operationId": "addInvoiceUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "invReq",
                    "description": "invReq",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/InvRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "service and uri is ok but content not found",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/invoice/all": {
            "get": {
                "tags": ["invoice-rest"],
                "summary": "return invoices pagination if not found 204 content not found",
                "operationId": "getAllInvoicev2UsingGET",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "dir",
                    "in": "query",
                    "description": "dir",
                    "required": false,
                    "type": "string",
                    "default": "asc"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "page",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "size",
                    "in": "query",
                    "description": "size",
                    "required": false,
                    "type": "integer",
                    "default": 20,
                    "format": "int32"
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "status",
                    "required": false,
                    "type": "string",
                    "default": "success,waiting,failed,settled"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginationInvoiceResponse"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found",
                        "schema": {
                            "$ref": "#/definitions/PaginationInvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/invoice/byorderid": {
            "get": {
                "tags": ["invoice-rest"],
                "summary": "getByOrderId",
                "operationId": "getByOrderIdUsingGET",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "query",
                    "description": "id",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/invoice/coinselection": {
            "put": {
                "tags": ["invoice-rest"],
                "summary": "change coin specific invoice",
                "operationId": "changeCoinUsingPUT",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "changeCode",
                    "description": "changeCode",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ChangeCoinRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "service and uri is ok but content not found",
                        "schema": {
                            "$ref": "#/definitions/InvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/merchant": {
            "get": {
                "tags": ["merchant-rest"],
                "summary": "getMerchantInfo",
                "operationId": "getMerchantInfoUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "token",
                    "in": "query",
                    "description": "token",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["merchant-rest"],
                "summary": "addMerchant",
                "operationId": "addMerchantUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "merchant",
                    "description": "merchant",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Merchant"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/merchant/debt": {
            "get": {
                "tags": ["merchant-rest"],
                "summary": "getMerchantDebt",
                "operationId": "getMerchantDebtUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "dir",
                    "in": "query",
                    "description": "dir",
                    "required": false,
                    "type": "string",
                    "default": "asc"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "page",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "size",
                    "in": "query",
                    "description": "size",
                    "required": false,
                    "type": "integer",
                    "default": 20,
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginationVuMerchantdebt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/merchant/token": {
            "get": {
                "tags": ["merchant-rest"],
                "summary": "getToken",
                "operationId": "getTokenUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/settleup": {
            "get": {
                "tags": ["settleup-rest"],
                "summary": "getAll",
                "operationId": "getAllUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "dir",
                    "in": "query",
                    "description": "dir",
                    "required": false,
                    "type": "string",
                    "default": "asc"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "page",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "size",
                    "in": "query",
                    "description": "size",
                    "required": false,
                    "type": "integer",
                    "default": 20,
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Settleup"
                            }
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/settleup/add": {
            "post": {
                "tags": ["settleup-rest"],
                "summary": "settleUp1",
                "operationId": "settleUp1UsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                    "in": "body",
                    "name": "requestSettle",
                    "description": "requestSettle",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RequestSettle"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Settleup"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/settleup/presettle": {
            "get": {
                "tags": ["settleup-rest"],
                "summary": "getPreSettle",
                "operationId": "getPreSettleUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "invoices",
                    "in": "query",
                    "description": "invoices",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "mermob",
                    "in": "query",
                    "description": "mermob",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Debt"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/settleup/testreset": {
            "get": {
                "tags": ["settleup-rest"],
                "summary": "resetTesthop",
                "operationId": "resetTesthopUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/settleup/testsuccess": {
            "get": {
                "tags": ["settleup-rest"],
                "summary": "successAllwaitong",
                "operationId": "successAllwaitongUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                    "name": "apikey",
                    "in": "query",
                    "description": "apikey",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "mermob",
                    "in": "query",
                    "description": "mermob",
                    "required": false,
                    "type": "string",
                    "default": "09120779807"
                }, {
                    "name": "mob",
                    "in": "query",
                    "description": "mob",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "service and uri is ok but content not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access to this service"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "ChangeCoinRequest": {
            "type": "object",
            "properties": {
                "coinSymbol": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "inform": {
                    "type": "boolean"
                },
                "invoiceId": {
                    "type": "string"
                },
                "mobileNum": {
                    "type": "string"
                }
            },
            "title": "ChangeCoinRequest"
        },
        "Debt": {
            "type": "object",
            "properties": {
                "cardNumber": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "mobile": {
                    "type": "string"
                },
                "settleUpInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settleUpInvoices"
                    }
                },
                "shopName": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            },
            "title": "Debt"
        },
        "InvRequest": {
            "type": "object",
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "merchantCoin": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "payerCoin": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            },
            "title": "InvRequest"
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "blockchainCoin": {
                    "type": "string",
                    "enum": ["tbitcoin", "bitcoin", "ethereum", "usdollar", "iranrial", "syrianpound", "euro"]
                },
                "category": {
                    "type": "string"
                },
                "cryptoAmount": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "readOnly": true
                },
                "merchantAmount": {
                    "type": "number"
                },
                "merchantCoin": {
                    "type": "string"
                },
                "orderid": {
                    "type": "string"
                },
                "payerCoin": {
                    "type": "string"
                },
                "qr": {
                    "type": "string"
                },
                "regdatetime": {
                    "type": "string",
                    "readOnly": true
                },
                "settleup": {
                    "$ref": "#/definitions/Settleup"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "userdatetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "waiting": {
                    "type": "boolean"
                }
            },
            "title": "Invoice"
        },
        "InvoiceResponse": {
            "type": "object",
            "properties": {
                "callback": {
                    "type": "string"
                },
                "cryptoAmount": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "example": "yyyy-MM-dd hh:mm:ss"
                },
                "description": {
                    "type": "string"
                },
                "gatewayUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "merchantAmount": {
                    "type": "number"
                },
                "merchantCoin": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "payerAmount": {
                    "type": "number"
                },
                "payerCoin": {
                    "type": "string"
                },
                "qr": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer",
                    "format": "int32"
                },
                "shopName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "InvoiceResponse"
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "templated": {
                    "type": "boolean"
                }
            },
            "title": "Link"
        },
        "Mapstring,Link": {
            "type": "object",
            "title": "Mapstring,Link",
            "additionalProperties": {
                "$ref": "#/definitions/Link"
            }
        },
        "Merchant": {
            "type": "object",
            "properties": {
                "callback": {
                    "type": "string"
                },
                "cardNumber": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "pushToken": {
                    "type": "string"
                },
                "shopName": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "readOnly": true
                }
            },
            "title": "Merchant"
        },
        "PaginationInvoiceResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceResponse"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "previous": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PaginationInvoiceResponse"
        },
        "PaginationVuMerchantdebt": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VuMerchantdebt"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "previous": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PaginationVuMerchantdebt"
        },
        "RequestSettle": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "apikey": {
                    "type": "string"
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "destCard": {
                    "type": "string"
                },
                "invoiceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "merMobile": {
                    "type": "string"
                },
                "mob": {
                    "type": "string"
                },
                "originCard": {
                    "type": "string"
                },
                "txid": {
                    "type": "string"
                }
            },
            "title": "RequestSettle"
        },
        "Settleup": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "destCard": {
                    "type": "string"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                },
                "originCard": {
                    "type": "string"
                },
                "txid": {
                    "type": "string"
                }
            },
            "title": "Settleup"
        },
        "VuMerchantdebt": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer",
                    "format": "int64"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "merMobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            },
            "title": "VuMerchantdebt"
        },
        "settleUpInvoices": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "string"
                }
            },
            "title": "settleUpInvoices"
        }
    }
}
