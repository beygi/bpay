{
	"id": 0,
	"name": "BecopayMerchants",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 4325,
			"name": "\"containers/Admin/Chat/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Admin/Chat/index.tsx",
			"children": [
				{
					"id": 4328,
					"name": "ChatAdminContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4334,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4329,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4330,
									"name": "new ChatAdminContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4331,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4326
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChatAdminContainer",
										"id": 4328
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Chat/index.tsx",
									"line": 20,
									"character": 66
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4401,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4397,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4398,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4399,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4399
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4326
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4402,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4403,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4404,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4405,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4400,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4327
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4359,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4360,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4365,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4366,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4367,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4368,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4374,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4375,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4376,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4377,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4327
													}
												]
											}
										},
										{
											"id": 4378,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4344,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4345,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4346,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4347,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4335,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4336,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4352,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4353,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4354,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4355,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4327
													}
												]
											}
										},
										{
											"id": 4356,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4357,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4358,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4361,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4362,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4363,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4364,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4342,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4343,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4369,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4370,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4371,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4372,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4327
													}
												]
											}
										},
										{
											"id": 4373,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4392,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4393,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4394,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4395,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4396,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4348,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4349,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4350,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4351,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4327
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4332,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4333,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Chat/index.tsx",
									"line": 25,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4379,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4380,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4381,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4382,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4383,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4384,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4385,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4327
																					}
																				]
																			}
																		},
																		{
																			"id": 4386,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4326
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4387,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4388,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4389,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4390,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4391,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4337,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4338,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4339,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4326
													}
												]
											}
										},
										{
											"id": 4340,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4327
													}
												]
											}
										},
										{
											"id": 4341,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4329
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4401,
								4397,
								4402,
								4400
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4359,
								4365,
								4374,
								4344,
								4335,
								4352,
								4357,
								4361,
								4342,
								4369,
								4392,
								4348,
								4332,
								4379,
								4337
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/Chat/index.tsx",
							"line": 20,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4326
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4327
								}
							]
						}
					]
				},
				{
					"id": 4326,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Chat/index.tsx",
							"line": 14,
							"character": 16
						}
					]
				},
				{
					"id": 4327,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Chat/index.tsx",
							"line": 17,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4328
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4326,
						4327
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Admin/Chat/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4406,
			"name": "\"containers/Admin/Dashboard/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Admin/Dashboard/index.tsx",
			"children": [
				{
					"id": 4409,
					"name": "AdminDashboardContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4415,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4410,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4411,
									"name": "new AdminDashboardContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4412,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4407
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AdminDashboardContainer",
										"id": 4409
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Dashboard/index.tsx",
									"line": 22,
									"character": 71
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4482,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4478,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4479,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4480,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4480
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4407
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4483,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4484,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4485,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4486,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4481,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4408
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4440,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4441,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4446,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4447,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4448,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4449,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4455,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4456,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4457,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4458,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4408
													}
												]
											}
										},
										{
											"id": 4459,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4425,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4426,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4427,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4428,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4416,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4417,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4433,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4434,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4435,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4436,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4408
													}
												]
											}
										},
										{
											"id": 4437,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4438,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4439,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4442,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4443,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4444,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4445,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4423,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4424,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4450,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4451,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4452,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4453,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4408
													}
												]
											}
										},
										{
											"id": 4454,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4473,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4474,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4475,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4476,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4477,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4429,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4430,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4431,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4432,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4408
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4413,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4414,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Dashboard/index.tsx",
									"line": 27,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4460,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4461,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4462,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4463,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4464,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4465,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4466,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4408
																					}
																				]
																			}
																		},
																		{
																			"id": 4467,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4407
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4468,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4469,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4470,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4471,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4472,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4418,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4419,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4420,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4407
													}
												]
											}
										},
										{
											"id": 4421,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4408
													}
												]
											}
										},
										{
											"id": 4422,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4410
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4482,
								4478,
								4483,
								4481
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4440,
								4446,
								4455,
								4425,
								4416,
								4433,
								4438,
								4442,
								4423,
								4450,
								4473,
								4429,
								4413,
								4460,
								4418
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/Dashboard/index.tsx",
							"line": 22,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4407
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4408
								}
							]
						}
					]
				},
				{
					"id": 4407,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Dashboard/index.tsx",
							"line": 16,
							"character": 16
						}
					]
				},
				{
					"id": 4408,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Dashboard/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4409
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4407,
						4408
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Admin/Dashboard/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4487,
			"name": "\"containers/Admin/KYC/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Admin/KYC/index.tsx",
			"children": [
				{
					"id": 4494,
					"name": "KycAdminContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4508,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4495,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4496,
									"name": "new KycAdminContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4497,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4488
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "KycAdminContainer",
										"id": 4494
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 39,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4573,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4569,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4570,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4571,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4571
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4488
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4574,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4575,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4576,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4577,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4572,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4489
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4531,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4532,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4537,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4538,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4539,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4540,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4546,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4547,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4548,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4549,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4489
													}
												]
											}
										},
										{
											"id": 4550,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4500,
							"name": "changeStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4501,
									"name": "changeStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4502,
											"name": "uid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4503,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 55,
									"character": 22
								}
							]
						},
						{
							"id": 4516,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4517,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4518,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4519,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4498,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4499,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 51,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4524,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4525,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4526,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4527,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4489
													}
												]
											}
										},
										{
											"id": 4528,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4529,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4530,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4533,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4534,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4535,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4536,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4514,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4515,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4541,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4542,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4543,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4544,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4489
													}
												]
											}
										},
										{
											"id": 4545,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4564,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4565,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4566,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4567,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4568,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4520,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4521,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4522,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4523,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4489
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4506,
							"name": "loadData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4507,
									"name": "loadData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 81,
									"character": 20
								}
							]
						},
						{
							"id": 4504,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4505,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 63,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4551,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4552,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4553,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4554,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4555,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4556,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4557,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4489
																					}
																				]
																			}
																		},
																		{
																			"id": 4558,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4488
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4559,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4560,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4561,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4562,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4563,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4509,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4510,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4511,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4488
													}
												]
											}
										},
										{
											"id": 4512,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4489
													}
												]
											}
										},
										{
											"id": 4513,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4495
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4573,
								4569,
								4574,
								4572
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4531,
								4537,
								4546,
								4500,
								4516,
								4498,
								4524,
								4529,
								4533,
								4514,
								4541,
								4564,
								4520,
								4506,
								4504,
								4551,
								4509
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/KYC/index.tsx",
							"line": 39,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4488
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4489
								}
							]
						}
					]
				},
				{
					"id": 4488,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/KYC/index.tsx",
							"line": 17,
							"character": 16
						}
					]
				},
				{
					"id": 4489,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4493,
							"name": "countries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4490,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 21,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4491,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 22,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4492,
							"name": "pagination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/KYC/index.tsx",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4493,
								4490,
								4491,
								4492
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/KYC/index.tsx",
							"line": 20,
							"character": 16
						}
					]
				},
				{
					"id": 4578,
					"name": "api",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/KYC/index.tsx",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "kycApi",
						"id": 2374
					},
					"defaultValue": " Api.getInstance()"
				},
				{
					"id": 4579,
					"name": "columns",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/KYC/index.tsx",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reflection",
									"declaration": {
										"id": 4580,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 4582,
												"name": "dataIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 30,
														"character": 30
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"fname\""
											},
											{
												"id": 4583,
												"name": "key",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 30,
														"character": 44
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"fname\""
											},
											{
												"id": 4581,
												"name": "title",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 30,
														"character": 11
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"Name\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													4582,
													4583,
													4581
												]
											}
										]
									}
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 4584,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 4586,
												"name": "dataIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 33,
														"character": 33
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"country\""
											},
											{
												"id": 4587,
												"name": "key",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 33,
														"character": 49
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"country\""
											},
											{
												"id": 4585,
												"name": "title",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 33,
														"character": 10
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"Country\""
											},
											{
												"id": 4588,
												"name": "render",
												"kind": 64,
												"kindString": "Function",
												"flags": {},
												"signatures": [
													{
														"id": 4589,
														"name": "render",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {},
														"parameters": [
															{
																"id": 4590,
																"name": "record",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"sources": [
													{
														"fileName": "containers/Admin/KYC/index.tsx",
														"line": 33,
														"character": 68
													}
												]
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													4586,
													4587,
													4585
												]
											},
											{
												"title": "Functions",
												"kind": 64,
												"children": [
													4588
												]
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": " [\n    { title: \"Name\", dataIndex: \"fname\", key: \"fname\" },\n    { title: \"Family\", dataIndex: \"lname\", key: \"lname\" },\n    { title: \"Gender\", dataIndex: \"gender\", key: \"gender\" },\n    {title: \"Country\" , dataIndex: \"country\", key: \"country\", render: (record) => record.name },\n    { title: \"License type\", dataIndex: \"ltype\", key: \"ltype\" },\n    { title: \"License id\", dataIndex: \"licenseid\", key: \"licenseid\" },\n    {dataIndex: \"status\", key: \"status\", render: (record) => <b>{record}</b> , title: \"Status\" },\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4494
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4488,
						4489
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4578,
						4579
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Admin/KYC/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4632,
			"name": "\"containers/Admin/Users/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Admin/Users/index.tsx",
			"children": [
				{
					"id": 4641,
					"name": "CustomersContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4662,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4644,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4645,
									"name": "new CustomersContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4646,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4633
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomersContainer",
										"id": 4641
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 44,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4642,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 43,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "API",
								"id": 4592
							},
							"defaultValue": " API.getInstance()"
						},
						{
							"id": 4727,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4723,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4724,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4725,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4725
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4633
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4728,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4729,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4730,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4731,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4643,
							"name": "skills",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 44,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 4726,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4634
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4685,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4686,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4691,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4692,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4693,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4694,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4700,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4701,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4702,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4703,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4634
													}
												]
											}
										},
										{
											"id": 4704,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4670,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4671,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4672,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4673,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4647,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4648,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 62,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4678,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4679,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4680,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4681,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4634
													}
												]
											}
										},
										{
											"id": 4682,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4683,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4684,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4687,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4688,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4689,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4690,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4668,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4669,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4695,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4696,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4697,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4698,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4634
													}
												]
											}
										},
										{
											"id": 4699,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4718,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4719,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4720,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4721,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4722,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4674,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4675,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4676,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4677,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4634
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4655,
							"name": "loadData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4656,
									"name": "loadData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4657,
											"name": "current",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4658,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4659,
											"name": "searchTerm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 78,
									"character": 19
								}
							]
						},
						{
							"id": 4649,
							"name": "loadFirst",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4650,
									"name": "loadFirst",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 66,
									"character": 20
								}
							]
						},
						{
							"id": 4651,
							"name": "loadNext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4652,
									"name": "loadNext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 70,
									"character": 19
								}
							]
						},
						{
							"id": 4653,
							"name": "loadPrev",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4654,
									"name": "loadPrev",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 74,
									"character": 19
								}
							]
						},
						{
							"id": 4660,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4661,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 96,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4705,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4706,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4707,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4708,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4709,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4710,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4711,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4634
																					}
																				]
																			}
																		},
																		{
																			"id": 4712,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4633
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4713,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4714,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4715,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4716,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4717,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4663,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4664,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4665,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4633
													}
												]
											}
										},
										{
											"id": 4666,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4634
													}
												]
											}
										},
										{
											"id": 4667,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4644
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4642,
								4727,
								4723,
								4728,
								4643,
								4726
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4685,
								4691,
								4700,
								4670,
								4647,
								4678,
								4683,
								4687,
								4668,
								4695,
								4718,
								4674,
								4655,
								4649,
								4651,
								4653,
								4660,
								4705,
								4663
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 42,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4633
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4634
								}
							]
						}
					]
				},
				{
					"id": 4633,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 24,
							"character": 16
						}
					]
				},
				{
					"id": 4634,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4638,
							"name": "currentPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4640,
							"name": "hasNext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4636,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 29,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4637,
							"name": "perPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 30,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4639,
							"name": "searchTerm",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 32,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4635,
							"name": "users",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Admin/Users/index.tsx",
									"line": 28,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4638,
								4640,
								4636,
								4637,
								4639,
								4635
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 27,
							"character": 16
						}
					]
				},
				{
					"id": 4736,
					"name": "ButtonGroup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 16,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "StatelessComponent",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ButtonGroupProps"
							}
						]
					},
					"defaultValue": " Button.Group"
				},
				{
					"id": 4734,
					"name": "CheckableTag",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "CheckableTag"
					}
				},
				{
					"id": 4732,
					"name": "Search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Search"
					},
					"defaultValue": " Input.Search"
				},
				{
					"id": 4733,
					"name": "TabPane",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 13,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "TabPaneProps"
							}
						]
					},
					"defaultValue": " Tabs.TabPane"
				},
				{
					"id": 4735,
					"name": "api",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "API",
						"id": 4592
					},
					"defaultValue": " API.getInstance()"
				},
				{
					"id": 4737,
					"name": "columns",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Admin/Users/index.tsx",
							"line": 36,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 4738,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 4740,
										"name": "dataIndex",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Admin/Users/index.tsx",
												"line": 37,
												"character": 30
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"firstName\""
									},
									{
										"id": 4741,
										"name": "key",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Admin/Users/index.tsx",
												"line": 37,
												"character": 48
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"firstName\""
									},
									{
										"id": 4739,
										"name": "title",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Admin/Users/index.tsx",
												"line": 37,
												"character": 11
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"Name\""
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											4740,
											4741,
											4739
										]
									}
								]
							}
						}
					},
					"defaultValue": " [\n    { title: \"Name\", dataIndex: \"firstName\", key: \"firstName\" },\n    { title: \"Family\", dataIndex: \"lastName\", key: \"lastName\" },\n    { title: \"Email\", dataIndex: \"email\", key: \"email\" },\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4641
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4633,
						4634
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4736,
						4734,
						4732,
						4733,
						4735,
						4737
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Admin/Users/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4742,
			"name": "\"containers/Dashboard/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Dashboard/index.tsx",
			"children": [
				{
					"id": 4745,
					"name": "DashboardContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4751,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4746,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4747,
									"name": "new DashboardContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4748,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4743
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DashboardContainer",
										"id": 4745
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Dashboard/index.tsx",
									"line": 34,
									"character": 66
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4818,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4814,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4815,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4816,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4816
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4743
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4819,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4820,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4821,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4822,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4817,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4744
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4776,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4777,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4782,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4783,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4784,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4785,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4791,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4792,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4793,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4794,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4744
													}
												]
											}
										},
										{
											"id": 4795,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4761,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4762,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4763,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4764,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4752,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4753,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4769,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4770,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4771,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4772,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4744
													}
												]
											}
										},
										{
											"id": 4773,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4774,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4775,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4778,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4779,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4780,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4781,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4759,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4760,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4786,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4787,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4788,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4789,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4744
													}
												]
											}
										},
										{
											"id": 4790,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4809,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4810,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4811,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4812,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4813,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4765,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4766,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4767,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4768,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4744
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4749,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4750,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Dashboard/index.tsx",
									"line": 39,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4796,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4797,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4798,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4799,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4800,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4801,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4802,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4744
																					}
																				]
																			}
																		},
																		{
																			"id": 4803,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4743
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4804,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4805,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4806,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4807,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4808,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4754,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4755,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4756,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4743
													}
												]
											}
										},
										{
											"id": 4757,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4744
													}
												]
											}
										},
										{
											"id": 4758,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4746
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4818,
								4814,
								4819,
								4817
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4776,
								4782,
								4791,
								4761,
								4752,
								4769,
								4774,
								4778,
								4759,
								4786,
								4809,
								4765,
								4749,
								4796,
								4754
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Dashboard/index.tsx",
							"line": 34,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4743
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4744
								}
							]
						}
					]
				},
				{
					"id": 4743,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Dashboard/index.tsx",
							"line": 28,
							"character": 16
						}
					]
				},
				{
					"id": 4744,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Dashboard/index.tsx",
							"line": 31,
							"character": 16
						}
					]
				},
				{
					"id": 4823,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Dashboard/index.tsx",
							"line": 26,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4745
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4743,
						4744
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4823
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Dashboard/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4824,
			"name": "\"containers/Deposit/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Deposit/index.tsx",
			"children": [
				{
					"id": 4828,
					"name": "DepositContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4834,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4829,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4830,
									"name": "new DepositContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4831,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4825
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DepositContainer",
										"id": 4828
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Deposit/index.tsx",
									"line": 26,
									"character": 64
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4901,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4897,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4898,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4899,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4899
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4825
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4902,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4903,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4904,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4905,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4900,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4827
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4859,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4860,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4865,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4866,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4867,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4868,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4874,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4875,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4876,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4877,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4827
													}
												]
											}
										},
										{
											"id": 4878,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4844,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4845,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4846,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4847,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4835,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4836,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4852,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4853,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4854,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4855,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4827
													}
												]
											}
										},
										{
											"id": 4856,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4857,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4858,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4861,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4862,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4863,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4864,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4842,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4843,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4869,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4870,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4871,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4872,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4827
													}
												]
											}
										},
										{
											"id": 4873,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4892,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4893,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4894,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4895,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4896,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4848,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4849,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4850,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4851,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4827
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4832,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4833,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Deposit/index.tsx",
									"line": 31,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4879,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4880,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4881,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4882,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4883,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4884,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4885,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4827
																					}
																				]
																			}
																		},
																		{
																			"id": 4886,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4825
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4887,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4888,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4889,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4890,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4891,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4837,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4838,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4839,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4825
													}
												]
											}
										},
										{
											"id": 4840,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4827
													}
												]
											}
										},
										{
											"id": 4841,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4829
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4901,
								4897,
								4902,
								4900
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4859,
								4865,
								4874,
								4844,
								4835,
								4852,
								4857,
								4861,
								4842,
								4869,
								4892,
								4848,
								4832,
								4879,
								4837
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Deposit/index.tsx",
							"line": 26,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4825
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4827
								}
							]
						}
					]
				},
				{
					"id": 4825,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4826,
							"name": "match",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/Deposit/index.tsx",
									"line": 20,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4826
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Deposit/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 4827,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Deposit/index.tsx",
							"line": 23,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4828
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4825,
						4827
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Deposit/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4906,
			"name": "\"containers/Exchange/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Exchange/index.tsx",
			"children": [
				{
					"id": 4912,
					"name": "ExchangeContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 4918,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4913,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4914,
									"name": "new ExchangeContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4915,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4907
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ExchangeContainer",
										"id": 4912
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Exchange/index.tsx",
									"line": 30,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4985,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4981,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4982,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4983,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4983
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4907
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4986,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4987,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4988,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4989,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4984,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4909
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4943,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4944,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4949,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4950,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4951,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4952,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4958,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4959,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4960,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4961,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4909
													}
												]
											}
										},
										{
											"id": 4962,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4928,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4929,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4930,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4931,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4919,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4920,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4936,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4937,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4938,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4939,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4909
													}
												]
											}
										},
										{
											"id": 4940,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4941,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4942,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4945,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4946,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4947,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4948,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4926,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4927,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4953,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4954,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4955,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4956,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4909
													}
												]
											}
										},
										{
											"id": 4957,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4976,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4977,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4978,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4979,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4980,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4932,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4933,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4934,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4935,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4909
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4916,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4917,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Exchange/index.tsx",
									"line": 46,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4963,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4964,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4965,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4966,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4967,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4968,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4969,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4909
																					}
																				]
																			}
																		},
																		{
																			"id": 4970,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4907
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4971,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4972,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4973,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4974,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4975,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4921,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4922,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4923,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4907
													}
												]
											}
										},
										{
											"id": 4924,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4909
													}
												]
											}
										},
										{
											"id": 4925,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4913
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4985,
								4981,
								4986,
								4984
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4943,
								4949,
								4958,
								4928,
								4919,
								4936,
								4941,
								4945,
								4926,
								4953,
								4976,
								4932,
								4916,
								4963,
								4921
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Exchange/index.tsx",
							"line": 30,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4907
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4909
								}
							]
						}
					]
				},
				{
					"id": 4907,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4908,
							"name": "match",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/Exchange/index.tsx",
									"line": 22,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4908
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Exchange/index.tsx",
							"line": 21,
							"character": 16
						}
					]
				},
				{
					"id": 4909,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4910,
							"name": "fromSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/Exchange/index.tsx",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4911,
							"name": "toSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/Exchange/index.tsx",
									"line": 27,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4910,
								4911
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Exchange/index.tsx",
							"line": 25,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4912
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4907,
						4909
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Exchange/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4990,
			"name": "\"containers/Groups/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Groups/index.tsx",
			"children": [
				{
					"id": 4995,
					"name": "GroupsContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 5011,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4996,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4997,
									"name": "new GroupsContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4998,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4991
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GroupsContainer",
										"id": 4995
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 57,
									"character": 63
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5078,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5074,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5075,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5076,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5076
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4991
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5079,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5080,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 5081,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5082,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5077,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4992
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5036,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5037,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5042,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5043,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5044,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5045,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5051,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5052,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5053,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5054,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4992
													}
												]
											}
										},
										{
											"id": 5055,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5021,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5022,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5023,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5024,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5012,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5013,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5029,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5030,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5031,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5032,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4992
													}
												]
											}
										},
										{
											"id": 5033,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5034,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5035,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5038,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5039,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5040,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5041,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5019,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5020,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5046,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5047,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5048,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5049,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4992
													}
												]
											}
										},
										{
											"id": 5050,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5069,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5070,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5071,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5072,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5073,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5025,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5026,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5027,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5028,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4992
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5006,
							"name": "handleCancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5007,
									"name": "handleCancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5008,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 82,
									"character": 23
								}
							]
						},
						{
							"id": 5003,
							"name": "handleOk",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5004,
									"name": "handleOk",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5005,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 77,
									"character": 19
								}
							]
						},
						{
							"id": 5009,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5010,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 88,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5056,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5057,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5058,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5059,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5060,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5061,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5062,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4992
																					}
																				]
																			}
																		},
																		{
																			"id": 5063,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4991
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5064,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5065,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5066,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5067,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5068,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5014,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5015,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5016,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4991
													}
												]
											}
										},
										{
											"id": 5017,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4992
													}
												]
											}
										},
										{
											"id": 5018,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 4999,
							"name": "showEditModal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5000,
									"name": "showEditModal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 66,
									"character": 24
								}
							]
						},
						{
							"id": 5001,
							"name": "showModal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5002,
									"name": "showModal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 72,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4996
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5078,
								5074,
								5079,
								5077
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5036,
								5042,
								5051,
								5021,
								5012,
								5029,
								5034,
								5038,
								5019,
								5046,
								5069,
								5025,
								5006,
								5003,
								5009,
								5056,
								5014,
								4999,
								5001
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 57,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4991
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4992
								}
							]
						}
					]
				},
				{
					"id": 4991,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 4992,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4994,
							"name": "editModal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 21,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4993,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/Groups/index.tsx",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4994,
								4993
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 18,
							"character": 16
						}
					]
				},
				{
					"id": 5083,
					"name": "Option",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "OptionProps"
							}
						]
					},
					"defaultValue": " Select.Option"
				},
				{
					"id": 5084,
					"name": "Search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Search"
					},
					"defaultValue": " Input.Search"
				},
				{
					"id": 5085,
					"name": "TabPane",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "TabPaneProps"
							}
						]
					},
					"defaultValue": " Tabs.TabPane"
				},
				{
					"id": 5108,
					"name": "children",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 52,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": " []"
				},
				{
					"id": 5086,
					"name": "columns",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reflection",
									"declaration": {
										"id": 5087,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 5089,
												"name": "dataIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 26,
														"character": 41
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"report\""
											},
											{
												"id": 5090,
												"name": "key",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 26,
														"character": 56
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"report\""
											},
											{
												"id": 5088,
												"name": "title",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 26,
														"character": 11
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												},
												"defaultValue": " t.t(\"Group Name\")"
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													5089,
													5090,
													5088
												]
											}
										]
									}
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 5091,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 5092,
												"name": "dataIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 27,
														"character": 15
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"status\""
											},
											{
												"id": 5093,
												"name": "key",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 27,
														"character": 30
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"status\""
											},
											{
												"id": 5101,
												"name": "title",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 34,
														"character": 16
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												},
												"defaultValue": " t.t(\"Permission\")"
											},
											{
												"id": 5094,
												"name": "render",
												"kind": 64,
												"kindString": "Function",
												"flags": {},
												"signatures": [
													{
														"id": 5095,
														"name": "render",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {},
														"parameters": [
															{
																"id": 5096,
																"name": "record",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"type": {
															"type": "reflection",
															"declaration": {
																"id": 5097,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 5098,
																		"name": "children",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "containers/Groups/index.tsx",
																				"line": 29,
																				"character": 24
																			}
																		],
																		"type": {
																			"type": "reference",
																			"name": "Element"
																		},
																		"defaultValue": " <div>{[1, 2, 3].map((item) => <span key={item}>title,</span>)}</div>"
																	},
																	{
																		"id": 5099,
																		"name": "props",
																		"kind": 2097152,
																		"kindString": "Object literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 5100,
																				"name": "className",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "containers/Groups/index.tsx",
																						"line": 31,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"defaultValue": " record"
																			}
																		],
																		"groups": [
																			{
																				"title": "Variables",
																				"kind": 32,
																				"children": [
																					5100
																				]
																			}
																		],
																		"sources": [
																			{
																				"fileName": "containers/Groups/index.tsx",
																				"line": 30,
																				"character": 21
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "object"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			5098
																		]
																	},
																	{
																		"title": "Object literals",
																		"kind": 2097152,
																		"children": [
																			5099
																		]
																	}
																]
															}
														}
													}
												],
												"sources": [
													{
														"fileName": "containers/Groups/index.tsx",
														"line": 27,
														"character": 48
													}
												]
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													5092,
													5093,
													5101
												]
											},
											{
												"title": "Functions",
												"kind": 64,
												"children": [
													5094
												]
											}
										]
									}
								}
							]
						}
					},
					"defaultValue": " [\n    { title: t.t(\"Group Name\"), dataIndex: \"report\", key: \"report\" },\n    { dataIndex: \"status\", key: \"status\", render : (record) => {\n            return {\n                children: <div>{[1, 2, 3].map((item) => <span key={item}>title,</span>)}</div>,\n                props: {\n                    className: record,\n                },\n            };\n        }, title: t.t(\"Permission\")},\n    { dataIndex: \"\", key: \"x\", render : () => {\n            return {\n                children: <span className={\"anchor\"} onClick={this.showEditModal}>{t.t(\"edit\")}</span>,\n                props: {\n                    className: \"endText\",\n                },\n            };\n        }, title: \"\" },\n]"
				},
				{
					"id": 5102,
					"name": "data",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Groups/index.tsx",
							"line": 44,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 5103,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 5104,
										"name": "description",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Groups/index.tsx",
												"line": 45,
												"character": 17
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\""
									},
									{
										"id": 5105,
										"name": "key",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Groups/index.tsx",
												"line": 46,
												"character": 11
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										},
										"defaultValue": "1"
									},
									{
										"id": 5106,
										"name": "report",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Groups/index.tsx",
												"line": 46,
												"character": 22
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										},
										"defaultValue": " t.t(\"lorem ipsum\")"
									},
									{
										"id": 5107,
										"name": "status",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "containers/Groups/index.tsx",
												"line": 46,
												"character": 51
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"active\""
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											5104,
											5105,
											5106,
											5107
										]
									}
								]
							}
						}
					},
					"defaultValue": " [\n    { description: \"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\",\n        key: 1, report: t.t(\"lorem ipsum\"),  status: \"active\"},\n    { description: \"My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.\",\n        key: 2, report: t.t(\"lorem ipsum\"), status: \"warning\"},\n    { description: \"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.\",\n        key: 3, report: t.t(\"lorem ipsum\"), status: \"inactive\"},\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4995
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4991,
						4992
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5083,
						5084,
						5085,
						5108,
						5086,
						5102
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Groups/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5109,
			"name": "\"containers/KYC/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/KYC/index.tsx",
			"children": [
				{
					"id": 5121,
					"name": "KycContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"typeParameter": [
						{
							"id": 5138,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5122,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5123,
									"name": "new KycContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5124,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IUserFormProps",
												"id": 5110
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "KycContainer",
										"id": 5121
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 38,
									"character": 68
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5203,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5199,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5200,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5201,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5201
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IUserFormProps",
												"id": 5110
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5204,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5205,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 5206,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5207,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5202,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5112
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5161,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5162,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5167,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5168,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5169,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5170,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5176,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5177,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5178,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5179,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5112
													}
												]
											}
										},
										{
											"id": 5180,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5146,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5147,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5148,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5149,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5125,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5126,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 51,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5154,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5155,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5156,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5157,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5112
													}
												]
											}
										},
										{
											"id": 5158,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5159,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5160,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5163,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5164,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5165,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5166,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5144,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5145,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5171,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5172,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5173,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5174,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5112
													}
												]
											}
										},
										{
											"id": 5175,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5194,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 5195,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5196,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5197,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 5198,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5127,
							"name": "getCountries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5128,
									"name": "getCountries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 54,
									"character": 23
								}
							]
						},
						{
							"id": 5150,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5151,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5152,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5153,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5112
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5129,
							"name": "handleSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5130,
									"name": "handleSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5131,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 61,
									"character": 23
								}
							]
						},
						{
							"id": 5136,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5137,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 102,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5132,
							"name": "setImage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5133,
									"name": "setImage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5134,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5135,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 88,
									"character": 19
								}
							]
						},
						{
							"id": 5181,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 5182,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5183,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5184,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5186,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5187,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5112
																					}
																				]
																			}
																		},
																		{
																			"id": 5188,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IUserFormProps",
																						"id": 5110
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5189,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5190,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5191,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5192,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 5193,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5139,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5140,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5141,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IUserFormProps",
														"id": 5110
													}
												]
											}
										},
										{
											"id": 5142,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5112
													}
												]
											}
										},
										{
											"id": 5143,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5122
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5203,
								5199,
								5204,
								5202
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5161,
								5167,
								5176,
								5146,
								5125,
								5154,
								5159,
								5163,
								5144,
								5171,
								5194,
								5127,
								5150,
								5129,
								5136,
								5132,
								5181,
								5139
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 38,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IUserFormProps",
									"id": 5110
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5112
								}
							]
						}
					]
				},
				{
					"id": 5112,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5117,
							"name": "countries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 35,
									"character": 13
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reflection",
										"declaration": {
											"id": 5118,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5119,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "containers/KYC/index.tsx",
															"line": 35,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5120,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "containers/KYC/index.tsx",
															"line": 35,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														5119,
														5120
													]
												}
											],
											"sources": [
												{
													"fileName": "containers/KYC/index.tsx",
													"line": 35,
													"character": 17
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5113,
							"name": "cover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 31,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5115,
							"name": "passid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5114,
							"name": "passport",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 32,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5116,
							"name": "submited",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/KYC/index.tsx",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5117,
								5113,
								5115,
								5114,
								5116
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 30,
							"character": 16
						}
					]
				},
				{
					"id": 5110,
					"name": "IUserFormProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5111,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/form/Form.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "WrappedFormUtils"
							},
							"overwrites": {
								"type": "reference",
								"name": "FormComponentProps.form"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FormComponentProps.form"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5111
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 24,
							"character": 24
						},
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 27,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FormComponentProps"
						},
						{
							"type": "reference",
							"name": "FormComponentProps"
						}
					]
				},
				{
					"id": 5208,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				},
				{
					"id": 5209,
					"name": "Option",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "OptionProps"
							}
						]
					},
					"defaultValue": " Select.Option"
				},
				{
					"id": 5210,
					"name": "RadioButton",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 15,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "RadioButton"
					},
					"defaultValue": " Radio.Button"
				},
				{
					"id": 5211,
					"name": "RadioGroup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 16,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "RadioGroup"
					},
					"defaultValue": " Radio.Group"
				},
				{
					"id": 5212,
					"name": "coverImg",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 18,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/cover.png\")"
				},
				{
					"id": 5215,
					"name": "newApi",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 22,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "kycApi",
						"id": 2374
					},
					"defaultValue": " Api.getInstance()"
				},
				{
					"id": 5213,
					"name": "personalImg",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 19,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/personal.png\")"
				},
				{
					"id": 5214,
					"name": "selfieImg",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/KYC/index.tsx",
							"line": 20,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/selfie.png\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5121
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5112,
						5110
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5208,
						5209,
						5210,
						5211,
						5212,
						5215,
						5213,
						5214
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/KYC/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5216,
			"name": "\"containers/Landing/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/Landing/index.tsx",
			"children": [
				{
					"id": 5219,
					"name": "LandingContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 5229,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5220,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5221,
									"name": "new LandingContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5222,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 5217
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LandingContainer",
										"id": 5219
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Landing/index.tsx",
									"line": 22,
									"character": 64
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5296,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5292,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5293,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5294,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5294
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 5217
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5297,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5298,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 5299,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5300,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5295,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5218
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5254,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5255,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5260,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5261,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5262,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5263,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5269,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5270,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5271,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5272,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5218
													}
												]
											}
										},
										{
											"id": 5273,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5239,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5240,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5241,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5242,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5230,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5231,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5247,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5248,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5249,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5250,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5218
													}
												]
											}
										},
										{
											"id": 5251,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5252,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5253,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5256,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5257,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5258,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5259,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5237,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5238,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5264,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5265,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5266,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5267,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5218
													}
												]
											}
										},
										{
											"id": 5268,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5287,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5288,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5289,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5290,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5291,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5243,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5244,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5245,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5246,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5218
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5225,
							"name": "login",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5226,
									"name": "login",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Landing/index.tsx",
									"line": 131,
									"character": 17
								}
							]
						},
						{
							"id": 5227,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5228,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Landing/index.tsx",
									"line": 135,
									"character": 20
								}
							]
						},
						{
							"id": 5223,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5224,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/Landing/index.tsx",
									"line": 29,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5274,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5275,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5276,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5277,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5278,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5279,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5280,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5218
																					}
																				]
																			}
																		},
																		{
																			"id": 5281,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 5217
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5282,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5283,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5284,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5285,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5286,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5232,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5233,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5234,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5217
													}
												]
											}
										},
										{
											"id": 5235,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5218
													}
												]
											}
										},
										{
											"id": 5236,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5220
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5296,
								5292,
								5297,
								5295
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5254,
								5260,
								5269,
								5239,
								5230,
								5247,
								5252,
								5256,
								5237,
								5264,
								5287,
								5243,
								5225,
								5227,
								5223,
								5274,
								5232
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 22,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 5217
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5218
								}
							]
						}
					]
				},
				{
					"id": 5217,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 16,
							"character": 16
						}
					]
				},
				{
					"id": 5218,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 5309,
					"name": "Content",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 13,
							"character": 38
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasicProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 5307,
					"name": "Footer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 13,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasicProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 5306,
					"name": "Header",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasicProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 5310,
					"name": "Meta",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5311,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 5312,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5313,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CardMetaProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							]
						}
					}
				},
				{
					"id": 5308,
					"name": "Sider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 13,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SiderProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 5302,
					"name": "home1",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/home1.png\")"
				},
				{
					"id": 5303,
					"name": "home2",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/home2.png\")"
				},
				{
					"id": 5304,
					"name": "home3",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 9,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/home3.png\")"
				},
				{
					"id": 5301,
					"name": "logo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 5,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/logo.png\")"
				},
				{
					"id": 5305,
					"name": "user",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/Landing/index.tsx",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5219
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5217,
						5218
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5309,
						5307,
						5306,
						5310,
						5308,
						5302,
						5303,
						5304,
						5301,
						5305
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/Landing/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5314,
			"name": "\"containers/NotFound/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/NotFound/index.tsx",
			"children": [
				{
					"id": 5317,
					"name": "NotFoundContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 5323,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5318,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5319,
									"name": "new NotFoundContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5320,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 5315
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NotFoundContainer",
										"id": 5317
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/NotFound/index.tsx",
									"line": 9,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5390,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5386,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5387,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5388,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5388
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 5315
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5391,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5392,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 5393,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5394,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5389,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5316
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5348,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5349,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5354,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5355,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5356,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5357,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5363,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5364,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5365,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5366,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5316
													}
												]
											}
										},
										{
											"id": 5367,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5333,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5334,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5335,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5336,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5324,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5325,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5341,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5342,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5343,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5344,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5316
													}
												]
											}
										},
										{
											"id": 5345,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5346,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5347,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5350,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5351,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5352,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5353,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5331,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5332,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5358,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5359,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5360,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5361,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5316
													}
												]
											}
										},
										{
											"id": 5362,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5381,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5382,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5383,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5384,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5385,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5337,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5338,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5339,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5340,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5316
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5321,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5322,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/NotFound/index.tsx",
									"line": 14,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5368,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5369,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5370,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5371,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5372,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5373,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5374,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5316
																					}
																				]
																			}
																		},
																		{
																			"id": 5375,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 5315
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5376,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5377,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5378,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5379,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5380,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5326,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5327,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5328,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5315
													}
												]
											}
										},
										{
											"id": 5329,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5316
													}
												]
											}
										},
										{
											"id": 5330,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5318
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5390,
								5386,
								5391,
								5389
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5348,
								5354,
								5363,
								5333,
								5324,
								5341,
								5346,
								5350,
								5331,
								5358,
								5381,
								5337,
								5321,
								5368,
								5326
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/NotFound/index.tsx",
							"line": 9,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 5315
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5316
								}
							]
						}
					]
				},
				{
					"id": 5315,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/NotFound/index.tsx",
							"line": 3,
							"character": 16
						}
					]
				},
				{
					"id": 5316,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/NotFound/index.tsx",
							"line": 6,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5317
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5315,
						5316
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/NotFound/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5395,
			"name": "\"containers/User/components/Login/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/User/components/Login/index.tsx",
			"children": [
				{
					"id": 5406,
					"name": "Login",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"typeParameter": [
						{
							"id": 5420,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5407,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5408,
									"name": "new Login",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5409,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 5396
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Login",
										"id": 5406
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 27,
									"character": 53
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5487,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5483,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5484,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5485,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5485
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 5396
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5488,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5489,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 5490,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5491,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5486,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5403
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5445,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5446,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5451,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5452,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5453,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5454,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5460,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5461,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5462,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5463,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5403
													}
												]
											}
										},
										{
											"id": 5464,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5430,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5431,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5432,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5433,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5421,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5422,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5438,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5439,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5440,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5441,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5403
													}
												]
											}
										},
										{
											"id": 5442,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5443,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5444,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5447,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5448,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5449,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5450,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5428,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5429,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5455,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5456,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5457,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5458,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5403
													}
												]
											}
										},
										{
											"id": 5459,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5478,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 5479,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5480,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5481,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 5482,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5434,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5435,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5436,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5437,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5403
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5415,
							"name": "handleSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5416,
									"name": "handleSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5417,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 44,
									"character": 23
								}
							]
						},
						{
							"id": 5418,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5419,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 94,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5410,
							"name": "setCookie",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5411,
									"name": "setCookie",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5412,
											"name": "cname",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5413,
											"name": "cvalue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5414,
											"name": "exdays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 37,
									"character": 20
								}
							]
						},
						{
							"id": 5465,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 5466,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5467,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5468,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5469,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5470,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5471,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5403
																					}
																				]
																			}
																		},
																		{
																			"id": 5472,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 5396
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5473,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5474,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5475,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5476,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 5477,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5423,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5424,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5425,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5396
													}
												]
											}
										},
										{
											"id": 5426,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5403
													}
												]
											}
										},
										{
											"id": 5427,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5407
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5487,
								5483,
								5488,
								5486
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5445,
								5451,
								5460,
								5430,
								5421,
								5438,
								5443,
								5447,
								5428,
								5455,
								5478,
								5434,
								5415,
								5418,
								5410,
								5465,
								5423
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 27,
							"character": 11
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 5396
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5403
								}
							]
						}
					]
				},
				{
					"id": 5396,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5397,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5402,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/form/Form.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "WrappedFormUtils"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FormComponentProps.form"
							}
						},
						{
							"id": 5398,
							"name": "setUser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5399,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 5400,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5401,
													"name": "user",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "containers/User/components/Login/index.tsx",
											"line": 19,
											"character": 12
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5397,
								5402,
								5398
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 17,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FormComponentProps"
						}
					]
				},
				{
					"id": 5403,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5404,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 23,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5405,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/User/components/Login/index.tsx",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5404,
								5405
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 22,
							"character": 16
						}
					]
				},
				{
					"id": 5492,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				},
				{
					"id": 5506,
					"name": "WrappedNormalLoginForm",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 150,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "RcBaseFormProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5507,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					},
					"defaultValue": " Form.create()(connect(mapStateToProps, mapDispatchToProps)(Login))"
				},
				{
					"id": 5493,
					"name": "logo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 15,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../../../assets/images/logo.png\")"
				},
				{
					"id": 5494,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 5495,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5496,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5497,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5498,
											"name": "setUser",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 5499,
													"name": "setUser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5500,
															"name": "user",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "containers/User/components/Login/index.tsx",
													"line": 140,
													"character": 15
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												5498
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 138,
							"character": 27
						}
					]
				},
				{
					"id": 5501,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 5502,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5503,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5504,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5505,
											"name": "email",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "containers/User/components/Login/index.tsx",
													"line": 146,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.email"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												5505
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "containers/User/components/Login/index.tsx",
							"line": 144,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5406
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5396,
						5403
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5492,
						5506,
						5493
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5494,
						5501
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/User/components/Login/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5508,
			"name": "\"containers/User/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/User/index.tsx",
			"children": [
				{
					"id": 5512,
					"name": "UserContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 5518,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5513,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5514,
									"name": "new UserContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5515,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 5509
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UserContainer",
										"id": 5512
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/index.tsx",
									"line": 19,
									"character": 61
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5585,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5581,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5582,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5583,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5583
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 5509
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5586,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5587,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 5588,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5589,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5584,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5510
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5543,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5544,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5549,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5550,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5551,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5552,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5558,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5559,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5560,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5561,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5510
													}
												]
											}
										},
										{
											"id": 5562,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5528,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5529,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5530,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5531,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5519,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5520,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5536,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5537,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5538,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5539,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5510
													}
												]
											}
										},
										{
											"id": 5540,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5541,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5542,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5545,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5546,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5547,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5548,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5526,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5527,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5553,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5554,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5555,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5556,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5510
													}
												]
											}
										},
										{
											"id": 5557,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5576,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5577,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5578,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5579,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5580,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5532,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5533,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5534,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5535,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5510
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5516,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5517,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/User/index.tsx",
									"line": 27,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5563,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5564,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5565,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5566,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5567,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5568,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5569,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5510
																					}
																				]
																			}
																		},
																		{
																			"id": 5570,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 5509
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5571,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5572,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5573,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5574,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5575,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5521,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5522,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5523,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5509
													}
												]
											}
										},
										{
											"id": 5524,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5510
													}
												]
											}
										},
										{
											"id": 5525,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5513
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5585,
								5581,
								5586,
								5584
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5543,
								5549,
								5558,
								5528,
								5519,
								5536,
								5541,
								5545,
								5526,
								5553,
								5576,
								5532,
								5516,
								5563,
								5521
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/User/index.tsx",
							"line": 19,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 5509
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5510
								}
							]
						}
					]
				},
				{
					"id": 5509,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/User/index.tsx",
							"line": 12,
							"character": 16
						}
					]
				},
				{
					"id": 5510,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5511,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "containers/User/index.tsx",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5511
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/User/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 5590,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "containers/User/index.tsx",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5512
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5509,
						5510
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5590
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/User/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4591,
			"name": "\"lib/api-old/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/api-old/index.ts",
			"children": [
				{
					"id": 4592,
					"name": "API",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4602,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4603,
									"name": "new API",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "API",
										"id": 4592
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 16,
									"character": 48
								}
							]
						},
						{
							"id": 4597,
							"name": "AuthToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 4598,
							"name": "axios",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4596,
							"name": "baseURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4599,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 16,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4600,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4601,
											"name": "Authorization",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "lib/api-old/index.ts",
													"line": 16,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												4601
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/api-old/index.ts",
											"line": 16,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 4595,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 11,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "API",
								"id": 4592
							}
						},
						{
							"id": 4604,
							"name": "CreateAxiosInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4605,
									"name": "CreateAxiosInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 23,
									"character": 30
								}
							]
						},
						{
							"id": 4616,
							"name": "GetCountries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4617,
									"name": "GetCountries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 55,
									"character": 23
								}
							]
						},
						{
							"id": 4627,
							"name": "GetUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4628,
									"name": "GetUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4629,
											"name": "term",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4630,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4631,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 72,
									"character": 19
								}
							]
						},
						{
							"id": 4623,
							"name": "changeKycStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4624,
									"name": "changeKycStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4625,
											"name": "uid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4626,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 67,
									"character": 26
								}
							]
						},
						{
							"id": 4612,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4613,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 41,
									"character": 18
								}
							]
						},
						{
							"id": 4621,
							"name": "getAllKYC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4622,
									"name": "getAllKYC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 63,
									"character": 20
								}
							]
						},
						{
							"id": 4614,
							"name": "getHeaders",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4615,
									"name": "getHeaders",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 45,
									"character": 21
								}
							]
						},
						{
							"id": 4618,
							"name": "postKYC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4619,
									"name": "postKYC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4620,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 59,
									"character": 18
								}
							]
						},
						{
							"id": 4609,
							"name": "setAuthToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4610,
									"name": "setAuthToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4611,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 36,
									"character": 23
								}
							]
						},
						{
							"id": 4606,
							"name": "setBaseURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4607,
									"name": "setBaseURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4608,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 31,
									"character": 21
								}
							]
						},
						{
							"id": 4593,
							"name": "getInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4594,
									"name": "getInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "API",
										"id": 4592
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-old/index.ts",
									"line": 5,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4602
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4597,
								4598,
								4596,
								4599,
								4595
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4604,
								4616,
								4627,
								4623,
								4612,
								4621,
								4614,
								4618,
								4609,
								4606,
								4593
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api-old/index.ts",
							"line": 4,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4592
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api-old/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5703,
			"name": "\"lib/api-old/interfaces\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/api-old/interfaces.ts",
			"sources": [
				{
					"fileName": "lib/api-old/interfaces.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1087,
			"name": "\"lib/api/btc\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/api/btc.tsx",
			"children": [
				{
					"id": 1088,
					"name": "btcApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1095,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1097,
									"name": "new btcApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1098,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1099,
											"name": "logger",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Logger",
												"id": 1231
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "btcApi",
										"id": 1088
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 43,
									"character": 30
								}
							]
						},
						{
							"id": 1092,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 41,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://192.168.1.100:9192/accounting/btc\""
						},
						{
							"id": 1093,
							"name": "errorHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 42,
									"character": 25
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "CallbackHandler",
									"id": 1203
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1094,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 43,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1096,
							"name": "logger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 45,
									"character": 49
								}
							],
							"type": {
								"type": "reference",
								"name": "Logger",
								"id": 1231
							}
						},
						{
							"id": 1091,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 40,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "btcApi",
								"id": 1088
							}
						},
						{
							"id": 1102,
							"name": "SetHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1103,
									"name": "SetHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1104,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1105,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 55,
									"character": 20
								}
							]
						},
						{
							"id": 1106,
							"name": "addErrorHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1107,
									"name": "addErrorHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1108,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 1203
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 59,
									"character": 19
								}
							]
						},
						{
							"id": 1154,
							"name": "allBalancesUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1155,
									"name": "allBalancesUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1156,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1157,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1159,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 247,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1158,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 246,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1159,
																1158
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 245,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 245,
									"character": 23
								}
							]
						},
						{
							"id": 1174,
							"name": "getCashdeskBalanceUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1175,
									"name": "getCashdeskBalanceUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1176,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1177,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1180,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 327,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1179,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 326,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1178,
															"name": "cashdesk",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 325,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1180,
																1179,
																1178
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 324,
															"character": 42
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 324,
									"character": 30
								}
							]
						},
						{
							"id": 1139,
							"name": "getDepositUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1140,
									"name": "getDepositUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1141,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1142,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1144,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 183,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1143,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 182,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1144,
																1143
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 181,
															"character": 34
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 181,
									"character": 22
								}
							]
						},
						{
							"id": 1145,
							"name": "getDepositsUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1146,
									"name": "getDepositsUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1147,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1148,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1153,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 209,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1152,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 208,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1149,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 205,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1150,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 206,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1151,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 207,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1153,
																1152,
																1149,
																1150,
																1151
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 204,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 204,
									"character": 23
								}
							]
						},
						{
							"id": 1100,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1101,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 51,
									"character": 13
								}
							]
						},
						{
							"id": 1181,
							"name": "getMasterUserBalanceUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1182,
									"name": "getMasterUserBalanceUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1183,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1184,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1187,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 355,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1186,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 354,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1185,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 353,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1187,
																1186,
																1185
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 352,
															"character": 44
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 352,
									"character": 32
								}
							]
						},
						{
							"id": 1160,
							"name": "getUserAllBalanceUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1161,
									"name": "getUserAllBalanceUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1162,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1163,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1166,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 271,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1165,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 270,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1164,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 269,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1166,
																1165,
																1164
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 268,
															"character": 41
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 268,
									"character": 29
								}
							]
						},
						{
							"id": 1167,
							"name": "getUserBalanceByCashDeskUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1168,
									"name": "getUserBalanceByCashDeskUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1169,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1170,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1173,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 299,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1172,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 298,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1171,
															"name": "cashdesk",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 297,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1173,
																1172,
																1171
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 296,
															"character": 48
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 296,
									"character": 36
								}
							]
						},
						{
							"id": 1194,
							"name": "getWithdrawUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1195,
									"name": "getWithdrawUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1196,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1197,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1202,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 408,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1201,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 407,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1198,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 404,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1199,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 405,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1200,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 406,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1202,
																1201,
																1198,
																1199,
																1200
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 403,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 403,
									"character": 23
								}
							]
						},
						{
							"id": 1188,
							"name": "getWithdrawUsingGET_1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1189,
									"name": "getWithdrawUsingGET_1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1190,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1191,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1193,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 382,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1192,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 381,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1193,
																1192
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 380,
															"character": 37
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 380,
									"character": 25
								}
							]
						},
						{
							"id": 1125,
							"name": "handleUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1126,
									"name": "handleUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1127,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1128,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1131,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 128,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1130,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 127,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1129,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 126,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1131,
																1130,
																1129
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 125,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 125,
									"character": 18
								}
							]
						},
						{
							"id": 1132,
							"name": "handleUsingGET_1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1133,
									"name": "handleUsingGET_1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1134,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1135,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1138,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 156,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1137,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 155,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1136,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 154,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1138,
																1137,
																1136
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 153,
															"character": 32
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 153,
									"character": 20
								}
							]
						},
						{
							"id": 1119,
							"name": "linksUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1120,
									"name": "linksUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1121,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1122,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1124,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 104,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1123,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/btc.tsx",
																	"line": 103,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1124,
																1123
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/btc.tsx",
															"line": 102,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 102,
									"character": 17
								}
							]
						},
						{
							"id": 1109,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1110,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1111,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1112,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1113,
											"name": "body",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1114,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1115,
											"name": "queryParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1116,
											"name": "form",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1117,
											"name": "reject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 1203
											}
										},
										{
											"id": 1118,
											"name": "resolve",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 1203
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 63,
									"character": 19
								}
							]
						},
						{
							"id": 1089,
							"name": "getInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1090,
									"name": "getInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "btcApi",
										"id": 1088
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 34,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1095
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1092,
								1093,
								1094,
								1096,
								1091
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1102,
								1106,
								1154,
								1174,
								1139,
								1145,
								1100,
								1181,
								1160,
								1167,
								1194,
								1188,
								1125,
								1132,
								1119,
								1109,
								1089
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 33,
							"character": 27
						}
					]
				},
				{
					"id": 1208,
					"name": "Balance",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1209,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1210,
									"name": "amount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 8,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1211,
									"name": "description",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 9,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1212,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 10,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1213,
									"name": "strAmount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 11,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1210,
										1211,
										1212,
										1213
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 7,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 1203,
					"name": "CallbackHandler",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 6,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1204,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1205,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1206,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1207,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 6,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 1214,
					"name": "Deposit",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1215,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1216,
									"name": "amount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 14,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1217,
									"name": "date",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 15,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1218,
									"name": "strAmount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 16,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1216,
										1217,
										1218
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 13,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 1219,
					"name": "Link",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1220,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1221,
									"name": "href",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 19,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1222,
									"name": "templated",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 20,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1221,
										1222
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 18,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 1231,
					"name": "Logger",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 30,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1232,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1233,
									"name": "log",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 31,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1234,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1235,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1236,
															"name": "line",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/api/btc.tsx",
													"line": 31,
													"character": 8
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1233
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 30,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 1223,
					"name": "MapstringLink",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 22,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1224,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 22,
									"character": 20
								}
							]
						}
					}
				},
				{
					"id": 1225,
					"name": "Withdraw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/btc.tsx",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1226,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1227,
									"name": "amount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 24,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1228,
									"name": "date",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 25,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1229,
									"name": "destination",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 26,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1230,
									"name": "strAmount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/btc.tsx",
											"line": 27,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1227,
										1228,
										1229,
										1230
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/btc.tsx",
									"line": 23,
									"character": 15
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1088
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1208,
						1203,
						1214,
						1219,
						1231,
						1223,
						1225
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api/btc.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3084,
			"name": "\"lib/api/invoice\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/api/invoice.tsx",
			"children": [
				{
					"id": 3198,
					"name": "invoiceApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3205,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3207,
									"name": "new invoiceApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3208,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3209,
											"name": "logger",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Logger",
												"id": 3193
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "invoiceApi",
										"id": 3198
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 157,
									"character": 30
								}
							]
						},
						{
							"id": 3202,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 155,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://87.98.188.77:9193\""
						},
						{
							"id": 3203,
							"name": "errorHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 156,
									"character": 25
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "CallbackHandler",
									"id": 3354
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 3204,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 157,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3206,
							"name": "logger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 159,
									"character": 47
								}
							],
							"type": {
								"type": "reference",
								"name": "Logger",
								"id": 3193
							}
						},
						{
							"id": 3201,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 154,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "invoiceApi",
								"id": 3198
							}
						},
						{
							"id": 3212,
							"name": "SetHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3213,
									"name": "SetHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3214,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3215,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 169,
									"character": 20
								}
							]
						},
						{
							"id": 3216,
							"name": "addErrorHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3217,
									"name": "addErrorHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3218,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 3354
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 173,
									"character": 26
								}
							]
						},
						{
							"id": 3248,
							"name": "addInvoiceUsingPOST",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3249,
									"name": "addInvoiceUsingPOST",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3250,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3251,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3254,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 302,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3253,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 301,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3252,
															"name": "inv",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 300,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "InvRequest",
																"id": 3098
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3254,
																3253,
																3252
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 299,
															"character": 42
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 299,
									"character": 30
								}
							]
						},
						{
							"id": 3291,
							"name": "addMerchantUsingPOST",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3292,
									"name": "addMerchantUsingPOST",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3293,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3294,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3297,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 532,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3296,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 531,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3295,
															"name": "merchant",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 530,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Merchant",
																"id": 3141
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3297,
																3296,
																3295
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 529,
															"character": 43
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 529,
									"character": 31
								}
							]
						},
						{
							"id": 3276,
							"name": "changeCoinUsingPUT",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3277,
									"name": "changeCoinUsingPUT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3278,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3279,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3282,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 455,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3281,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 454,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3280,
															"name": "changeCode",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 453,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "ChangeCoinRequest",
																"id": 3085
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3282,
																3281,
																3280
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 452,
															"character": 41
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 452,
									"character": 29
								}
							]
						},
						{
							"id": 3255,
							"name": "getAllInvoicev2UsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3256,
									"name": "getAllInvoicev2UsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3257,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3258,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3266,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 344,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3265,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 343,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3259,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 337,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3260,
															"name": "dir",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 338,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3261,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 339,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3262,
															"name": "page",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 340,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3263,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 341,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3264,
															"name": "status",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 342,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3266,
																3265,
																3259,
																3260,
																3261,
																3262,
																3263,
																3264
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 336,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 336,
									"character": 34
								}
							]
						},
						{
							"id": 3316,
							"name": "getAllUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3317,
									"name": "getAllUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3318,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3319,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3326,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 654,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3325,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 653,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3320,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 648,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3321,
															"name": "dir",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 649,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3322,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 650,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3323,
															"name": "page",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 651,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3324,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 652,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3326,
																3325,
																3320,
																3321,
																3322,
																3323,
																3324
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 647,
															"character": 37
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 647,
									"character": 25
								}
							]
						},
						{
							"id": 3239,
							"name": "getByIdUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3240,
									"name": "getByIdUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3241,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3242,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3247,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 261,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3246,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 260,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3243,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 257,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3244,
															"name": "id",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 258,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3245,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 259,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3247,
																3246,
																3243,
																3244,
																3245
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 256,
															"character": 38
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 256,
									"character": 26
								}
							]
						},
						{
							"id": 3267,
							"name": "getByOrderIdUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3268,
									"name": "getByOrderIdUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3269,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3270,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3275,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 404,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3274,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 403,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3271,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 400,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3272,
															"name": "id",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 401,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3273,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 402,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3275,
																3274,
																3271,
																3272,
																3273
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 399,
															"character": 43
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 399,
									"character": 31
								}
							]
						},
						{
							"id": 3210,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3211,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 165,
									"character": 20
								}
							]
						},
						{
							"id": 3298,
							"name": "getMerchantDebtUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3299,
									"name": "getMerchantDebtUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3300,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3301,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3308,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 573,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3307,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 572,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3302,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 567,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3303,
															"name": "dir",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 568,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3304,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 569,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3305,
															"name": "page",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 570,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3306,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 571,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3308,
																3307,
																3302,
																3303,
																3304,
																3305,
																3306
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 566,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 566,
									"character": 34
								}
							]
						},
						{
							"id": 3283,
							"name": "getMerchantInfoUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3284,
									"name": "getMerchantInfoUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3285,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3286,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3290,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 490,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3289,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 489,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3287,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 487,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3288,
															"name": "token",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 488,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3290,
																3289,
																3287,
																3288
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 486,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 486,
									"character": 34
								}
							]
						},
						{
							"id": 3334,
							"name": "getPreSettleUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3335,
									"name": "getPreSettleUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3336,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3337,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3343,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 748,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3342,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 747,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3338,
															"name": "apikey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 743,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3339,
															"name": "invoices",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 744,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3340,
															"name": "mermob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 745,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3341,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 746,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3343,
																3342,
																3338,
																3339,
																3340,
																3341
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 742,
															"character": 43
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 742,
									"character": 31
								}
							]
						},
						{
							"id": 3309,
							"name": "getTokenUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3310,
									"name": "getTokenUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3311,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3312,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3315,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 617,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3314,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 616,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3313,
															"name": "mob",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 615,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3315,
																3314,
																3313
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 614,
															"character": 39
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 614,
									"character": 27
								}
							]
						},
						{
							"id": 3225,
							"name": "handleUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3226,
									"name": "handleUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3227,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3228,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3231,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 203,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3230,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 202,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3229,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 201,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3231,
																3230,
																3229
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 200,
															"character": 37
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 200,
									"character": 25
								}
							]
						},
						{
							"id": 3232,
							"name": "handleUsingGET_1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3233,
									"name": "handleUsingGET_1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3234,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3235,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3238,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 231,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3237,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 230,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3236,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 229,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3238,
																3237,
																3236
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 228,
															"character": 39
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 228,
									"character": 27
								}
							]
						},
						{
							"id": 3219,
							"name": "linksUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3220,
									"name": "linksUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3221,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3222,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3224,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 179,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3223,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 178,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3224,
																3223
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 177,
															"character": 36
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 177,
									"character": 24
								}
							]
						},
						{
							"id": 3344,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3345,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3346,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3347,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3348,
											"name": "body",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3349,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3350,
											"name": "queryParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3351,
											"name": "form",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3352,
											"name": "reject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 3354
											}
										},
										{
											"id": 3353,
											"name": "resolve",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 3354
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 785,
									"character": 19
								}
							]
						},
						{
							"id": 3327,
							"name": "settleUp1UsingPOST",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3328,
									"name": "settleUp1UsingPOST",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3329,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3330,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3333,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 708,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3332,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 707,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 3331,
															"name": "requestSettle",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/invoice.tsx",
																	"line": 706,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "RequestSettle",
																"id": 3166
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3333,
																3332,
																3331
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/invoice.tsx",
															"line": 705,
															"character": 41
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 705,
									"character": 29
								}
							]
						},
						{
							"id": 3199,
							"name": "getInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3200,
									"name": "getInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "invoiceApi",
										"id": 3198
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 148,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3205
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3202,
								3203,
								3204,
								3206,
								3201
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3212,
								3216,
								3248,
								3291,
								3276,
								3255,
								3316,
								3239,
								3267,
								3210,
								3298,
								3283,
								3334,
								3309,
								3225,
								3232,
								3219,
								3344,
								3327,
								3199
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 147,
							"character": 31
						}
					]
				},
				{
					"id": 3085,
					"name": "ChangeCoinRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3086,
							"name": "coinSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 8,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3087,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 9,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3088,
							"name": "inform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 10,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3089,
							"name": "invoiceId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3090,
							"name": "mobileNum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3086,
								3087,
								3088,
								3089,
								3090
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 7,
							"character": 27
						}
					]
				},
				{
					"id": 3091,
					"name": "Debt",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3092,
							"name": "cardNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 15,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3093,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3094,
							"name": "mobile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 17,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3095,
							"name": "settleUpInvoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 18,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "settleUpInvoices",
											"id": 3189
										}
									},
									{
										"type": "reference",
										"name": "settleUpInvoices",
										"id": 3189
									}
								]
							}
						},
						{
							"id": 3096,
							"name": "shopName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3097,
							"name": "sum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 23,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3092,
								3093,
								3094,
								3095,
								3096,
								3097
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 14,
							"character": 14
						}
					]
				},
				{
					"id": 3098,
					"name": "InvRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3099,
							"name": "apikey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3100,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 27,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3101,
							"name": "mobile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 28,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3102,
							"name": "orderId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3103,
							"name": "price",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 30,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3099,
								3100,
								3101,
								3102,
								3103
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 25,
							"character": 20
						}
					]
				},
				{
					"id": 3104,
					"name": "Invoice",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3105,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 33,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3106,
							"name": "blockchainCoin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 34,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "tbitcoin"
									},
									{
										"type": "stringLiteral",
										"value": "bitcoin"
									},
									{
										"type": "stringLiteral",
										"value": "ethereum"
									},
									{
										"type": "stringLiteral",
										"value": "usdollar"
									},
									{
										"type": "stringLiteral",
										"value": "iranrial"
									},
									{
										"type": "stringLiteral",
										"value": "syrianpound"
									},
									{
										"type": "stringLiteral",
										"value": "euro"
									}
								]
							}
						},
						{
							"id": 3107,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3108,
							"name": "cryptoAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 36,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3109,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3110,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 38,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3111,
							"name": "failed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 39,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3112,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3113,
							"name": "orderid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 41,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3114,
							"name": "qr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3115,
							"name": "regdatetime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 43,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3116,
							"name": "settleup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 44,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Settleup",
								"id": 3176
							}
						},
						{
							"id": 3117,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 45,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3118,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 46,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3119,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 47,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3120,
							"name": "userdatetime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 48,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3121,
							"name": "waiting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 49,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3105,
								3106,
								3107,
								3108,
								3109,
								3110,
								3111,
								3112,
								3113,
								3114,
								3115,
								3116,
								3117,
								3118,
								3119,
								3120,
								3121
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 32,
							"character": 17
						}
					]
				},
				{
					"id": 3122,
					"name": "InvoiceResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3123,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 52,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3124,
							"name": "cryptoAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 53,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3125,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 54,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3126,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 55,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3127,
							"name": "gatewayUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 56,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3128,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3129,
							"name": "orderId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3130,
							"name": "price",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 59,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3131,
							"name": "qr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3132,
							"name": "remaining",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3133,
							"name": "shopName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 62,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3134,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 63,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3135,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 64,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3136,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 65,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3137,
							"name": "timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 66,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3123,
								3124,
								3125,
								3126,
								3127,
								3128,
								3129,
								3130,
								3131,
								3132,
								3133,
								3134,
								3135,
								3136,
								3137
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 51,
							"character": 25
						}
					]
				},
				{
					"id": 3138,
					"name": "Link",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3139,
							"name": "href",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 69,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3140,
							"name": "templated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 70,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3139,
								3140
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 68,
							"character": 14
						}
					]
				},
				{
					"id": 3193,
					"name": "Logger",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3194,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 145,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3195,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3196,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3197,
													"name": "line",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/api/invoice.tsx",
											"line": 145,
											"character": 8
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3194
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 144,
							"character": 16
						}
					]
				},
				{
					"id": 3141,
					"name": "Merchant",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3142,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 73,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3143,
							"name": "cardNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 74,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3144,
							"name": "mobile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 75,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3145,
							"name": "pushToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 76,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3146,
							"name": "shopName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 77,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3147,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 78,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3142,
								3143,
								3144,
								3145,
								3146,
								3147
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 72,
							"character": 18
						}
					]
				},
				{
					"id": 3148,
					"name": "PaginationInvoiceResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3149,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 81,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "InvoiceResponse",
											"id": 3122
										}
									},
									{
										"type": "reference",
										"name": "InvoiceResponse",
										"id": 3122
									}
								]
							}
						},
						{
							"id": 3150,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 85,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3151,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 86,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3152,
							"name": "next",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 87,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3153,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 88,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3154,
							"name": "previous",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 89,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3155,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 90,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3156,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3149,
								3150,
								3151,
								3152,
								3153,
								3154,
								3155,
								3156
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 80,
							"character": 35
						}
					]
				},
				{
					"id": 3157,
					"name": "PaginationVuMerchantdebt",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3158,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "VuMerchantdebt",
											"id": 3182
										}
									},
									{
										"type": "reference",
										"name": "VuMerchantdebt",
										"id": 3182
									}
								]
							}
						},
						{
							"id": 3159,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 98,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3160,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 99,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3161,
							"name": "next",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 100,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3162,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 101,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3163,
							"name": "previous",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 102,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3164,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 103,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3165,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 104,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3158,
								3159,
								3160,
								3161,
								3162,
								3163,
								3164,
								3165
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 93,
							"character": 34
						}
					]
				},
				{
					"id": 3166,
					"name": "RequestSettle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3167,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 107,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3168,
							"name": "apikey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3169,
							"name": "datetime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 109,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3170,
							"name": "destCard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 110,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3171,
							"name": "invoiceIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 111,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3172,
							"name": "merMobile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 115,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3173,
							"name": "mob",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 116,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3174,
							"name": "originCard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 117,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3175,
							"name": "txid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3167,
								3168,
								3169,
								3170,
								3171,
								3172,
								3173,
								3174,
								3175
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 106,
							"character": 23
						}
					]
				},
				{
					"id": 3176,
					"name": "Settleup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3177,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 121,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3178,
							"name": "destCard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 122,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3179,
							"name": "invoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 123,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Invoice",
											"id": 3104
										}
									},
									{
										"type": "reference",
										"name": "Invoice",
										"id": 3104
									}
								]
							}
						},
						{
							"id": 3180,
							"name": "originCard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 127,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3181,
							"name": "txid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 128,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3177,
								3178,
								3179,
								3180,
								3181
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 120,
							"character": 18
						}
					]
				},
				{
					"id": 3182,
					"name": "VuMerchantdebt",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3183,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 131,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3184,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 132,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3185,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 133,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3186,
							"name": "merMobile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 134,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3187,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 135,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3188,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 136,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3183,
								3184,
								3185,
								3186,
								3187,
								3188
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 130,
							"character": 24
						}
					]
				},
				{
					"id": 3189,
					"name": "settleUpInvoices",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3190,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 139,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3191,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 140,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3192,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 141,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3190,
								3191,
								3192
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 138,
							"character": 26
						}
					]
				},
				{
					"id": 3354,
					"name": "CallbackHandler",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/invoice.tsx",
							"line": 6,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3355,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 3356,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3357,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3358,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/invoice.tsx",
									"line": 6,
									"character": 22
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3198
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3085,
						3091,
						3098,
						3104,
						3122,
						3138,
						3193,
						3141,
						3148,
						3157,
						3166,
						3176,
						3182,
						3189
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3354
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api/invoice.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2373,
			"name": "\"lib/api/kyc\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/api/kyc.tsx",
			"children": [
				{
					"id": 2374,
					"name": "kycApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2381,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2383,
									"name": "new kycApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2384,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2385,
											"name": "logger",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Logger",
												"id": 2625
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "kycApi",
										"id": 2374
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 106,
									"character": 30
								}
							]
						},
						{
							"id": 2378,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 104,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://87.98.188.77:9092\""
						},
						{
							"id": 2379,
							"name": "errorHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 105,
									"character": 25
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "CallbackHandler",
									"id": 2533
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 2380,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 106,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2382,
							"name": "logger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 108,
									"character": 49
								}
							],
							"type": {
								"type": "reference",
								"name": "Logger",
								"id": 2625
							}
						},
						{
							"id": 2377,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 103,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "kycApi",
								"id": 2374
							}
						},
						{
							"id": 2388,
							"name": "SetHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2389,
									"name": "SetHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2390,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2391,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 118,
									"character": 20
								}
							]
						},
						{
							"id": 2392,
							"name": "addErrorHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2393,
									"name": "addErrorHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2394,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 2533
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 122,
									"character": 19
								}
							]
						},
						{
							"id": 2475,
							"name": "addKycImageUsingPOST",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2476,
									"name": "addKycImageUsingPOST",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2477,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2478,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2488,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 486,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2487,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 485,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2479,
															"name": "authenticated",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 477,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2480,
															"name": "authorities0Authority",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 478,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2481,
															"name": "credentials",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 479,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2482,
															"name": "details",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 480,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2483,
															"name": "file",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 481,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2484,
															"name": "flashAttributes",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 482,
																	"character": 25
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2485,
															"name": "imgtype",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 483,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2486,
															"name": "principal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 484,
																	"character": 19
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2488,
																2487,
																2479,
																2480,
																2481,
																2482,
																2483,
																2484,
																2485,
																2486
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 476,
															"character": 36
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 476,
									"character": 24
								}
							]
						},
						{
							"id": 2456,
							"name": "addKycUsingPOST",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2457,
									"name": "addKycUsingPOST",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2458,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2459,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2462,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 383,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2461,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 382,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2460,
															"name": "input",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 381,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Kycinfo",
																"id": 2565
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2462,
																2461,
																2460
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 380,
															"character": 31
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 380,
									"character": 19
								}
							]
						},
						{
							"id": 2425,
							"name": "allcountriesUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2426,
									"name": "allcountriesUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2427,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2428,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2430,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 246,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2429,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 245,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2430,
																2429
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 244,
															"character": 36
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 244,
									"character": 24
								}
							]
						},
						{
							"id": 2525,
							"name": "editKycStatusUsingPUT",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2526,
									"name": "editKycStatusUsingPUT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2527,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2528,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2532,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 718,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2531,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 717,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2529,
															"name": "status",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 715,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2530,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 716,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2532,
																2531,
																2529,
																2530
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 714,
															"character": 37
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 714,
									"character": 25
								}
							]
						},
						{
							"id": 2501,
							"name": "getAllKycStatusesUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2502,
									"name": "getAllKycStatusesUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2503,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2504,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2510,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 615,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2509,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 614,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2505,
															"name": "dir",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 610,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2506,
															"name": "page",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 611,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2507,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 612,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2508,
															"name": "status",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 613,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2510,
																2509,
																2505,
																2506,
																2507,
																2508
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 609,
															"character": 41
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 609,
									"character": 29
								}
							]
						},
						{
							"id": 2446,
							"name": "getAllKycesUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2447,
									"name": "getAllKycesUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2448,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2449,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2455,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 343,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2454,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 342,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2450,
															"name": "dir",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 338,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2451,
															"name": "page",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 339,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2452,
															"name": "size",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 340,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2453,
															"name": "status",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 341,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2455,
																2454,
																2450,
																2451,
																2452,
																2453
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 337,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 337,
									"character": 23
								}
							]
						},
						{
							"id": 2431,
							"name": "getCountryByCidUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2432,
									"name": "getCountryByCidUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2433,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2434,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2437,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 270,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2436,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 269,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2435,
															"name": "cid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 268,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2437,
																2436,
																2435
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 267,
															"character": 39
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 267,
									"character": 27
								}
							]
						},
						{
							"id": 2386,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2387,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 114,
									"character": 13
								}
							]
						},
						{
							"id": 2518,
							"name": "getKycByUidUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2519,
									"name": "getKycByUidUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2520,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2521,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2524,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 686,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2523,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 685,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2522,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 684,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2524,
																2523,
																2522
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 683,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 683,
									"character": 23
								}
							]
						},
						{
							"id": 2438,
							"name": "getKycImageByUidAndImgTypeUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2439,
									"name": "getKycImageByUidAndImgTypeUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2440,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2441,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2445,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 302,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2444,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 301,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2442,
															"name": "imgtype",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 299,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2443,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 300,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2445,
																2444,
																2442,
																2443
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 298,
															"character": 50
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 298,
									"character": 38
								}
							]
						},
						{
							"id": 2489,
							"name": "getKycImageUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2490,
									"name": "getKycImageUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2491,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2492,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2500,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 561,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2499,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 560,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2493,
															"name": "authenticated",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 554,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2494,
															"name": "authorities0Authority",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 555,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2495,
															"name": "credentials",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 556,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2496,
															"name": "details",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 557,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2497,
															"name": "imgtype",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 558,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2498,
															"name": "principal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 559,
																	"character": 19
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2500,
																2499,
																2493,
																2494,
																2495,
																2496,
																2497,
																2498
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 553,
															"character": 35
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 553,
									"character": 23
								}
							]
						},
						{
							"id": 2511,
							"name": "getKycStatusByUidUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2512,
									"name": "getKycStatusByUidUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2513,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2514,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2517,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 655,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2516,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 654,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2515,
															"name": "uid",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 653,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2517,
																2516,
																2515
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 652,
															"character": 41
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 652,
									"character": 29
								}
							]
						},
						{
							"id": 2411,
							"name": "handleUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2412,
									"name": "handleUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2413,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2414,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2417,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 191,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2416,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 190,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2415,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 189,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2417,
																2416,
																2415
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 188,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 188,
									"character": 18
								}
							]
						},
						{
							"id": 2418,
							"name": "handleUsingGET_1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2419,
									"name": "handleUsingGET_1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2420,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2421,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2424,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 219,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2423,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 218,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2422,
															"name": "body",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 217,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2424,
																2423,
																2422
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 216,
															"character": 32
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 216,
									"character": 20
								}
							]
						},
						{
							"id": 2405,
							"name": "linksUsingGET",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2406,
									"name": "linksUsingGET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2407,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2408,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2410,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 167,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2409,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 166,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2410,
																2409
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 165,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 165,
									"character": 17
								}
							]
						},
						{
							"id": 2395,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2396,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2397,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2398,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2399,
											"name": "body",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2400,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2401,
											"name": "queryParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2402,
											"name": "form",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2403,
											"name": "reject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 2533
											}
										},
										{
											"id": 2404,
											"name": "resolve",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CallbackHandler",
												"id": 2533
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 126,
									"character": 19
								}
							]
						},
						{
							"id": 2463,
							"name": "updateKycUsingPUT",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2464,
									"name": "updateKycUsingPUT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2465,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2466,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2474,
															"name": "$domain",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 425,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2473,
															"name": "$queryParameters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 424,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2467,
															"name": "authenticated",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 418,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2468,
															"name": "authorities0Authority",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 419,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2469,
															"name": "credentials",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 420,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2470,
															"name": "details",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 421,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														},
														{
															"id": 2471,
															"name": "kycInput",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 422,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "Kycinfo",
																"id": 2565
															}
														},
														{
															"id": 2472,
															"name": "principal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/api/kyc.tsx",
																	"line": 423,
																	"character": 19
																}
															],
															"type": {
																"type": "reference",
																"name": "__type"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2474,
																2473,
																2467,
																2468,
																2469,
																2470,
																2471,
																2472
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/api/kyc.tsx",
															"line": 417,
															"character": 33
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 417,
									"character": 21
								}
							]
						},
						{
							"id": 2375,
							"name": "getInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2376,
									"name": "getInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "kycApi",
										"id": 2374
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 97,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2381
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2378,
								2379,
								2380,
								2382,
								2377
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2388,
								2392,
								2475,
								2456,
								2425,
								2525,
								2501,
								2446,
								2431,
								2386,
								2518,
								2438,
								2489,
								2511,
								2411,
								2418,
								2405,
								2395,
								2463,
								2375
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 96,
							"character": 27
						}
					]
				},
				{
					"id": 2533,
					"name": "CallbackHandler",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 6,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2534,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 2535,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2536,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2537,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 6,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 2538,
					"name": "Country",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2539,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2540,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 8,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2541,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 9,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2540,
										2541
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 7,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 2542,
					"name": "File",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 11,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2543,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2544,
									"name": "absolute",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 12,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2545,
									"name": "absoluteFile",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 13,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "File",
										"id": 2542
									}
								},
								{
									"id": 2546,
									"name": "absolutePath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 14,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2547,
									"name": "canonicalFile",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 15,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "File",
										"id": 2542
									}
								},
								{
									"id": 2548,
									"name": "canonicalPath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 16,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2549,
									"name": "directory",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 17,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2550,
									"name": "file",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 18,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2551,
									"name": "freeSpace",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 19,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2552,
									"name": "hidden",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 20,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2553,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 21,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2554,
									"name": "parent",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 22,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2555,
									"name": "parentFile",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 23,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "File",
										"id": 2542
									}
								},
								{
									"id": 2556,
									"name": "path",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 24,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2557,
									"name": "totalSpace",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 25,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2558,
									"name": "usableSpace",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 26,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2544,
										2545,
										2546,
										2547,
										2548,
										2549,
										2550,
										2551,
										2552,
										2553,
										2554,
										2555,
										2556,
										2557,
										2558
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 11,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 2559,
					"name": "InputStream",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 28,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2560,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 28,
									"character": 18
								}
							]
						}
					}
				},
				{
					"id": 2561,
					"name": "KycStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 29,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2562,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2563,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 30,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "pending"
											},
											{
												"type": "stringLiteral",
												"value": "accepted"
											},
											{
												"type": "stringLiteral",
												"value": "checking"
											},
											{
												"type": "stringLiteral",
												"value": "rejected"
											}
										]
									}
								},
								{
									"id": 2564,
									"name": "uid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 31,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2563,
										2564
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 29,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 2565,
					"name": "Kycinfo",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2566,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2567,
									"name": "country",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 34,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2568,
									"name": "fname",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 35,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2569,
									"name": "gender",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 36,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "male"
											},
											{
												"type": "stringLiteral",
												"value": "female"
											},
											{
												"type": "stringLiteral",
												"value": "other"
											}
										]
									}
								},
								{
									"id": 2570,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2571,
									"name": "lastupdate",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 38,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2572,
									"name": "licenseid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 39,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2573,
									"name": "lname",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 40,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2574,
									"name": "ltype",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 41,
											"character": 11
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "DL"
											},
											{
												"type": "stringLiteral",
												"value": "PS"
											},
											{
												"type": "stringLiteral",
												"value": "NI"
											}
										]
									}
								},
								{
									"id": 2575,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 42,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "pending"
											},
											{
												"type": "stringLiteral",
												"value": "accepted"
											},
											{
												"type": "stringLiteral",
												"value": "checking"
											},
											{
												"type": "stringLiteral",
												"value": "rejected"
											}
										]
									}
								},
								{
									"id": 2576,
									"name": "uid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 43,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2567,
										2568,
										2569,
										2570,
										2571,
										2572,
										2573,
										2574,
										2575,
										2576
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 33,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 2577,
					"name": "Link",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 45,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2578,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2579,
									"name": "href",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 46,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2580,
									"name": "templated",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 47,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2579,
										2580
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 45,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 2625,
					"name": "Logger",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 93,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2626,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2627,
									"name": "log",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 94,
											"character": 7
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2628,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2629,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2630,
															"name": "line",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/api/kyc.tsx",
													"line": 94,
													"character": 8
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2627
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 93,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 2581,
					"name": "MapstringLink",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 49,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2582,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 49,
									"character": 20
								}
							]
						}
					}
				},
				{
					"id": 2583,
					"name": "Resource",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 50,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2584,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2585,
									"name": "description",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 51,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2586,
									"name": "file",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 52,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "File",
										"id": 2542
									}
								},
								{
									"id": 2587,
									"name": "filename",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 53,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2588,
									"name": "inputStream",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 54,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "InputStream",
										"id": 2559
									}
								},
								{
									"id": 2589,
									"name": "open",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 55,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2590,
									"name": "readable",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 56,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2591,
									"name": "uri",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 57,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "URI",
										"id": 2593
									}
								},
								{
									"id": 2592,
									"name": "url",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 58,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "URL",
										"id": 2612
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2585,
										2586,
										2587,
										2588,
										2589,
										2590,
										2591,
										2592
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 50,
									"character": 15
								}
							]
						}
					}
				},
				{
					"id": 2593,
					"name": "URI",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 60,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2594,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2595,
									"name": "absolute",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 61,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2596,
									"name": "authority",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 62,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2597,
									"name": "fragment",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 63,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2598,
									"name": "host",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 64,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2599,
									"name": "opaque",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 65,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2600,
									"name": "path",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 66,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2601,
									"name": "port",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 67,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2602,
									"name": "query",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 68,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2603,
									"name": "rawAuthority",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 69,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2604,
									"name": "rawFragment",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 70,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2605,
									"name": "rawPath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 71,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2606,
									"name": "rawQuery",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 72,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2607,
									"name": "rawSchemeSpecificPart",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 73,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2608,
									"name": "rawUserInfo",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 74,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2609,
									"name": "scheme",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 75,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2610,
									"name": "schemeSpecificPart",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 76,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2611,
									"name": "userInfo",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 77,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2595,
										2596,
										2597,
										2598,
										2599,
										2600,
										2601,
										2602,
										2603,
										2604,
										2605,
										2606,
										2607,
										2608,
										2609,
										2610,
										2611
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 60,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 2612,
					"name": "URL",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/api/kyc.tsx",
							"line": 79,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2613,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2614,
									"name": "authority",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 80,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2615,
									"name": "content",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 81,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "__type"
									}
								},
								{
									"id": 2616,
									"name": "defaultPort",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 82,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2617,
									"name": "file",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 83,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2618,
									"name": "host",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 84,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2619,
									"name": "path",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 85,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2620,
									"name": "port",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 86,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2621,
									"name": "protocol",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 87,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2622,
									"name": "query",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 88,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2623,
									"name": "ref",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 89,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2624,
									"name": "userInfo",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/api/kyc.tsx",
											"line": 90,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2614,
										2615,
										2616,
										2617,
										2618,
										2619,
										2620,
										2621,
										2622,
										2623,
										2624
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/api/kyc.tsx",
									"line": 79,
									"character": 10
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2374
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2533,
						2538,
						2542,
						2559,
						2561,
						2565,
						2577,
						2625,
						2581,
						2583,
						2593,
						2612
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api/kyc.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5704,
			"name": "\"lib/icon/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/icon/index.ts",
			"sources": [
				{
					"fileName": "lib/icon/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5675,
			"name": "\"lib/seeder/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/seeder/index.ts",
			"children": [
				{
					"id": 5681,
					"name": "Seeder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5682,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5683,
									"name": "new Seeder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Seeder",
										"id": 5681
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 18,
									"character": 29
								}
							]
						},
						{
							"id": 5692,
							"name": "generateCashDesks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5693,
									"name": "generateCashDesks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5694,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5695,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 126,
									"character": 28
								}
							]
						},
						{
							"id": 5684,
							"name": "initialSeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5685,
									"name": "initialSeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 24,
									"character": 22
								}
							]
						},
						{
							"id": 5690,
							"name": "setBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5691,
									"name": "setBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 67,
									"character": 21
								}
							]
						},
						{
							"id": 5688,
							"name": "setForex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5689,
									"name": "setForex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 55,
									"character": 19
								}
							]
						},
						{
							"id": 5686,
							"name": "setMarket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5687,
									"name": "setMarket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 34,
									"character": 20
								}
							]
						},
						{
							"id": 5696,
							"name": "setOffice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5697,
									"name": "setOffice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 190,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5682
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5692,
								5684,
								5690,
								5688,
								5686,
								5696
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/seeder/index.ts",
							"line": 18,
							"character": 27
						}
					]
				},
				{
					"id": 5676,
					"name": "IcashDesk",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5679,
							"name": "goalValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5677,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5680,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 16,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5678,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "lib/seeder/index.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5679,
								5677,
								5680,
								5678
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/seeder/index.ts",
							"line": 12,
							"character": 19
						}
					]
				},
				{
					"id": 5698,
					"name": "user",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "lib/seeder/index.ts",
							"line": 10,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5681
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5676
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5698
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/seeder/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 830,
			"name": "\"redux/IActions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/IActions.ts",
			"children": [
				{
					"id": 831,
					"name": "IAction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 832,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 833,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/IActions.ts",
									"line": 2,
									"character": 9
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 834,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/IActions.ts",
									"line": 3,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								833,
								834
							]
						}
					],
					"sources": [
						{
							"fileName": "redux/IActions.ts",
							"line": 1,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						831
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/IActions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1237,
			"name": "\"redux/app/actions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/app/actions.ts",
			"children": [
				{
					"id": 1240,
					"name": "logOut",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction(Actions.LOG_OUT)"
				},
				{
					"id": 1239,
					"name": "removeUser",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 5,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction(Actions.REMOVE_USER)"
				},
				{
					"id": 1238,
					"name": "setUser",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 4,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.SET_USER)"
				},
				{
					"id": 1243,
					"name": "updateMarketCryptos",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 10,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.UPDATE_MARKET_CRYPTOS)"
				},
				{
					"id": 1244,
					"name": "updateMarketForex",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 11,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.UPDATE_MARKET_FOREX)"
				},
				{
					"id": 1245,
					"name": "updateOfficeCashDesks",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 13,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.UPDATE_OFFICE_CASHDESKS)"
				},
				{
					"id": 1241,
					"name": "updateUser",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 7,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.UPDATE_USER)"
				},
				{
					"id": 1242,
					"name": "updateUserBalance",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/actions.ts",
							"line": 8,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " createAction<any>(Actions.UPDATE_USER_BALANCE)"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1240,
						1239,
						1238,
						1243,
						1244,
						1245,
						1241,
						1242
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/app/actions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 835,
			"name": "\"redux/app/constants\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/app/constants.ts",
			"children": [
				{
					"id": 840,
					"name": "LOG_OUT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 5,
							"character": 20
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "app-log-out"
					},
					"defaultValue": "\"app-log-out\""
				},
				{
					"id": 837,
					"name": "REMOVE_USER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 2,
							"character": 24
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "app-remove-user"
					},
					"defaultValue": "\"app-remove-user\""
				},
				{
					"id": 836,
					"name": "SET_USER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 1,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "app-set-user"
					},
					"defaultValue": "\"app-set-user\""
				},
				{
					"id": 841,
					"name": "UPDATE_MARKET_CRYPTOS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 7,
							"character": 34
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "update-market-cryptos"
					},
					"defaultValue": "\"update-market-cryptos\""
				},
				{
					"id": 842,
					"name": "UPDATE_MARKET_FOREX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 8,
							"character": 32
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "update-market-forex"
					},
					"defaultValue": "\"update-market-forex\""
				},
				{
					"id": 843,
					"name": "UPDATE_OFFICE_CASHDESKS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 10,
							"character": 36
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "update-office-cashdesks"
					},
					"defaultValue": "\"update-office-cashdesks\""
				},
				{
					"id": 838,
					"name": "UPDATE_USER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 3,
							"character": 24
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "app-update-user"
					},
					"defaultValue": "\"app-update-user\""
				},
				{
					"id": 839,
					"name": "UPDATE_USER_BALANCE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/app/constants.ts",
							"line": 4,
							"character": 32
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "app-update-user-balance"
					},
					"defaultValue": "\"app-update-user-balance\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						840,
						837,
						836,
						841,
						842,
						843,
						838,
						839
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/app/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 851,
			"name": "\"redux/app/reducer\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/app/reducer.ts",
			"children": [
				{
					"id": 852,
					"name": "initialState",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 853,
							"name": "market",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "redux/app/reducer.ts",
									"line": 7,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "null"
							},
							"defaultValue": " null"
						},
						{
							"id": 855,
							"name": "office",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "redux/app/reducer.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "null"
							},
							"defaultValue": " null"
						},
						{
							"id": 854,
							"name": "user",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "redux/app/reducer.ts",
									"line": 8,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "null"
							},
							"defaultValue": " null"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								853,
								855,
								854
							]
						}
					],
					"sources": [
						{
							"fileName": "redux/app/reducer.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						852
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/app/reducer.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 844,
			"name": "\"redux/app/store\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/app/store.ts",
			"children": [
				{
					"id": 845,
					"name": "IAppStoreState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 847,
							"name": "market",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/app/store.ts",
									"line": 4,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 848,
							"name": "office",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/app/store.ts",
									"line": 5,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 846,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/app/store.ts",
									"line": 3,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								847,
								848,
								846
							]
						}
					],
					"sources": [
						{
							"fileName": "redux/app/store.ts",
							"line": 2,
							"character": 31
						}
					]
				},
				{
					"id": 849,
					"name": "IRouterStoreState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 850,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/app/store.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								850
							]
						}
					],
					"sources": [
						{
							"fileName": "redux/app/store.ts",
							"line": 7,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						845,
						849
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/app/store.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 860,
			"name": "\"redux/config\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/config.ts",
			"children": [
				{
					"id": 861,
					"name": "history",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/config.ts",
							"line": 7,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "History"
					},
					"defaultValue": " createHistory()"
				},
				{
					"id": 862,
					"name": "middleware",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/config.ts",
							"line": 8,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Middleware",
						"typeArguments": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"name": "Dispatch",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AnyAction"
									}
								]
							}
						]
					},
					"defaultValue": " routerMiddleware(history)"
				},
				{
					"id": 863,
					"name": "window",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "redux/config.ts",
							"line": 10,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 866,
					"name": "configureStore",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 867,
							"name": "configureStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " initial store with middleware\n @func",
								"text": " @param {IRootState}  initialState\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 868,
									"name": "initialState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Store",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "redux/config.ts",
							"line": 26,
							"character": 38
						}
					]
				},
				{
					"id": 864,
					"name": "logger",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 865,
							"name": "logger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "redux/config.ts",
							"line": 12,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						861,
						862,
						863
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						866,
						864
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 869,
			"name": "\"redux/localStorage\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/localStorage.ts",
			"children": [
				{
					"id": 870,
					"name": "loadState",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Load store from local storage",
						"returns": "\n",
						"tags": [
							{
								"tag": "func",
								"text": "\n"
							}
						]
					},
					"signatures": [
						{
							"id": 871,
							"name": "loadState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Load store from local storage",
								"returns": "\n"
							},
							"type": {
								"type": "reference",
								"name": "IRootState",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "redux/localStorage.ts",
							"line": 9,
							"character": 22
						}
					]
				},
				{
					"id": 872,
					"name": "saveState",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Write store to local storage",
						"tags": [
							{
								"tag": "func",
								"text": "\n"
							}
						]
					},
					"signatures": [
						{
							"id": 873,
							"name": "saveState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Write store to local storage"
							},
							"parameters": [
								{
									"id": 874,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n\n"
									},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "redux/localStorage.ts",
							"line": 28,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						870,
						872
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/localStorage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 856,
			"name": "\"redux/reducers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/reducers.ts",
			"children": [
				{
					"id": 857,
					"name": "IRootState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 858,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/reducers.ts",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "IAppStoreState",
								"id": 845
							}
						},
						{
							"id": 859,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "redux/reducers.ts",
									"line": 8,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "IRouterStoreState",
								"id": 849
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								858,
								859
							]
						}
					],
					"sources": [
						{
							"fileName": "redux/reducers.ts",
							"line": 6,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						857
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/reducers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 875,
			"name": "\"redux/store\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/redux/store.ts",
			"children": [
				{
					"id": 876,
					"name": "initialState",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/store.ts",
							"line": 7,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "IRootState",
						"id": 857
					},
					"defaultValue": " loadState()"
				},
				{
					"id": 877,
					"name": "store",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "redux/store.ts",
							"line": 10,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Store",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IRootState",
								"id": 857
							}
						]
					},
					"defaultValue": " configureStore(initialState)"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						876,
						877
					]
				}
			],
			"sources": [
				{
					"fileName": "redux/store.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 410,
			"name": "\"services/trans/pdate/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/services/trans/pdate/index.ts",
			"children": [
				{
					"id": 411,
					"name": "JDate",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 480,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 481,
									"name": "new JDate",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 482,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 483,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 484,
											"name": "day",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 485,
											"name": "hour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 486,
											"name": "minute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 487,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 488,
											"name": "millisecond",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "JDate",
										"id": 411
									}
								}
							],
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 225,
									"character": 30
								}
							]
						},
						{
							"id": 429,
							"name": "_cached_date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 209,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 432,
							"name": "_cached_date_ts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 212,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 430,
							"name": "_cached_utc_date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 210,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 431,
							"name": "_cached_utc_date_ts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 211,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 427,
							"name": "_d",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 207,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 428,
							"name": "_date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 208,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 433,
							"name": "getDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 213,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 434,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 435,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 213,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 474,
							"name": "getFullYear",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 224,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 475,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 476,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 224,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 436,
							"name": "getMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 214,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 437,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 438,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 214,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 477,
							"name": "getTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 225,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 478,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 479,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 225,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 439,
							"name": "getUTCDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 215,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 440,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 441,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 215,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 445,
							"name": "getUTCFullYear",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 217,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 447,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 217,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 442,
							"name": "getUTCMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 216,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 443,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 444,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 216,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 470,
							"name": "setDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 223,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 471,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 472,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 473,
													"name": "dayValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 223,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 448,
							"name": "setFullYear",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 218,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 449,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 450,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 451,
													"name": "yearValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 218,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 452,
							"name": "setMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 219,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 453,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 454,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 455,
													"name": "monthValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 456,
													"name": "dayValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 219,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 461,
							"name": "setUTCDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 221,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 462,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 463,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 464,
													"name": "dayValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 221,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 457,
							"name": "setUTCFullYear",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 220,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 458,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 459,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 460,
													"name": "yearValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 220,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 465,
							"name": "setUTCMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 222,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 466,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 467,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 468,
													"name": "monthValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 469,
													"name": "dayValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 222,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 417,
							"name": "UTC",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 206,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 418,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 419,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 420,
													"name": "year",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 421,
													"name": "month",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 422,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 423,
													"name": "hours",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 424,
													"name": "minutes",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 425,
													"name": "seconds",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 426,
													"name": "milliseconds",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 206,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 412,
							"name": "now",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 204,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 413,
							"name": "parse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 205,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 414,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 415,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 416,
													"name": "string",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "services/trans/pdate/index.ts",
											"line": 205,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 489,
							"name": "_persianDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 490,
									"name": "_persianDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 247,
									"character": 23
								}
							]
						},
						{
							"id": 491,
							"name": "_persianUTCDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 492,
									"name": "_persianUTCDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Exactly like `_persianDate` but for UTC value of date"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 257,
									"character": 26
								}
							]
						},
						{
							"id": 493,
							"name": "_setPersianDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 494,
									"name": "_setPersianDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 495,
											"name": "which",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 496,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 497,
											"name": "dayValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 265,
									"character": 26
								}
							]
						},
						{
							"id": 498,
							"name": "_setUTCPersianDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 499,
									"name": "_setUTCPersianDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Exactly like `_setPersianDate`, but operates UTC value"
									},
									"parameters": [
										{
											"id": 500,
											"name": "which",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 501,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 502,
											"name": "dayValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "services/trans/pdate/index.ts",
									"line": 278,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								480
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								429,
								432,
								430,
								431,
								427,
								428,
								433,
								474,
								436,
								477,
								439,
								445,
								442,
								470,
								448,
								452,
								461,
								457,
								465,
								417,
								412,
								413
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								489,
								491,
								493,
								498
							]
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 203,
							"character": 11
						}
					]
				},
				{
					"id": 528,
					"name": "Date",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 109,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " (window as any).Date"
				},
				{
					"id": 510,
					"name": "GREGORIAN_EPOCH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 12,
							"character": 21
						}
					],
					"type": {
						"type": "unknown",
						"name": "1721425.5"
					},
					"defaultValue": "1721425.5"
				},
				{
					"id": 519,
					"name": "PERSIAN_EPOCH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 56,
							"character": 19
						}
					],
					"type": {
						"type": "unknown",
						"name": "1948320.5"
					},
					"defaultValue": "1948320.5"
				},
				{
					"id": 548,
					"name": "dateProps",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 355,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": " (\"getHours getMilliseconds getMinutes getSeconds getTime getUTCDay getUTCHours \" +\n    \"getTimezoneOffset getUTCMilliseconds getUTCMinutes getUTCSeconds setHours setMilliseconds setMinutes \" +\n    \"setSeconds setTime setUTCHours setUTCMilliseconds setUTCMinutes setUTCSeconds toDateString toISOString \" +\n    \"toJSON toString toLocaleDateString toLocaleTimeString toTimeString toUTCString valueOf getDay\")\n    .split(\" \")"
				},
				{
					"id": 547,
					"name": "i",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 355,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 549,
					"name": "createWrapper",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isLet": true
					},
					"signatures": [
						{
							"id": 550,
							"name": "createWrapper",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 551,
									"name": "k",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 360,
							"character": 17
						}
					]
				},
				{
					"id": 532,
					"name": "digits_en2fa",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 533,
							"name": "digits_en2fa",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 534,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 117,
							"character": 21
						}
					]
				},
				{
					"id": 529,
					"name": "digits_fa2en",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 530,
							"name": "digits_fa2en",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 531,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 111,
							"character": 21
						}
					]
				},
				{
					"id": 511,
					"name": "gregorian_to_jd",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 512,
							"name": "gregorian_to_jd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 513,
									"name": "year",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 514,
									"name": "month",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 515,
									"name": "day",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 14,
							"character": 24
						}
					]
				},
				{
					"id": 516,
					"name": "jd_to_gregorian",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 517,
							"name": "jd_to_gregorian",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 518,
									"name": "jd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 29,
							"character": 24
						}
					]
				},
				{
					"id": 525,
					"name": "jd_to_persian",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 526,
							"name": "jd_to_persian",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 527,
									"name": "jd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 79,
							"character": 22
						}
					]
				},
				{
					"id": 507,
					"name": "leap_gregorian",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 508,
							"name": "leap_gregorian",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 509,
									"name": "year",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 6,
							"character": 23
						}
					]
				},
				{
					"id": 503,
					"name": "mod",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 504,
							"name": "mod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 505,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 506,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 1,
							"character": 12
						}
					]
				},
				{
					"id": 535,
					"name": "pad2",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 536,
							"name": "pad2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 537,
									"name": "number",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 123,
							"character": 13
						}
					]
				},
				{
					"id": 543,
					"name": "parseDate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 544,
							"name": "parseDate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 545,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 546,
									"name": "convertToPersian",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 141,
							"character": 18
						}
					]
				},
				{
					"id": 520,
					"name": "persian_to_jd",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 521,
							"name": "persian_to_jd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 522,
									"name": "year",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 523,
									"name": "month",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 524,
									"name": "day",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 60,
							"character": 22
						}
					]
				},
				{
					"id": 538,
					"name": "persian_to_jd_fixed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 539,
							"name": "persian_to_jd_fixed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 540,
									"name": "year",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 541,
									"name": "month",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 542,
									"name": "day",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/pdate/index.ts",
							"line": 127,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						411
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						528,
						510,
						519,
						548,
						547
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						549,
						532,
						529,
						511,
						516,
						525,
						507,
						503,
						535,
						543,
						520,
						538
					]
				}
			],
			"sources": [
				{
					"fileName": "services/trans/pdate/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1475,
			"name": "AdminMenu",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DashboardMenu/adminMenu.tsx",
			"children": [
				{
					"id": 1476,
					"name": "getMenus",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1477,
							"name": "getMenus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "return menu items for admin users"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1478,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1494,
											"name": "chat",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1495,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 30,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"message\""
												},
												{
													"id": 1496,
													"name": "path",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 31,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"/admin/chat\""
												},
												{
													"id": 1497,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 32,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " t.t(\"Support\")"
												},
												{
													"id": 1498,
													"name": "visible",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 33,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1495,
														1496,
														1497,
														1498
													]
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardMenu/adminMenu.tsx",
													"line": 29,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1479,
											"name": "dashboard",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1480,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 12,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"dashboard\""
												},
												{
													"id": 1481,
													"name": "path",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 13,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"/admin/dashboard\""
												},
												{
													"id": 1482,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 14,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " t.t(\"Dashboard\")"
												},
												{
													"id": 1483,
													"name": "visible",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 15,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1480,
														1481,
														1482,
														1483
													]
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardMenu/adminMenu.tsx",
													"line": 11,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1489,
											"name": "kyc",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1490,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 24,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"solution\""
												},
												{
													"id": 1491,
													"name": "path",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 25,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"/admin/kyc\""
												},
												{
													"id": 1492,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 26,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " t.t(\"KYC\")"
												},
												{
													"id": 1493,
													"name": "visible",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 27,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1490,
														1491,
														1492,
														1493
													]
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardMenu/adminMenu.tsx",
													"line": 23,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1484,
											"name": "users",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1485,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 18,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"team\""
												},
												{
													"id": 1486,
													"name": "path",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 19,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"/admin/users\""
												},
												{
													"id": 1487,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 20,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " t.t(\"Users\")"
												},
												{
													"id": 1488,
													"name": "visible",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/DashboardMenu/adminMenu.tsx",
															"line": 21,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1485,
														1486,
														1487,
														1488
													]
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardMenu/adminMenu.tsx",
													"line": 17,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1494,
												1479,
												1489,
												1484
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/adminMenu.tsx",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1476
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DashboardMenu/adminMenu.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5591,
			"name": "AppContainer",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/containers/app.tsx",
			"children": [
				{
					"id": 5594,
					"name": "AppContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "this is our root component wich is route app to containers\nbased on browsers path"
					},
					"typeParameter": [
						{
							"id": 5607,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5595,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5596,
									"name": "new AppContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5597,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 5592
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AppContainer",
										"id": 5594
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/app.tsx",
									"line": 38,
									"character": 60
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 5670,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 5666,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 5667,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5668,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5668
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 5592
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 5671,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5672,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 5673,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5674,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 5669,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5593
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 5628,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5629,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 5634,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5635,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5636,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5637,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 5643,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5644,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5645,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5646,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5593
													}
												]
											}
										},
										{
											"id": 5647,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 5613,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5614,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 5615,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 5616,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 5598,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5599,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/app.tsx",
									"line": 43,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 5621,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5622,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 5623,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5624,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5593
													}
												]
											}
										},
										{
											"id": 5625,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 5626,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5627,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 5630,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5631,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5632,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5633,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 5600,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5601,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/app.tsx",
									"line": 55,
									"character": 31
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 5638,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5639,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 5640,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5641,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5593
													}
												]
											}
										},
										{
											"id": 5642,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 5661,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5662,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5663,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5664,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5665,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 5617,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5618,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 5619,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5620,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5593
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 5602,
							"name": "handleChangeLanguage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5603,
									"name": "handleChangeLanguage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5604,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/app.tsx",
									"line": 60,
									"character": 31
								}
							]
						},
						{
							"id": 5605,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 5606,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "containers/app.tsx",
									"line": 64,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 5648,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5649,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5650,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 5651,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5652,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5653,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5654,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5593
																					}
																				]
																			}
																		},
																		{
																			"id": 5655,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 5592
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 5656,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5657,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 5658,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5659,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 5660,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 5608,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 5609,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 5610,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 5592
													}
												]
											}
										},
										{
											"id": 5611,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5593
													}
												]
											}
										},
										{
											"id": 5612,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5595
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5670,
								5666,
								5671,
								5669
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5628,
								5634,
								5643,
								5613,
								5598,
								5621,
								5626,
								5630,
								5600,
								5638,
								5661,
								5617,
								5602,
								5605,
								5648,
								5608
							]
						}
					],
					"sources": [
						{
							"fileName": "containers/app.tsx",
							"line": 38,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 5592
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5593
								}
							]
						}
					]
				},
				{
					"id": 5592,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/app.tsx",
							"line": 28,
							"character": 16
						}
					]
				},
				{
					"id": 5593,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "containers/app.tsx",
							"line": 31,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5594
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5592,
						5593
					]
				}
			],
			"sources": [
				{
					"fileName": "containers/app.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 982,
			"name": "Components/AnalysisComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Analysis/index.tsx",
			"children": [
				{
					"id": 991,
					"name": "AnalysisComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "represent couple of charts and values for a symbol analysis"
					},
					"typeParameter": [
						{
							"id": 1004,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 992,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 993,
									"name": "new AnalysisComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 994,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 983
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AnalysisComponent",
										"id": 991
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 40,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1071,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1067,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1068,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1069,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1069
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 983
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1072,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1073,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1074,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1075,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1070,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 988
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1029,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1030,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1035,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1036,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1037,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1038,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1044,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1045,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1046,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1047,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 988
													}
												]
											}
										},
										{
											"id": 1048,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1014,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1015,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1016,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1017,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1005,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1006,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1022,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1023,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1024,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1025,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 988
													}
												]
											}
										},
										{
											"id": 1026,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1027,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1028,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1031,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1032,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1033,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1034,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1012,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1013,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1039,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1040,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1041,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1042,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 988
													}
												]
											}
										},
										{
											"id": 1043,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1062,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1063,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1064,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1065,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1066,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1018,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1019,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1020,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1021,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 988
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1002,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1003,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 57,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 999,
							"name": "setModalStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1000,
									"name": "setModalStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1001,
											"name": "ModalVisible",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 53,
									"character": 25
								}
							]
						},
						{
							"id": 1049,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1050,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1051,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1052,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1053,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1054,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1055,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 988
																					}
																				]
																			}
																		},
																		{
																			"id": 1056,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 983
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1057,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1058,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1059,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1060,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1061,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1007,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1008,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1009,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 983
													}
												]
											}
										},
										{
											"id": 1010,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 988
													}
												]
											}
										},
										{
											"id": 1011,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 995,
							"name": "showModal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 996,
									"name": "showModal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 997,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 998,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 49,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								992
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1071,
								1067,
								1072,
								1070
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1029,
								1035,
								1044,
								1014,
								1005,
								1022,
								1027,
								1031,
								1012,
								1039,
								1062,
								1018,
								1002,
								999,
								1049,
								1007,
								995
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Analysis/index.tsx",
							"line": 40,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 983
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 988
								}
							]
						}
					]
				},
				{
					"id": 983,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 985,
							"name": "cashDesks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "system cashDesks which is synced with redux store"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 987,
							"name": "cryptos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "cryptosCurrencies market data  which is synced with redux store"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 986,
							"name": "forex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "forex data  which is synced with redux store"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 984,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "main symbol which is analysed"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								985,
								987,
								986,
								984
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Analysis/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 988,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 989,
							"name": "ModalVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "visibility status of exchange modal"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 32,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 990,
							"name": "toSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "target symbol that we want to convert our symbol to it"
							},
							"sources": [
								{
									"fileName": "components/Analysis/index.tsx",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								989,
								990
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Analysis/index.tsx",
							"line": 30,
							"character": 16
						}
					]
				},
				{
					"id": 1076,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1077,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1078,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1079,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Analysis/index.tsx",
							"line": 177,
							"character": 27
						}
					]
				},
				{
					"id": 1080,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1081,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1082,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1083,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1084,
											"name": "cashDesks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Analysis/index.tsx",
													"line": 184,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.office.cashDesks || null"
										},
										{
											"id": 1086,
											"name": "cryptos",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Analysis/index.tsx",
													"line": 186,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.cryptos || null"
										},
										{
											"id": 1085,
											"name": "forex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Analysis/index.tsx",
													"line": 185,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.forex || null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1084,
												1086,
												1085
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Analysis/index.tsx",
							"line": 182,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						991
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						983,
						988
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1076,
						1080
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Analysis/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1280,
			"name": "Components/BalanceComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Balance/index.tsx",
			"children": [
				{
					"id": 1290,
					"name": "BalanceComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "represent user balance status for all available symbols"
					},
					"typeParameter": [
						{
							"id": 1307,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1298,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1299,
									"name": "new BalanceComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1300,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BalanceComponent",
										"id": 1290
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 45,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1372,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1297,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1368,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1369,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1370,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1370
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1281
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1373,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1374,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1375,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1376,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1371,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1287
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1330,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1336,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1337,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1338,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1339,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1345,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1346,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1347,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1348,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1287
													}
												]
											}
										},
										{
											"id": 1349,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1315,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1316,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1317,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1318,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1301,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1302,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 63,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1323,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1324,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1325,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1326,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1287
													}
												]
											}
										},
										{
											"id": 1327,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1328,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1329,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1332,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1333,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1334,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1335,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1313,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1314,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1340,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1341,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1342,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1343,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1287
													}
												]
											}
										},
										{
											"id": 1344,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1363,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1364,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1365,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1366,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1367,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1319,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1320,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1321,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1322,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1287
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1303,
							"name": "loadData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1304,
									"name": "loadData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 69,
									"character": 19
								}
							]
						},
						{
							"id": 1305,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1306,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 93,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1350,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1351,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1352,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1353,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1354,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1355,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1356,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1287
																					}
																				]
																			}
																		},
																		{
																			"id": 1357,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1281
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1358,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1359,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1360,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1361,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1362,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1308,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1309,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1310,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1281
													}
												]
											}
										},
										{
											"id": 1311,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1287
													}
												]
											}
										},
										{
											"id": 1312,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1291,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1292,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1293,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1294,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1295,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1296,
													"name": "balance",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"sources": [
														{
															"fileName": "components/Balance/index.tsx",
															"line": 41,
															"character": 28
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1296
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 38,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1298
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1372,
								1297,
								1368,
								1373,
								1371
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1330,
								1336,
								1345,
								1315,
								1301,
								1323,
								1328,
								1332,
								1313,
								1340,
								1363,
								1319,
								1303,
								1305,
								1350,
								1308,
								1291
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 36,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1281
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1287
								}
							]
						}
					]
				},
				{
					"id": 1281,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1286,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds user balance object"
							},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						},
						{
							"id": 1282,
							"name": "updateUserBalance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 21,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1283,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1284,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1285,
													"name": "balance",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/Balance/index.tsx",
											"line": 21,
											"character": 22
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1286,
								1282
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 20,
							"character": 16
						}
					]
				},
				{
					"id": 1287,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1288,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds user balance object"
							},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 29,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						},
						{
							"id": 1289,
							"name": "fiats",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 30,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1288,
								1289
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 27,
							"character": 16
						}
					]
				},
				{
					"id": 1381,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 18,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1382,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1383,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1384,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1386,
											"name": "updateUserBalance",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 1387,
													"name": "updateUserBalance",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1388,
															"name": "balance",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "components/Balance/index.tsx",
													"line": 109,
													"character": 25
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1386
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 107,
							"character": 27
						}
					]
				},
				{
					"id": 1389,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1390,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1391,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1392,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1393,
											"name": "balance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Balance/index.tsx",
													"line": 116,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.balance"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1393
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 113,
							"character": 24
						}
					]
				},
				{
					"id": 1377,
					"name": "allApis",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1378,
							"name": "btc",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 17,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "btcApi",
								"id": 1088
							},
							"defaultValue": " btcApi.getInstance()"
						},
						{
							"id": 1380,
							"name": "eth",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 17,
									"character": 75
								}
							],
							"type": {
								"type": "reference",
								"name": "btcApi",
								"id": 1088
							},
							"defaultValue": " btcApi.getInstance()"
						},
						{
							"id": 1379,
							"name": "usd",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Balance/index.tsx",
									"line": 17,
									"character": 48
								}
							],
							"type": {
								"type": "reference",
								"name": "btcApi",
								"id": 1088
							},
							"defaultValue": " btcApi.getInstance()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1378,
								1380,
								1379
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Balance/index.tsx",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1290
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1281,
						1287
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1381
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1382,
						1389
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1377
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Balance/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "Components/BatteryComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Battery/index.tsx",
			"children": [
				{
					"id": 7,
					"name": "BatteryComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 13,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 8,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 9,
									"name": "new BatteryComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 10,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BatteryComponent",
										"id": 7
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Battery/index.tsx",
									"line": 19,
									"character": 64
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 80,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 76,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 77,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 78,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																78
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 81,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 82,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 83,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 84,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 79,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 5
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 38,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 44,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 46,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 47,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 53,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 54,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 55,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 56,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5
													}
												]
											}
										},
										{
											"id": 57,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 23,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 25,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 26,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 14,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 15,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 31,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 33,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 34,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5
													}
												]
											}
										},
										{
											"id": 35,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 36,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 37,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 40,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 42,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 43,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 21,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 22,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 48,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 49,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 50,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 51,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5
													}
												]
											}
										},
										{
											"id": 52,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 71,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 72,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 73,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 74,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 75,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 27,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 28,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 29,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 30,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 11,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 12,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Battery/index.tsx",
									"line": 107,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 58,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 59,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 60,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 61,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 62,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 63,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 64,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 5
																					}
																				]
																			}
																		},
																		{
																			"id": 65,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 66,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 67,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 68,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 69,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 70,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 16,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 17,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 18,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2
													}
												]
											}
										},
										{
											"id": 19,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 5
													}
												]
											}
										},
										{
											"id": 20,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								8
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								80,
								76,
								81,
								79
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								38,
								44,
								53,
								23,
								14,
								31,
								36,
								40,
								21,
								48,
								71,
								27,
								11,
								58,
								16
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Battery/index.tsx",
							"line": 19,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 5
								}
							]
						}
					]
				},
				{
					"id": 2,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "percent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Battery/index.tsx",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Battery/index.tsx",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Battery/index.tsx",
							"line": 10,
							"character": 16
						}
					]
				},
				{
					"id": 5,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 6,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "components/Battery/index.tsx",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Battery/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						7
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2,
						5
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Battery/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 736,
			"name": "Components/BlockComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Holder/index.tsx",
			"children": [
				{
					"id": 751,
					"name": "BlockComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "thats a block component. it holds other components in page,\nbocks can be collapsed or transparent"
					},
					"typeParameter": [
						{
							"id": 757,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 752,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 753,
									"name": "new BlockComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 754,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 737
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BlockComponent",
										"id": 751
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 43,
									"character": 62
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 824,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 820,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 821,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 822,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																822
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 737
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 825,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 826,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 827,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 828,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 823,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 750
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 782,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 783,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 788,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 789,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 790,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 791,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 797,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 798,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 799,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 800,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 750
													}
												]
											}
										},
										{
											"id": 801,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 767,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 768,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 769,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 770,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 758,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 759,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 775,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 776,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 777,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 778,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 750
													}
												]
											}
										},
										{
											"id": 779,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 780,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 781,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 784,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 785,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 786,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 787,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 765,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 766,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 792,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 793,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 794,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 795,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 750
													}
												]
											}
										},
										{
											"id": 796,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 815,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 816,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 817,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 818,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 819,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 771,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 772,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 773,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 774,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 750
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 755,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 756,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 48,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 802,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 803,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 804,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 805,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 806,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 807,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 808,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 750
																					}
																				]
																			}
																		},
																		{
																			"id": 809,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 737
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 810,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 811,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 812,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 813,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 814,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 760,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 761,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 762,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 737
													}
												]
											}
										},
										{
											"id": 763,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 750
													}
												]
											}
										},
										{
											"id": 764,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								752
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								824,
								820,
								825,
								823
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								782,
								788,
								797,
								767,
								758,
								775,
								780,
								784,
								765,
								792,
								815,
								771,
								755,
								802,
								760
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Holder/index.tsx",
							"line": 43,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 737
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 750
								}
							]
						}
					]
				},
				{
					"id": 737,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 748,
							"name": "centerTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "title will be rendered in center"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 738,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "react element wich is rendered in block"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 740,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "css class name of final div"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 741,
							"name": "collapse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "blocks will be render in collapsable mode if sets to true"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 17,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 742,
							"name": "collapseClosed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "collpase enabled block renders in collpassed mode if sets to true"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 19,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 744,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "icon of the block"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 745,
							"name": "iconPosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "icon position, default is left"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 739,
							"name": "noPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "remove padding from block if sets to true"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 749,
							"name": "noTitleMargin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "remove margin of the title"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 747,
							"name": "showArrow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "display arrow in collapsable mode"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 743,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "title of the block"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Element"
									}
								]
							}
						},
						{
							"id": 746,
							"name": "transparent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "block renders transpoarent if true given"
							},
							"sources": [
								{
									"fileName": "components/Holder/index.tsx",
									"line": 27,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								748,
								738,
								740,
								741,
								742,
								744,
								745,
								739,
								749,
								747,
								743,
								746
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Holder/index.tsx",
							"line": 9,
							"character": 16
						}
					]
				},
				{
					"id": 750,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Holder/index.tsx",
							"line": 36,
							"character": 16
						}
					]
				},
				{
					"id": 829,
					"name": "Panel",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Holder/index.tsx",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "CollapsePanel"
					},
					"defaultValue": " Collapse.Panel"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						751
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						737,
						750
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						829
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Holder/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1394,
			"name": "Components/ChangePasswordComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/ChangePassword/index.tsx",
			"children": [
				{
					"id": 1397,
					"name": "ChangePasswordComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a simple component for redirecting user to change password page"
					},
					"typeParameter": [
						{
							"id": 1403,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1398,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1399,
									"name": "new ChangePasswordComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1400,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1395
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangePasswordComponent",
										"id": 1397
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/ChangePassword/index.tsx",
									"line": 21,
									"character": 71
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1470,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1466,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1467,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1468,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1468
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1395
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1471,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1472,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 1473,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1474,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1469,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1396
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1428,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1429,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1434,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1435,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1436,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1437,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1443,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1444,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1445,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1446,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1396
													}
												]
											}
										},
										{
											"id": 1447,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1413,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1414,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1415,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1416,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1404,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1405,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1421,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1422,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1423,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1424,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1396
													}
												]
											}
										},
										{
											"id": 1425,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1426,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1427,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1430,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1431,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1432,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1433,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1411,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1412,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1438,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1439,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1440,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1441,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1396
													}
												]
											}
										},
										{
											"id": 1442,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1461,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1462,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1463,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1464,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1465,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1417,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1418,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1419,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1420,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1396
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1401,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1402,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/ChangePassword/index.tsx",
									"line": 27,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1448,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1449,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1450,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1451,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1452,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1453,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1454,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1396
																					}
																				]
																			}
																		},
																		{
																			"id": 1455,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1395
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1456,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1457,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1458,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1459,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1460,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1406,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1407,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1408,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1395
													}
												]
											}
										},
										{
											"id": 1409,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1396
													}
												]
											}
										},
										{
											"id": 1410,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1398
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1470,
								1466,
								1471,
								1469
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1428,
								1434,
								1443,
								1413,
								1404,
								1421,
								1426,
								1430,
								1411,
								1438,
								1461,
								1417,
								1401,
								1448,
								1406
							]
						}
					],
					"sources": [
						{
							"fileName": "components/ChangePassword/index.tsx",
							"line": 21,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1395
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1396
								}
							]
						}
					]
				},
				{
					"id": 1395,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/ChangePassword/index.tsx",
							"line": 12,
							"character": 16
						}
					]
				},
				{
					"id": 1396,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/ChangePassword/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1397
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1395,
						1396
					]
				}
			],
			"sources": [
				{
					"fileName": "components/ChangePassword/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1686,
			"name": "Components/DashboardHeaderComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DashboardHeader/index.tsx",
			"children": [
				{
					"id": 1695,
					"name": "DashboardHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "header of the users dashboard which contain user avatar, menus and buttons"
					},
					"typeParameter": [
						{
							"id": 1703,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1696,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1697,
									"name": "new DashboardHeaderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1698,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1687
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DashboardHeaderComponent",
										"id": 1695
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 49,
									"character": 72
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1770,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1766,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1767,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1768,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1768
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1687
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1771,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1772,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1773,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1774,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1769,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1694
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1728,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1729,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1734,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1735,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1736,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1737,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1743,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1744,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1745,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1746,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1694
													}
												]
											}
										},
										{
											"id": 1747,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1713,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1714,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1715,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1716,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1704,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1705,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1721,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1722,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1723,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1724,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1694
													}
												]
											}
										},
										{
											"id": 1725,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1726,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1727,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1730,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1731,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1732,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1733,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1711,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1712,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1738,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1739,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1740,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1741,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1694
													}
												]
											}
										},
										{
											"id": 1742,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1761,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1762,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1763,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1764,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1765,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1717,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1718,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1719,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1720,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1694
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1699,
							"name": "logOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1700,
									"name": "logOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "logout current user , it calls logOut from props which is binded to a redux function"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 57,
									"character": 17
								}
							]
						},
						{
							"id": 1701,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1702,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 62,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1748,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1749,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1750,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1751,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1752,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1753,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1754,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1694
																					}
																				]
																			}
																		},
																		{
																			"id": 1755,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1687
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1756,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1757,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1758,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1759,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1760,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1706,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1707,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1708,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1687
													}
												]
											}
										},
										{
											"id": 1709,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1694
													}
												]
											}
										},
										{
											"id": 1710,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1696
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1770,
								1766,
								1771,
								1769
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1728,
								1734,
								1743,
								1713,
								1704,
								1721,
								1726,
								1730,
								1711,
								1738,
								1761,
								1717,
								1699,
								1701,
								1748,
								1706
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 49,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1687
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1694
								}
							]
						}
					]
				},
				{
					"id": 1687,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1693,
							"name": "isAdmin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds current user's administration status"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1690,
							"name": "logOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "logout function which is binded to a redux function"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1691,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1692,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/DashboardHeader/index.tsx",
											"line": 37,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1689,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current browser path we use it to find proper icon and title of the page"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1688,
							"name": "userEmail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "email address of curren user"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeader/index.tsx",
									"line": 31,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1693,
								1690,
								1689,
								1688
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 29,
							"character": 16
						}
					]
				},
				{
					"id": 1694,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 43,
							"character": 16
						}
					]
				},
				{
					"id": 1777,
					"name": "Header",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 26,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1775,
					"name": "Search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Search"
					},
					"defaultValue": " Input.Search"
				},
				{
					"id": 1776,
					"name": "logo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 23,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/logo-header.png\")"
				},
				{
					"id": 1778,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 27,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1779,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1780,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1781,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1782,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1783,
											"name": "logOut",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 1784,
													"name": "logOut",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardHeader/index.tsx",
													"line": 118,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1783
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 116,
							"character": 27
						}
					]
				},
				{
					"id": 1785,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1786,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1787,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1790,
											"name": "path",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DashboardHeader/index.tsx",
													"line": 125,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.router.location.pathname"
										},
										{
											"id": 1789,
											"name": "userEmail",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DashboardHeader/index.tsx",
													"line": 124,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.email"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1790,
												1789
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeader/index.tsx",
							"line": 122,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1695
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1687,
						1694
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1777,
						1775,
						1776,
						1778
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1779,
						1785
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DashboardHeader/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1585,
			"name": "Components/DashboardHeaderProfileComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DashboardHeaderProfile/index.tsx",
			"children": [
				{
					"id": 1593,
					"name": "DashboardHeaderProfileComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "user's menu that is visible after click to users avatar\nit shows some usefull information and includes logout\nand change password button"
					},
					"typeParameter": [
						{
							"id": 1601,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1594,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1595,
									"name": "new DashboardHeaderProfileComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1596,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1586
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DashboardHeaderProfileComponent",
										"id": 1593
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 36,
									"character": 79
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1668,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1664,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1665,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1666,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1666
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1586
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1669,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1670,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1671,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1672,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1667,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1592
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1626,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1627,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1632,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1633,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1634,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1635,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1641,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1642,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1643,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1644,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1592
													}
												]
											}
										},
										{
											"id": 1645,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1611,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1612,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1613,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1614,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1602,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1603,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1619,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1620,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1621,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1622,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1592
													}
												]
											}
										},
										{
											"id": 1623,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1624,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1625,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1628,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1629,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1630,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1631,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1609,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1610,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1636,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1637,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1638,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1639,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1592
													}
												]
											}
										},
										{
											"id": 1640,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1659,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1660,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1661,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1662,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1663,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1615,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1616,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1617,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1618,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1592
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1597,
							"name": "logOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1598,
									"name": "logOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "logout current user using redux's logOut function available in props"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 44,
									"character": 17
								}
							]
						},
						{
							"id": 1599,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1600,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 49,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1646,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1647,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1648,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1649,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1650,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1651,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1652,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1592
																					}
																				]
																			}
																		},
																		{
																			"id": 1653,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1586
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1654,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1655,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1656,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1657,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1658,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1604,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1605,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1606,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1586
													}
												]
											}
										},
										{
											"id": 1607,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1592
													}
												]
											}
										},
										{
											"id": 1608,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1594
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1668,
								1664,
								1669,
								1667
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1626,
								1632,
								1641,
								1611,
								1602,
								1619,
								1624,
								1628,
								1609,
								1636,
								1659,
								1615,
								1597,
								1599,
								1646,
								1604
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 36,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1586
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1592
								}
							]
						}
					]
				},
				{
					"id": 1586,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1588,
							"name": "auth_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 22,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1587,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current user's email address"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1589,
							"name": "logOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "logout current user (this function is binded to a redux funtion)"
							},
							"sources": [
								{
									"fileName": "components/DashboardHeaderProfile/index.tsx",
									"line": 25,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1590,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1591,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/DashboardHeaderProfile/index.tsx",
											"line": 25,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1588,
								1587,
								1589
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 1592,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 28,
							"character": 16
						}
					]
				},
				{
					"id": 1673,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 17,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1674,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1675,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1676,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1677,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1678,
											"name": "logOut",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 1679,
													"name": "logOut",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardHeaderProfile/index.tsx",
													"line": 80,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1678
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 78,
							"character": 27
						}
					]
				},
				{
					"id": 1680,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1681,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1682,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1683,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1685,
											"name": "auth_time",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DashboardHeaderProfile/index.tsx",
													"line": 87,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.auth_time"
										},
										{
											"id": 1684,
											"name": "email",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DashboardHeaderProfile/index.tsx",
													"line": 86,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.email"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1685,
												1684
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardHeaderProfile/index.tsx",
							"line": 84,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1593
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1586,
						1592
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1673
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1674,
						1680
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DashboardHeaderProfile/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1791,
			"name": "Components/DashboardMenuComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DashboardMenu/index.tsx",
			"children": [
				{
					"id": 1801,
					"name": "DashboardMenuComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"typeParameter": [
						{
							"id": 1820,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1809,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1810,
									"name": "new DashboardMenuComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1811,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DashboardMenuComponent",
										"id": 1801
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 40,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1882,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1878,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1879,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1880,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1880
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1792
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1883,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1884,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1885,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1886,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1881,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1798
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1840,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1841,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1846,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1847,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1848,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1849,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1855,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1856,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1857,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1858,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1798
													}
												]
											}
										},
										{
											"id": 1859,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1825,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1826,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1827,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1828,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1821,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1822,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1833,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1834,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1835,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1836,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1798
													}
												]
											}
										},
										{
											"id": 1837,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1838,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1839,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1842,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1843,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1844,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1845,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1823,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1824,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1850,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1851,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1852,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1853,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1798
													}
												]
											}
										},
										{
											"id": 1854,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1873,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1874,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1875,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1876,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1877,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1829,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1830,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1831,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1792
													}
												]
											}
										},
										{
											"id": 1832,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1798
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1816,
							"name": "logOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1817,
									"name": "logOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 58,
									"character": 17
								}
							]
						},
						{
							"id": 1818,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1819,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 63,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1860,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1861,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1862,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1863,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1864,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1865,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1866,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1798
																					}
																				]
																			}
																		},
																		{
																			"id": 1867,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1792
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1868,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1869,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1870,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1871,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1872,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1812,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1813,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1814,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1815,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 46,
									"character": 32
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1802,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1803,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1804,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1805,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1806,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1807,
													"name": "isOpen",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/DashboardMenu/index.tsx",
															"line": 39,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												},
												{
													"id": 1808,
													"name": "position",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/DashboardMenu/index.tsx",
															"line": 39,
															"character": 40
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " t.dir()"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1807,
														1808
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 38,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1809
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1882,
								1878,
								1883,
								1881
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1840,
								1846,
								1855,
								1825,
								1821,
								1833,
								1838,
								1842,
								1823,
								1850,
								1873,
								1829,
								1816,
								1818,
								1860,
								1812,
								1802
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 36,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1792
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1798
								}
							]
						}
					]
				},
				{
					"id": 1792,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1797,
							"name": "isAdmin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 28,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1794,
							"name": "logOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 27,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1795,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1796,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/DashboardMenu/index.tsx",
											"line": 27,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1793,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1797,
								1794,
								1793
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 25,
							"character": 16
						}
					]
				},
				{
					"id": 1798,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1799,
							"name": "isOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 32,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1800,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/DashboardMenu/index.tsx",
									"line": 33,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1799,
								1800
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 31,
							"character": 16
						}
					]
				},
				{
					"id": 1887,
					"name": "Search",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Search"
					},
					"defaultValue": " Input.Search"
				},
				{
					"id": 1888,
					"name": "logo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 20,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"../../assets/images/logo-header.png\")"
				},
				{
					"id": 1889,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 23,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1890,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1891,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1892,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1893,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1894,
											"name": "logOut",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 1895,
													"name": "logOut",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "components/DashboardMenu/index.tsx",
													"line": 88,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1894
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 86,
							"character": 27
						}
					]
				},
				{
					"id": 1896,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1897,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1898,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1899,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1900,
											"name": "path",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DashboardMenu/index.tsx",
													"line": 94,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.router.location.pathname"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1900
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/index.tsx",
							"line": 92,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1801
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1792,
						1798
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1887,
						1888,
						1889
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1890,
						1896
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DashboardMenu/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1901,
			"name": "Components/DepositComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Deposit/index.tsx",
			"children": [
				{
					"id": 1907,
					"name": "DepositComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "a full featured component for deposite currencies\nincluding qr code modal, copy wallet button and coin select dialog"
					},
					"typeParameter": [
						{
							"id": 1918,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1908,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1909,
									"name": "new DepositComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1910,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1902
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DepositComponent",
										"id": 1907
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 38,
									"character": 64
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1985,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1981,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1982,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1983,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1983
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1902
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1986,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1987,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1988,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1989,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1984,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1905
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1943,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1944,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1949,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1950,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1951,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1952,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1958,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1959,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1960,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1961,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1905
													}
												]
											}
										},
										{
											"id": 1962,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1928,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1929,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1930,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1931,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1919,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1920,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1936,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1937,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1938,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1939,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1905
													}
												]
											}
										},
										{
											"id": 1940,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1941,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1942,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1945,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1946,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1947,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1948,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1926,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1927,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1953,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1954,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1955,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1956,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1905
													}
												]
											}
										},
										{
											"id": 1957,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1976,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1977,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1978,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1979,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1980,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1932,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1933,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1934,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1935,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1905
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1916,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1917,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 56,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1911,
							"name": "setQrModalStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1912,
									"name": "setQrModalStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set qr code modal visibility status"
									},
									"parameters": [
										{
											"id": 1913,
											"name": "qrModalVisible",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 48,
									"character": 27
								}
							]
						},
						{
							"id": 1963,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1964,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1965,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1966,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1967,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1968,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1969,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1905
																					}
																				]
																			}
																		},
																		{
																			"id": 1970,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1902
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1971,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1972,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1973,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1974,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1975,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1921,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1922,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1923,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1902
													}
												]
											}
										},
										{
											"id": 1924,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1905
													}
												]
											}
										},
										{
											"id": 1925,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1914,
							"name": "showCopiedMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1915,
									"name": "showCopiedMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "display a message to inform users about copied wallet address"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 53,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1908
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1985,
								1981,
								1986,
								1984
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1943,
								1949,
								1958,
								1928,
								1919,
								1936,
								1941,
								1945,
								1926,
								1953,
								1976,
								1932,
								1916,
								1911,
								1963,
								1921,
								1914
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 38,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1902
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1905
								}
							]
						}
					]
				},
				{
					"id": 1902,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1904,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds user's current balance, binded to redux store"
							},
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 26,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						},
						{
							"id": 1903,
							"name": "selectedDepositCurrency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "symbol selected by user for deposit"
							},
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 23,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1904,
								1903
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 21,
							"character": 16
						}
					]
				},
				{
					"id": 1905,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1906,
							"name": "qrModalVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "qr code modal visibility status"
							},
							"sources": [
								{
									"fileName": "components/Deposit/index.tsx",
									"line": 31,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1906
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 29,
							"character": 16
						}
					]
				},
				{
					"id": 1991,
					"name": "InputGroup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 19,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "StatelessComponent",
						"typeArguments": [
							{
								"type": "reference",
								"name": "GroupProps"
							}
						]
					},
					"defaultValue": " Input.Group"
				},
				{
					"id": 1990,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 18,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1992,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1993,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1994,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1995,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1996,
											"name": "balance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Deposit/index.tsx",
													"line": 166,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.balance"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1996
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Deposit/index.tsx",
							"line": 163,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1907
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1902,
						1905
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1991,
						1990
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1992
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Deposit/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1997,
			"name": "Components/DespositHistoryComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DepositHistory/index.tsx",
			"children": [
				{
					"id": 2002,
					"name": "DespositHistoryComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "a component to display recent deposite histories width\nconfirmation count and status"
					},
					"typeParameter": [
						{
							"id": 2018,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2009,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2010,
									"name": "new DespositHistoryComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2011,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1998
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DespositHistoryComponent",
										"id": 2002
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 38,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2083,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2079,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2080,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2081,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2081
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1998
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2084,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2085,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2086,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2087,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2082,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2000
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2041,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2042,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2047,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2048,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2049,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2050,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2056,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2057,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2058,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2059,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2000
													}
												]
											}
										},
										{
											"id": 2060,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2026,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2027,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2028,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2029,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2012,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2013,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 77,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2034,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2035,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2036,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2037,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2000
													}
												]
											}
										},
										{
											"id": 2038,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2039,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2040,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2043,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2044,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2045,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2046,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2024,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2025,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2051,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2052,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2053,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2054,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2000
													}
												]
											}
										},
										{
											"id": 2055,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2074,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2075,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2076,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2077,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2078,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2030,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2031,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2032,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2033,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2000
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2014,
							"name": "loadData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2015,
									"name": "loadData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 81,
									"character": 19
								}
							]
						},
						{
							"id": 2016,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2017,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 94,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2061,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2062,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2063,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2064,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2065,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2066,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2067,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2000
																					}
																				]
																			}
																		},
																		{
																			"id": 2068,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1998
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2069,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2070,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2071,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2072,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2073,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2019,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2020,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2021,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1998
													}
												]
											}
										},
										{
											"id": 2022,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2000
													}
												]
											}
										},
										{
											"id": 2023,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2003,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2004,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2005,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2006,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2007,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2008,
													"name": "history",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/DepositHistory/index.tsx",
															"line": 35,
															"character": 28
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " props.history"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2008
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 32,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2009
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2083,
								2079,
								2084,
								2082
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2041,
								2047,
								2056,
								2026,
								2012,
								2034,
								2039,
								2043,
								2024,
								2051,
								2074,
								2030,
								2014,
								2016,
								2061,
								2019,
								2003
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DepositHistory/index.tsx",
							"line": 30,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1998
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2000
								}
							]
						}
					]
				},
				{
					"id": 1998,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1999,
							"name": "history",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "deposite history object that is a available in redux store"
							},
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1999
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DepositHistory/index.tsx",
							"line": 16,
							"character": 16
						}
					]
				},
				{
					"id": 2000,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2001,
							"name": "history",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds deposite history of the user"
							},
							"sources": [
								{
									"fileName": "components/DepositHistory/index.tsx",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2001
							]
						}
					],
					"sources": [
						{
							"fileName": "components/DepositHistory/index.tsx",
							"line": 21,
							"character": 16
						}
					]
				},
				{
					"id": 2088,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/DepositHistory/index.tsx",
							"line": 14,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 2089,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2090,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2091,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2092,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2093,
											"name": "history",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/DepositHistory/index.tsx",
													"line": 118,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.history"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2093
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DepositHistory/index.tsx",
							"line": 115,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2002
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1998,
						2000
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2088
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2089
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DepositHistory/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2094,
			"name": "Components/DummyComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Dummy/index.tsx",
			"children": [
				{
					"id": 2098,
					"name": "DummyComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "this is a Dummy component, you can copy this to start a new component"
					},
					"typeParameter": [
						{
							"id": 2104,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2099,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2100,
									"name": "new DummyComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2101,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2095
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DummyComponent",
										"id": 2098
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Dummy/index.tsx",
									"line": 26,
									"character": 62
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2171,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2167,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2168,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2169,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2169
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2095
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2172,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2173,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2174,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2175,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2170,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2097
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2129,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2130,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2135,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2136,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2137,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2138,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2144,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2145,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2146,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2147,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2097
													}
												]
											}
										},
										{
											"id": 2148,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2114,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2115,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2116,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2117,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2105,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2106,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2122,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2123,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2124,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2125,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2097
													}
												]
											}
										},
										{
											"id": 2126,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2127,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2128,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2131,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2132,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2133,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2134,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2112,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2113,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2139,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2140,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2141,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2142,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2097
													}
												]
											}
										},
										{
											"id": 2143,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2162,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2163,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2164,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2165,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2166,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2118,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2119,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2120,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2121,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2097
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2102,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2103,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Dummy/index.tsx",
									"line": 32,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2149,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2150,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2151,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2152,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2153,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2154,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2155,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2097
																					}
																				]
																			}
																		},
																		{
																			"id": 2156,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2095
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2157,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2158,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2159,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2160,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2161,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2107,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2108,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2109,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2095
													}
												]
											}
										},
										{
											"id": 2110,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2097
													}
												]
											}
										},
										{
											"id": 2111,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2099
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2171,
								2167,
								2172,
								2170
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2129,
								2135,
								2144,
								2114,
								2105,
								2122,
								2127,
								2131,
								2112,
								2139,
								2162,
								2118,
								2102,
								2149,
								2107
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 26,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2095
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2097
								}
							]
						}
					]
				},
				{
					"id": 2095,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2096,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current user's email address that is synced with redux"
							},
							"sources": [
								{
									"fileName": "components/Dummy/index.tsx",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2096
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 2097,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 20,
							"character": 16
						}
					]
				},
				{
					"id": 2176,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 13,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 2177,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2178,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2179,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2180,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 39,
							"character": 27
						}
					]
				},
				{
					"id": 2181,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2182,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2183,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2184,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2185,
											"name": "email",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Dummy/index.tsx",
													"line": 46,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user.email"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2185
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Dummy/index.tsx",
							"line": 44,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2098
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2095,
						2097
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2176
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2177,
						2181
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Dummy/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 556,
			"name": "Components/ExchangeValueComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/ExchangeValue/index.tsx",
			"children": [
				{
					"id": 566,
					"name": "ExchangeValueComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "this component display numbers and support colorful display\nwhen number grows or falls, thousand seperator and fix floats\nare supported too"
					},
					"typeParameter": [
						{
							"id": 579,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 574,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "new ExchangeValueComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 576,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 557
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ExchangeValueComponent",
										"id": 566
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 50,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 646,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 642,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 643,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 644,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																644
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 557
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 647,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 648,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 649,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 650,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 645,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 563
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 604,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 605,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 610,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 611,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 612,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 613,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 619,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 620,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 621,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 622,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 563
													}
												]
											}
										},
										{
											"id": 623,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 589,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 590,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 591,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 592,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 580,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 581,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 597,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 598,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 599,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 600,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 563
													}
												]
											}
										},
										{
											"id": 601,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 602,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 603,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 606,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 607,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 608,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 609,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 587,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 588,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 614,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 615,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 616,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 617,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 563
													}
												]
											}
										},
										{
											"id": 618,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 637,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 638,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 639,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 640,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 641,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 593,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 594,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 595,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 596,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 563
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 577,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 578,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 60,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 624,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 625,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 626,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 627,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 628,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 629,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 630,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 563
																					}
																				]
																			}
																		},
																		{
																			"id": 631,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 557
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 632,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 633,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 634,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 635,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 636,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 582,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 583,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 584,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 557
													}
												]
											}
										},
										{
											"id": 585,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 563
													}
												]
											}
										},
										{
											"id": 586,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 567,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 568,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 569,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 570,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 571,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 572,
													"name": "status",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/ExchangeValue/index.tsx",
															"line": 38,
															"character": 57
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"normal\""
												},
												{
													"id": 573,
													"name": "value",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/ExchangeValue/index.tsx",
															"line": 38,
															"character": 74
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": " parseFloat(props.value)"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														572,
														573
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 37,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								574
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								646,
								642,
								647,
								645
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								604,
								610,
								619,
								589,
								580,
								597,
								602,
								606,
								587,
								614,
								637,
								593,
								577,
								624,
								582,
								567
							]
						}
					],
					"sources": [
						{
							"fileName": "components/ExchangeValue/index.tsx",
							"line": 35,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 557
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 563
								}
							]
						}
					]
				},
				{
					"id": 557,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 559,
							"name": "fixFloatNum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "number of floating point digits to display , default is 2"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 14,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 561,
							"name": "localNumbers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "display local numbers"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 560,
							"name": "seperateThousand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "seperate thousands with comma"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 16,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 562,
							"name": "stockStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will be displayed in red and green color when value is changed"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 20,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 558,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "input numer"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								559,
								561,
								560,
								562,
								558
							]
						}
					],
					"sources": [
						{
							"fileName": "components/ExchangeValue/index.tsx",
							"line": 10,
							"character": 16
						}
					]
				},
				{
					"id": 563,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 565,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "growth status"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 27,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "grow"
									},
									{
										"type": "stringLiteral",
										"value": "fall"
									},
									{
										"type": "stringLiteral",
										"value": "normal"
									}
								]
							}
						},
						{
							"id": 564,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "keeps value to compare with new one from props"
							},
							"sources": [
								{
									"fileName": "components/ExchangeValue/index.tsx",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								565,
								564
							]
						}
					],
					"sources": [
						{
							"fileName": "components/ExchangeValue/index.tsx",
							"line": 23,
							"character": 16
						}
					]
				},
				{
					"id": 651,
					"name": "commaNumber",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/ExchangeValue/index.tsx",
							"line": 5,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"comma-number\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						566
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						557,
						563
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						651
					]
				}
			],
			"sources": [
				{
					"fileName": "components/ExchangeValue/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2186,
			"name": "Components/ForexComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Forex/index.tsx",
			"children": [
				{
					"id": 2192,
					"name": "ForexComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"typeParameter": [
						{
							"id": 2210,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2203,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2204,
									"name": "new ForexComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2205,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2187
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ForexComponent",
										"id": 2192
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 58,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2275,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2271,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2272,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2273,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2273
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2187
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2276,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2277,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2278,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2279,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2274,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2190
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2233,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2234,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2239,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2240,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2241,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2242,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2248,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2249,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2250,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2251,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2190
													}
												]
											}
										},
										{
											"id": 2252,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2218,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2219,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2220,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2221,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2206,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2207,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 67,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2226,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2227,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2228,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2229,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2190
													}
												]
											}
										},
										{
											"id": 2230,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2231,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2232,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2235,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2236,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2237,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2238,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2216,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2217,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2243,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2244,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2245,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2246,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2190
													}
												]
											}
										},
										{
											"id": 2247,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2266,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2267,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2268,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2269,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2270,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2222,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2223,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2224,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2225,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2190
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2208,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2209,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 71,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2253,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2254,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2255,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2256,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2257,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2258,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2259,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2190
																					}
																				]
																			}
																		},
																		{
																			"id": 2260,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2187
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2261,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2262,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2263,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2264,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2265,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2211,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2212,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2213,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2187
													}
												]
											}
										},
										{
											"id": 2214,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2190
													}
												]
											}
										},
										{
											"id": 2215,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2193,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2194,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2195,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2196,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2197,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2198,
													"name": "exchangeRates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/Forex/index.tsx",
															"line": 55,
															"character": 34
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 2199,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 2201,
																		"name": "rate",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "components/Forex/index.tsx",
																				"line": 34,
																				"character": 29
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"defaultValue": "0"
																	},
																	{
																		"id": 2202,
																		"name": "round",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "components/Forex/index.tsx",
																				"line": 34,
																				"character": 39
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"defaultValue": "2"
																	},
																	{
																		"id": 2200,
																		"name": "symbol",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "components/Forex/index.tsx",
																				"line": 34,
																				"character": 16
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"defaultValue": "\"EUR\""
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			2201,
																			2202,
																			2200
																		]
																	}
																]
															}
														}
													},
													"defaultValue": " calcExchangeRate(props)"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2198
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 52,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2203
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2275,
								2271,
								2276,
								2274
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2233,
								2239,
								2248,
								2218,
								2206,
								2226,
								2231,
								2235,
								2216,
								2243,
								2266,
								2222,
								2208,
								2253,
								2211,
								2193
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Forex/index.tsx",
							"line": 50,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2187
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2190
								}
							]
						}
					]
				},
				{
					"id": 2187,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2189,
							"name": "forex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds all exchange rates. synced from redux store"
							},
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 2188,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "input symbol"
							},
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2189,
								2188
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Forex/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 2190,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2191,
							"name": "exchangeRates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds calcucalted exchange rates"
							},
							"sources": [
								{
									"fileName": "components/Forex/index.tsx",
									"line": 24,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2191
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Forex/index.tsx",
							"line": 22,
							"character": 16
						}
					]
				},
				{
					"id": 2280,
					"name": "calcExchangeRate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2281,
							"name": "calcExchangeRate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "this component displays exchange rate off given price with\nother common fiats or given fiats"
							},
							"parameters": [
								{
									"id": 2282,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 2283,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 2285,
												"name": "rate",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "components/Forex/index.tsx",
														"line": 34,
														"character": 29
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												},
												"defaultValue": "0"
											},
											{
												"id": 2286,
												"name": "round",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "components/Forex/index.tsx",
														"line": 34,
														"character": 39
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												},
												"defaultValue": "2"
											},
											{
												"id": 2284,
												"name": "symbol",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "components/Forex/index.tsx",
														"line": 34,
														"character": 16
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"EUR\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													2285,
													2286,
													2284
												]
											}
										]
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Forex/index.tsx",
							"line": 31,
							"character": 25
						}
					]
				},
				{
					"id": 2287,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2288,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2289,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2290,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2291,
											"name": "forex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Forex/index.tsx",
													"line": 94,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.forex"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2291
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Forex/index.tsx",
							"line": 91,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2192
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2187,
						2190
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2280,
						2287
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Forex/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 652,
			"name": "Components/GaugeComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Gauge/index.tsx",
			"children": [
				{
					"id": 658,
					"name": "GaugeComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a component for display a nice animated gauge\nfrom given props using echarts"
					},
					"typeParameter": [
						{
							"id": 664,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 659,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "new GaugeComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 661,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 653
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GaugeComponent",
										"id": 658
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Gauge/index.tsx",
									"line": 25,
									"character": 62
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 731,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 727,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 728,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 729,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																729
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 653
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 732,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 733,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 734,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 735,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 730,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 656
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 689,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 690,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 695,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 696,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 697,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 698,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 704,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 705,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 706,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 707,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 656
													}
												]
											}
										},
										{
											"id": 708,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 674,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 676,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 677,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 665,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 666,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 682,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 683,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 684,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 685,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 656
													}
												]
											}
										},
										{
											"id": 686,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 687,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 688,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 691,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 692,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 693,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 694,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 672,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 673,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 699,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 700,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 701,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 702,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 656
													}
												]
											}
										},
										{
											"id": 703,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 722,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 723,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 724,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 725,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 726,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 678,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 679,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 680,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 681,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 656
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 662,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 663,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Gauge/index.tsx",
									"line": 100,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 709,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 710,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 711,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 712,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 713,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 714,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 715,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 656
																					}
																				]
																			}
																		},
																		{
																			"id": 716,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 653
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 717,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 718,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 719,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 720,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 721,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 667,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 669,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 653
													}
												]
											}
										},
										{
											"id": 670,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 656
													}
												]
											}
										},
										{
											"id": 671,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								659
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								731,
								727,
								732,
								730
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								689,
								695,
								704,
								674,
								665,
								682,
								687,
								691,
								672,
								699,
								722,
								678,
								662,
								709,
								667
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Gauge/index.tsx",
							"line": 25,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 653
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 656
								}
							]
						}
					]
				},
				{
					"id": 653,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 655,
							"name": "percent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "given percent"
							},
							"sources": [
								{
									"fileName": "components/Gauge/index.tsx",
									"line": 13,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 654,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "guage title with is displayed in center of guage"
							},
							"sources": [
								{
									"fileName": "components/Gauge/index.tsx",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								655,
								654
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Gauge/index.tsx",
							"line": 9,
							"character": 16
						}
					]
				},
				{
					"id": 656,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 657,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "holds echart's options object"
							},
							"sources": [
								{
									"fileName": "components/Gauge/index.tsx",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								657
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Gauge/index.tsx",
							"line": 16,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						658
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						653,
						656
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Gauge/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2292,
			"name": "Components/GoogleAuthComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/GoogleAuth/index.tsx",
			"children": [
				{
					"id": 2295,
					"name": "GoogleAuthComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a simple component for redirecting user to google auth setup page"
					},
					"typeParameter": [
						{
							"id": 2301,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2296,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2297,
									"name": "new GoogleAuthComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2298,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2293
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GoogleAuthComponent",
										"id": 2295
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/GoogleAuth/index.tsx",
									"line": 21,
									"character": 67
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2368,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2364,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2365,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2366,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2366
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2293
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2369,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2370,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 2371,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2372,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2367,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2294
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2326,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2327,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2332,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2333,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2334,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2335,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2341,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2342,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2343,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2344,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2294
													}
												]
											}
										},
										{
											"id": 2345,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2311,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2312,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2313,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2314,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2302,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2303,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2319,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2320,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2321,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2322,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2294
													}
												]
											}
										},
										{
											"id": 2323,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2324,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2325,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2328,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2329,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2330,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2331,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2309,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2310,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2336,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2337,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2338,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2339,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2294
													}
												]
											}
										},
										{
											"id": 2340,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2359,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2360,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2361,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2362,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2363,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2315,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2316,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2317,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2318,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2294
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2299,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2300,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/GoogleAuth/index.tsx",
									"line": 27,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2346,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2347,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2348,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2349,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2350,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2351,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2352,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2294
																					}
																				]
																			}
																		},
																		{
																			"id": 2353,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2293
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2354,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2355,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2356,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2357,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2358,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2304,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2305,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2306,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2293
													}
												]
											}
										},
										{
											"id": 2307,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2294
													}
												]
											}
										},
										{
											"id": 2308,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2296
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2368,
								2364,
								2369,
								2367
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2326,
								2332,
								2341,
								2311,
								2302,
								2319,
								2324,
								2328,
								2309,
								2336,
								2359,
								2315,
								2299,
								2346,
								2304
							]
						}
					],
					"sources": [
						{
							"fileName": "components/GoogleAuth/index.tsx",
							"line": 21,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2293
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2294
								}
							]
						}
					]
				},
				{
					"id": 2293,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/GoogleAuth/index.tsx",
							"line": 12,
							"character": 16
						}
					]
				},
				{
					"id": 2294,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/GoogleAuth/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2295
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2293,
						2294
					]
				}
			],
			"sources": [
				{
					"fileName": "components/GoogleAuth/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 889,
			"name": "Components/InternalExchangeComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/InternalExchange/index.tsx",
			"children": [
				{
					"id": 897,
					"name": "InternalExchangeComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "this component display two side by side gauges to\ncompare two diffrent symbol and choose between\nexchange options"
					},
					"typeParameter": [
						{
							"id": 903,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 898,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 899,
									"name": "new InternalExchangeComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 900,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 890
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InternalExchangeComponent",
										"id": 897
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 40,
									"character": 73
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 970,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 966,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 967,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 968,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																968
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 890
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 971,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 972,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 973,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 974,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 969,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 896
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 928,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 929,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 934,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 935,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 936,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 937,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 943,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 944,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 945,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 946,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 896
													}
												]
											}
										},
										{
											"id": 947,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 913,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 914,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 915,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 916,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 904,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 905,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 921,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 922,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 923,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 924,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 896
													}
												]
											}
										},
										{
											"id": 925,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 926,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 927,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 930,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 932,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 933,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 911,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 912,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 938,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 939,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 940,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 941,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 896
													}
												]
											}
										},
										{
											"id": 942,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 961,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 962,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 963,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 964,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 965,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 917,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 918,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 919,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 920,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 896
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 901,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 902,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 46,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 948,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 949,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 950,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 951,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 952,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 953,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 954,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 896
																					}
																				]
																			}
																		},
																		{
																			"id": 955,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 890
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 956,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 957,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 958,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 959,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 960,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 906,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 907,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 908,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 890
													}
												]
											}
										},
										{
											"id": 909,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 896
													}
												]
											}
										},
										{
											"id": 910,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								898
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								970,
								966,
								971,
								969
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								928,
								934,
								943,
								913,
								904,
								921,
								926,
								930,
								911,
								938,
								961,
								917,
								901,
								948,
								906
							]
						}
					],
					"sources": [
						{
							"fileName": "components/InternalExchange/index.tsx",
							"line": 40,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 890
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 896
								}
							]
						}
					]
				},
				{
					"id": 890,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 893,
							"name": "cashDesks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "all cashdesks from redux"
							},
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 895,
							"name": "cryptos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "all crypto rates from redux"
							},
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 29,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 894,
							"name": "forex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "all forex rates from redux"
							},
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 27,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 891,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "origin symbol"
							},
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 892,
							"name": "toSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "target symbol"
							},
							"sources": [
								{
									"fileName": "components/InternalExchange/index.tsx",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								893,
								895,
								894,
								891,
								892
							]
						}
					],
					"sources": [
						{
							"fileName": "components/InternalExchange/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 896,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/InternalExchange/index.tsx",
							"line": 32,
							"character": 16
						}
					]
				},
				{
					"id": 975,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 976,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 977,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 978,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 979,
											"name": "cashDesks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/InternalExchange/index.tsx",
													"line": 164,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.office.cashDesks || null"
										},
										{
											"id": 981,
											"name": "cryptos",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/InternalExchange/index.tsx",
													"line": 166,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.cryptos || null"
										},
										{
											"id": 980,
											"name": "forex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/InternalExchange/index.tsx",
													"line": 165,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.forex || null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												979,
												981,
												980
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/InternalExchange/index.tsx",
							"line": 162,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						897
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						890,
						896
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						975
					]
				}
			],
			"sources": [
				{
					"fileName": "components/InternalExchange/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2631,
			"name": "Components/KycComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/KYC/index.tsx",
			"children": [
				{
					"id": 2638,
					"name": "KycComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a component to show a user kyc and change functions"
					},
					"typeParameter": [
						{
							"id": 2651,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2639,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2640,
									"name": "new KycComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2641,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2632
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "KycComponent",
										"id": 2638
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 29,
									"character": 60
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2718,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2714,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2715,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2716,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2716
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2632
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2719,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2720,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 2721,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2722,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2717,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2635
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2676,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2677,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2682,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2683,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2684,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2685,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2691,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2692,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2693,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2694,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2635
													}
												]
											}
										},
										{
											"id": 2695,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2648,
							"name": "action",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2649,
									"name": "action",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2650,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 87,
									"character": 18
								}
							]
						},
						{
							"id": 2642,
							"name": "changeStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2643,
									"name": "changeStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2644,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2645,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 52,
									"character": 23
								}
							]
						},
						{
							"id": 2661,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2662,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2663,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2664,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2652,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2653,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2669,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2670,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2671,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2672,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2635
													}
												]
											}
										},
										{
											"id": 2673,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2674,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2675,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2678,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2679,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2680,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2681,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2659,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2660,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2686,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2687,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2688,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2689,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2635
													}
												]
											}
										},
										{
											"id": 2690,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2709,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2710,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2711,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2712,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2713,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2665,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2666,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2667,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2668,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2635
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2646,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2647,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 60,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2696,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2697,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2698,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2699,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2700,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2701,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2702,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2635
																					}
																				]
																			}
																		},
																		{
																			"id": 2703,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2632
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2704,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2705,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2706,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2707,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2708,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2654,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2655,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2656,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2632
													}
												]
											}
										},
										{
											"id": 2657,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2635
													}
												]
											}
										},
										{
											"id": 2658,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2639
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2718,
								2714,
								2719,
								2717
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2676,
								2682,
								2691,
								2648,
								2642,
								2661,
								2652,
								2669,
								2674,
								2678,
								2659,
								2686,
								2709,
								2665,
								2646,
								2696,
								2654
							]
						}
					],
					"sources": [
						{
							"fileName": "components/KYC/index.tsx",
							"line": 29,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2632
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2635
								}
							]
						}
					]
				},
				{
					"id": 2632,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2634,
							"name": "changeRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "change record function from parent"
							},
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2633,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "kyc record"
							},
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2634,
								2633
							]
						}
					],
					"sources": [
						{
							"fileName": "components/KYC/index.tsx",
							"line": 12,
							"character": 16
						}
					]
				},
				{
					"id": 2635,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2636,
							"name": "pictures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "prepared pictures from record"
							},
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 21,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 2637,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "kyc record"
							},
							"sources": [
								{
									"fileName": "components/KYC/index.tsx",
									"line": 23,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2636,
								2637
							]
						}
					],
					"sources": [
						{
							"fileName": "components/KYC/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 2723,
					"name": "api",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/KYC/index.tsx",
							"line": 10,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "kycApi",
						"id": 2374
					},
					"defaultValue": " Api.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2638
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2632,
						2635
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2723
					]
				}
			],
			"sources": [
				{
					"fileName": "components/KYC/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2904,
			"name": "Components/Layout",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Layout/index.tsx",
			"children": [
				{
					"id": 2908,
					"name": "Layout",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "basic parent layout component for public and private pages"
					},
					"typeParameter": [
						{
							"id": 2915,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2916,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2961,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2910,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2911,
									"name": "new Layout",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2912,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2905
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Layout",
										"id": 2908
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/index.tsx",
									"line": 21,
									"character": 35
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2909,
							"name": "admin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "components/Layout/index.tsx",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2984,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2980,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2981,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2982,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2982
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2905
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2985,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2986,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2987,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2988,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2983,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2941,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2942,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2947,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2948,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2949,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2950,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2956,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2957,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2958,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2959,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2960,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2926,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2927,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2928,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2929,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2917,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2918,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2934,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2935,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2936,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2937,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2938,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2939,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2940,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2943,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2944,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2945,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2946,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2924,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2925,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2951,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2952,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2953,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2954,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2955,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2975,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2976,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2977,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2978,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2979,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2930,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2931,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2932,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2933,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2913,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2914,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/index.tsx",
									"line": 28,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2962,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2963,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2964,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2965,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2966,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2967,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2968,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2969,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2905
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2970,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2971,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2972,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2973,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2974,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2919,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2920,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2921,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2905
													}
												]
											}
										},
										{
											"id": 2922,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2923,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2910
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2909,
								2984,
								2980,
								2985,
								2983
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2941,
								2947,
								2956,
								2926,
								2917,
								2934,
								2939,
								2943,
								2924,
								2951,
								2975,
								2930,
								2913,
								2962,
								2919
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/index.tsx",
							"line": 20,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2905
								}
							]
						}
					]
				},
				{
					"id": 2905,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2907,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "react component which is filled the layout"
							},
							"sources": [
								{
									"fileName": "components/Layout/index.tsx",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2906,
							"name": "private",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "is this i private layout? default is false"
							},
							"sources": [
								{
									"fileName": "components/Layout/index.tsx",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2907,
								2906
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/index.tsx",
							"line": 10,
							"character": 23
						}
					]
				},
				{
					"id": 2989,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Layout/index.tsx",
							"line": 8,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2908
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2905
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2989
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Layout/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2724,
			"name": "Components/Layout/DashboardPrivateLayout",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Layout/containers/DashboardPrivate/index.tsx",
			"children": [
				{
					"id": 2731,
					"name": "DashboardPrivateLayout",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "private layout to represent pages that needs a loggined user"
					},
					"typeParameter": [
						{
							"id": 2742,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2732,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2733,
									"name": "new DashboardPrivateLayout",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2734,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2725
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DashboardPrivateLayout",
										"id": 2731
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 29,
									"character": 85
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2809,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2805,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2806,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2807,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2807
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2725
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2810,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2811,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2812,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2813,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2808,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2728
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2767,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2768,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2773,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2774,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2775,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2776,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2782,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2783,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2784,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2785,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2728
													}
												]
											}
										},
										{
											"id": 2786,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2752,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2753,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2754,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2755,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2743,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2744,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2760,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2761,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2762,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2763,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2728
													}
												]
											}
										},
										{
											"id": 2764,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2765,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2766,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2769,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2770,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2771,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2772,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2750,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2751,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2777,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2778,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2779,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2780,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2728
													}
												]
											}
										},
										{
											"id": 2781,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2800,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2801,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2802,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2803,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2804,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2756,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2757,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2758,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2759,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2728
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2735,
							"name": "handleScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2736,
									"name": "handleScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2737,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 42,
									"character": 19
								}
							]
						},
						{
							"id": 2738,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2739,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 55,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2787,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2788,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2789,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2790,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2791,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2792,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2793,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2728
																					}
																				]
																			}
																		},
																		{
																			"id": 2794,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2725
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2795,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2796,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2797,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2798,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2799,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2745,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2746,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2747,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2725
													}
												]
											}
										},
										{
											"id": 2748,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2728
													}
												]
											}
										},
										{
											"id": 2749,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2740,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2741,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 73,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2732
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2809,
								2805,
								2810,
								2808
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2767,
								2773,
								2782,
								2752,
								2743,
								2760,
								2765,
								2769,
								2750,
								2777,
								2800,
								2756,
								2735,
								2738,
								2787,
								2745,
								2740
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
							"line": 29,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2725
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2728
								}
							]
						}
					]
				},
				{
					"id": 2725,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2726,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "react element which is filled the layout"
							},
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						},
						{
							"id": 2727,
							"name": "isAdmin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "specify admin status"
							},
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2726,
								2727
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
							"line": 14,
							"character": 16
						}
					]
				},
				{
					"id": 2728,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2729,
							"name": "collapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 22,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2730,
							"name": "menuClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2729,
								2730
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
							"line": 21,
							"character": 16
						}
					]
				},
				{
					"id": 2815,
					"name": "Content",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
							"line": 12,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasicProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 2814,
					"name": "Sider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SiderProps"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2731
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2725,
						2728
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2815,
						2814
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Layout/containers/DashboardPrivate/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2816,
			"name": "Components/Layout/PublicLayout",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Layout/containers/Public/index.tsx",
			"children": [
				{
					"id": 2819,
					"name": "PublicLayout",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "public layout to represent public pages that don't need a loggined user"
					},
					"typeParameter": [
						{
							"id": 2822,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2823,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2824,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2869,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2870,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2871,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"signatures": [
								{
									"id": 2872,
									"name": "new PublicLayout",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 2873,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PublicLayout",
										"id": 2819
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								},
								{
									"id": 2874,
									"name": "new PublicLayout",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2875,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "P"
											}
										},
										{
											"id": 2876,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PublicLayout",
										"id": 2819
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 285,
									"character": 27
								},
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 286,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2899,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2895,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2896,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2897,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2897
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "P"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2900,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2901,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2902,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2903,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2898,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2849,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2850,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2855,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2856,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2857,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2858,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2864,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2865,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2866,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2867,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2868,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2834,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2835,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2836,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2837,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2825,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2826,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2842,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2843,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2844,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2845,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2846,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2847,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2848,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2851,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2852,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2853,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2854,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2832,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2833,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2859,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2860,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2861,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2862,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2863,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2890,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2891,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2892,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2893,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2894,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2838,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2839,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2840,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2841,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2820,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2821,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Layout/containers/Public/index.tsx",
									"line": 15,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2877,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2878,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2879,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2880,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2881,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2882,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2883,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2884,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "P"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2885,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2886,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2887,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2888,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2889,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2827,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2828,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2829,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "P"
													}
												]
											}
										},
										{
											"id": 2830,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2831,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2871
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2899,
								2895,
								2900,
								2898
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2849,
								2855,
								2864,
								2834,
								2825,
								2842,
								2847,
								2851,
								2832,
								2859,
								2890,
								2838,
								2820,
								2877,
								2827
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/containers/Public/index.tsx",
							"line": 14,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component"
						}
					]
				},
				{
					"id": 2817,
					"name": "IProp",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2818,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "react element which is filled the layout"
							},
							"sources": [
								{
									"fileName": "components/Layout/containers/Public/index.tsx",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2818
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Layout/containers/Public/index.tsx",
							"line": 6,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2819
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2817
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Layout/containers/Public/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2990,
			"name": "Components/LiveComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Live/index.tsx",
			"children": [
				{
					"id": 2995,
					"name": "LiveComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "we have live currencies exchnage rate and price in this block"
					},
					"typeParameter": [
						{
							"id": 3007,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3002,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3003,
									"name": "new LiveComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3004,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 2991
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LiveComponent",
										"id": 2995
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Live/index.tsx",
									"line": 36,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3074,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3070,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3071,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3072,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3072
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 2991
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3075,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3076,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3077,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3078,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3073,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 2993
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3032,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3033,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3038,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3039,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3040,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3041,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3047,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3048,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3049,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3050,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2993
													}
												]
											}
										},
										{
											"id": 3051,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3017,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3018,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3019,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3020,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3008,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3009,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3025,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3026,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3027,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3028,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2993
													}
												]
											}
										},
										{
											"id": 3029,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3030,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3031,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3034,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3035,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3036,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3037,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3015,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3016,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3042,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3043,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3044,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3045,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2993
													}
												]
											}
										},
										{
											"id": 3046,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3065,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3066,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3067,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3068,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3069,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3021,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3022,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3023,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3024,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2993
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3005,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3006,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Live/index.tsx",
									"line": 46,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3052,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3053,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3054,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3055,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3056,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3057,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3058,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 2993
																					}
																				]
																			}
																		},
																		{
																			"id": 3059,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 2991
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3060,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3061,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3062,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3063,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3064,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3010,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3011,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3012,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 2991
													}
												]
											}
										},
										{
											"id": 3013,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 2993
													}
												]
											}
										},
										{
											"id": 3014,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2996,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 2997,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2998,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2999,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3000,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3001,
													"name": "cryptos",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/Live/index.tsx",
															"line": 33,
															"character": 28
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													"defaultValue": " _.sortBy(props.cryptos, [\"rank\"])"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3001
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Live/index.tsx",
									"line": 30,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3002
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3074,
								3070,
								3075,
								3073
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3032,
								3038,
								3047,
								3017,
								3008,
								3025,
								3030,
								3034,
								3015,
								3042,
								3065,
								3021,
								3005,
								3052,
								3010,
								2996
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Live/index.tsx",
							"line": 28,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 2991
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 2993
								}
							]
						}
					]
				},
				{
					"id": 2991,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2992,
							"name": "cryptos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "crypto currencies exchange data from redux store"
							},
							"sources": [
								{
									"fileName": "components/Live/index.tsx",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2992
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Live/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 2993,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2994,
							"name": "cryptos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "crypto currencies exchange data"
							},
							"sources": [
								{
									"fileName": "components/Live/index.tsx",
									"line": 22,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2994
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Live/index.tsx",
							"line": 20,
							"character": 16
						}
					]
				},
				{
					"id": 3079,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3080,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3081,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3082,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3083,
											"name": "cryptos",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Live/index.tsx",
													"line": 72,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.cryptos"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3083
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Live/index.tsx",
							"line": 69,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2995
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2991,
						2993
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3079
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Live/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3359,
			"name": "Components/NewInvoice",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/NewInvoice/index.tsx",
			"children": [
				{
					"id": 3366,
					"name": "NewInvoice",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "this component shows all transactions of merchant"
					},
					"typeParameter": [
						{
							"id": 3384,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3369,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3370,
									"name": "new NewInvoice",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3371,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 3360
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NewInvoice",
										"id": 3366
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 33,
									"character": 43
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3367,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 32,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "invoiceApi",
								"id": 3198
							},
							"defaultValue": " API.getInstance()"
						},
						{
							"id": 3451,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3447,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3448,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3449,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3449
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 3360
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3452,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3453,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3454,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3455,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3450,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3363
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3368,
							"name": "userObject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 33,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "USER",
								"id": 1247
							},
							"defaultValue": " USER.getInstance()"
						},
						{
							"id": 3409,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3410,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3415,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3416,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3417,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3418,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3424,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3425,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3426,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3427,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3363
													}
												]
											}
										},
										{
											"id": 3428,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3377,
							"name": "checkPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3378,
									"name": "checkPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3379,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3380,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3381,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 85,
									"character": 21
								}
							]
						},
						{
							"id": 3394,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3395,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3396,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3397,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3385,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3386,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3402,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3403,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3404,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3405,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3363
													}
												]
											}
										},
										{
											"id": 3406,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3407,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3408,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3411,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3412,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3413,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3414,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3392,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3393,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3419,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3420,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3421,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3422,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3363
													}
												]
											}
										},
										{
											"id": 3423,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3442,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3443,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3444,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3445,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3446,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3398,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3399,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3400,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3401,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3363
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3372,
							"name": "handleSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3373,
									"name": "handleSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3374,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 45,
									"character": 23
								}
							]
						},
						{
							"id": 3382,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3383,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 92,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3429,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3430,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3431,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3432,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3433,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3434,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3435,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3363
																					}
																				]
																			}
																		},
																		{
																			"id": 3436,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 3360
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3437,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3438,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3439,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3440,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3441,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3387,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3388,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3389,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3360
													}
												]
											}
										},
										{
											"id": 3390,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3363
													}
												]
											}
										},
										{
											"id": 3391,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3375,
							"name": "uuid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3376,
									"name": "uuid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 84,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3369
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3367,
								3451,
								3447,
								3452,
								3450,
								3368
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3409,
								3415,
								3424,
								3377,
								3394,
								3385,
								3402,
								3407,
								3411,
								3392,
								3419,
								3442,
								3398,
								3372,
								3382,
								3429,
								3387,
								3375
							]
						}
					],
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 30,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 3360
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3363
								}
							]
						}
					]
				},
				{
					"id": 3360,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3362,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/form/Form.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "WrappedFormUtils"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FormComponentProps.form"
							}
						},
						{
							"id": 3361,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3362,
								3361
							]
						}
					],
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 19,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FormComponentProps"
						}
					]
				},
				{
					"id": 3363,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3364,
							"name": "invoiceId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3365,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "components/NewInvoice/index.tsx",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3364,
								3365
							]
						}
					],
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 22,
							"character": 16
						}
					]
				},
				{
					"id": 3456,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 17,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				},
				{
					"id": 3457,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3458,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3459,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3460,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 136,
							"character": 27
						}
					]
				},
				{
					"id": 3461,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3462,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3463,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3464,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3465,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/NewInvoice/index.tsx",
													"line": 143,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3465
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/NewInvoice/index.tsx",
							"line": 141,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3366
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3360,
						3363
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3456
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3457,
						3461
					]
				}
			],
			"sources": [
				{
					"fileName": "components/NewInvoice/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3466,
			"name": "Components/PlaceOrderComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/PlaceOrder/index.tsx",
			"children": [
				{
					"id": 3472,
					"name": "PlaceOrderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "place order component, users can set bids for buy or sell"
					},
					"typeParameter": [
						{
							"id": 3481,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3473,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3474,
									"name": "new PlaceOrderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3475,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IPlaceProps",
												"id": 3467
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PlaceOrderComponent",
										"id": 3472
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 40,
									"character": 72
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3548,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3544,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3545,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3546,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3546
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IPlaceProps",
												"id": 3467
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3549,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3550,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3551,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3552,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3547,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3471
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3506,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3507,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3512,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3513,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3514,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3515,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3521,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3522,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3523,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3524,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3471
													}
												]
											}
										},
										{
											"id": 3525,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3491,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3492,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3493,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3494,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3482,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3483,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3499,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3500,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3501,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3502,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3471
													}
												]
											}
										},
										{
											"id": 3503,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3504,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3505,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3508,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3509,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3510,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3511,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3489,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3490,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3516,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3517,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3518,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3519,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3471
													}
												]
											}
										},
										{
											"id": 3520,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3539,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3540,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3541,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3542,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3543,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3495,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3496,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3497,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3498,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3471
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3476,
							"name": "handleSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3477,
									"name": "handleSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3478,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 46,
									"character": 23
								}
							]
						},
						{
							"id": 3479,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3480,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 50,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3526,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3527,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3528,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3529,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3530,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3531,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3532,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3471
																					}
																				]
																			}
																		},
																		{
																			"id": 3533,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IPlaceProps",
																						"id": 3467
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3534,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3535,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3536,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3537,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3538,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3484,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3485,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3486,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlaceProps",
														"id": 3467
													}
												]
											}
										},
										{
											"id": 3487,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3471
													}
												]
											}
										},
										{
											"id": 3488,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3473
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3548,
								3544,
								3549,
								3547
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3506,
								3512,
								3521,
								3491,
								3482,
								3499,
								3504,
								3508,
								3489,
								3516,
								3539,
								3495,
								3476,
								3479,
								3526,
								3484
							]
						}
					],
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 40,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IPlaceProps",
									"id": 3467
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3471
								}
							]
						}
					]
				},
				{
					"id": 3467,
					"name": "IPlaceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3470,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/form/Form.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "WrappedFormUtils"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FormComponentProps.form"
							}
						},
						{
							"id": 3468,
							"name": "fromSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "origin symbol"
							},
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3469,
							"name": "toSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "target symbol"
							},
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 31,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3470,
								3468,
								3469
							]
						}
					],
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 27,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FormComponentProps"
						}
					]
				},
				{
					"id": 3471,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 34,
							"character": 16
						}
					]
				},
				{
					"id": 3554,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				},
				{
					"id": 3553,
					"name": "TabPane",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 13,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "TabPaneProps"
							}
						]
					},
					"defaultValue": " Tabs.TabPane"
				},
				{
					"id": 3555,
					"name": "formItemLayout",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 3556,
							"name": "labelCol",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 3559,
									"name": "sm",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 3560,
											"name": "span",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/PlaceOrder/index.tsx",
													"line": 19,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "8"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3560
											]
										}
									],
									"sources": [
										{
											"fileName": "components/PlaceOrder/index.tsx",
											"line": 19,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 3557,
									"name": "xs",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 3558,
											"name": "span",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/PlaceOrder/index.tsx",
													"line": 18,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "24"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3558
											]
										}
									],
									"sources": [
										{
											"fileName": "components/PlaceOrder/index.tsx",
											"line": 18,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										3559,
										3557
									]
								}
							],
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 17,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 3561,
							"name": "wrapperCol",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 3564,
									"name": "sm",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 3565,
											"name": "span",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/PlaceOrder/index.tsx",
													"line": 23,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "16"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3565
											]
										}
									],
									"sources": [
										{
											"fileName": "components/PlaceOrder/index.tsx",
											"line": 23,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 3562,
									"name": "xs",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 3563,
											"name": "span",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/PlaceOrder/index.tsx",
													"line": 22,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "24"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3563
											]
										}
									],
									"sources": [
										{
											"fileName": "components/PlaceOrder/index.tsx",
											"line": 22,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										3564,
										3562
									]
								}
							],
							"sources": [
								{
									"fileName": "components/PlaceOrder/index.tsx",
									"line": 21,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3556,
								3561
							]
						}
					],
					"sources": [
						{
							"fileName": "components/PlaceOrder/index.tsx",
							"line": 16,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3472
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3467,
						3471
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3554,
						3553
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						3555
					]
				}
			],
			"sources": [
				{
					"fileName": "components/PlaceOrder/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3566,
			"name": "Components/PrivateRoute",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/PrivateRoute/index.tsx",
			"children": [
				{
					"id": 3567,
					"name": "PrivateRoute",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "private routing component"
					},
					"signatures": [
						{
							"id": 3568,
							"name": "PrivateRoute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "private routing component"
							},
							"parameters": [
								{
									"id": 3569,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3570,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3571,
													"name": "Component",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/PrivateRoute/index.tsx",
															"line": 12,
															"character": 45
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 3572,
													"name": "rest",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "components/PrivateRoute/index.tsx",
															"line": 12,
															"character": 54
														}
													],
													"type": {
														"type": "reference",
														"name": "rest",
														"id": 3572
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3571,
														3572
													]
												}
											],
											"sources": [
												{
													"fileName": "components/PrivateRoute/index.tsx",
													"line": 12,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "components/PrivateRoute/index.tsx",
							"line": 12,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3567
					]
				}
			],
			"sources": [
				{
					"fileName": "components/PrivateRoute/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3573,
			"name": "Components/SessionsComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Sessions/index.tsx",
			"children": [
				{
					"id": 3576,
					"name": "SessionsComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "this component displays user's active sessions"
					},
					"typeParameter": [
						{
							"id": 3582,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3577,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3578,
									"name": "new SessionsComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3579,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 3574
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SessionsComponent",
										"id": 3576
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Sessions/index.tsx",
									"line": 57,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3649,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3645,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3646,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3647,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3647
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 3574
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3650,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3651,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 3652,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3653,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3648,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3575
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3607,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3608,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3613,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3614,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3615,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3616,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3622,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3623,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3624,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3625,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3575
													}
												]
											}
										},
										{
											"id": 3626,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3592,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3593,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3594,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3595,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3583,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3584,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3600,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3601,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3602,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3603,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3575
													}
												]
											}
										},
										{
											"id": 3604,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3605,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3606,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3609,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3610,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3611,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3612,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3590,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3591,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3617,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3618,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3619,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3620,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3575
													}
												]
											}
										},
										{
											"id": 3621,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3640,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3641,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3642,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3643,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 3644,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3596,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3597,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3598,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3599,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3575
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3580,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3581,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Sessions/index.tsx",
									"line": 63,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3627,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3628,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3629,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3630,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3631,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3632,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3633,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3575
																					}
																				]
																			}
																		},
																		{
																			"id": 3634,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 3574
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3635,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3636,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3637,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3638,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 3639,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3585,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3586,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3587,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3574
													}
												]
											}
										},
										{
											"id": 3588,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3575
													}
												]
											}
										},
										{
											"id": 3589,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3577
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3649,
								3645,
								3650,
								3648
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3607,
								3613,
								3622,
								3592,
								3583,
								3600,
								3605,
								3609,
								3590,
								3617,
								3640,
								3596,
								3580,
								3627,
								3585
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Sessions/index.tsx",
							"line": 57,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 3574
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3575
								}
							]
						}
					]
				},
				{
					"id": 3574,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Sessions/index.tsx",
							"line": 10,
							"character": 16
						}
					]
				},
				{
					"id": 3575,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Sessions/index.tsx",
							"line": 13,
							"character": 16
						}
					]
				},
				{
					"id": 3654,
					"name": "columns",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Sessions/index.tsx",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 3655,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 3657,
										"name": "dataIndex",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 18,
												"character": 11
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"ip\""
									},
									{
										"id": 3656,
										"name": "title",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 17,
												"character": 7
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"IP\""
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											3657,
											3656
										]
									}
								]
							}
						}
					},
					"defaultValue": " [{\n  title: \"IP\",\n  dataIndex: \"ip\",\n}, {\n  title: \"Started\",\n  dataIndex: \"started\",\n}, {\n  title: \"Last Access\",\n  dataIndex: \"lastAccess\",\n},\n{\n  title: \"Expires\",\n  dataIndex: \"expires\",\n},\n]"
				},
				{
					"id": 3658,
					"name": "data",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Sessions/index.tsx",
							"line": 32,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 3659,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 3664,
										"name": "expires",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 37,
												"character": 9
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"Aug 2, 2018 1:48:30 PM\""
									},
									{
										"id": 3661,
										"name": "ip",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 34,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"134.156.177.188\""
									},
									{
										"id": 3660,
										"name": "key",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 33,
												"character": 5
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"1\""
									},
									{
										"id": 3663,
										"name": "lastAccess",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 36,
												"character": 12
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"Aug 2, 2018 3:48:24 AM\""
									},
									{
										"id": 3662,
										"name": "started",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "components/Sessions/index.tsx",
												"line": 35,
												"character": 9
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										},
										"defaultValue": "\"Aug 2, 2018 3:48:24 AM\""
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											3664,
											3661,
											3660,
											3663,
											3662
										]
									}
								]
							}
						}
					},
					"defaultValue": " [{\n  key: \"1\",\n  ip: \"134.156.177.188\",\n  started : \"Aug 2, 2018 3:48:24 AM\",\n  lastAccess: \"Aug 2, 2018 3:48:24 AM\",\n  expires: \"Aug 2, 2018 1:48:30 PM\",\n},\n{\n  key: \"2\",\n  ip: \"134.156.177.188\",\n  started : \"Aug 2, 2018 3:48:24 AM\",\n  lastAccess: \"Aug 2, 2018 3:48:24 AM\",\n  expires: \"Aug 2, 2018 1:48:30 PM\",\n},\n{\n  key: \"3\",\n  ip: \"134.156.177.188\",\n  started : \"Aug 2, 2018 3:48:24 AM\",\n  lastAccess: \"Aug 2, 2018 3:48:24 AM\",\n  expires: \"Aug 2, 2018 1:48:30 PM\",\n}]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3576
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3574,
						3575
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3654,
						3658
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Sessions/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3665,
			"name": "Components/Settle",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Settle/index.tsx",
			"children": [
				{
					"id": 3678,
					"name": "Settle",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "shows list of unsettled invoices of a merchant to select and settle"
					},
					"typeParameter": [
						{
							"id": 3703,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3686,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3687,
									"name": "new Settle",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3688,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 3666
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Settle",
										"id": 3678
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 56,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3679,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "holds an instance of invoice api"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 45,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "invoiceApi",
								"id": 3198
							},
							"defaultValue": " API.getInstance()"
						},
						{
							"id": 3768,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3764,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3765,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3766,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3766
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 3666
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3769,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3770,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3771,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3772,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3767,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3673
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3680,
							"name": "userObject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "represent user object for the currently loggined user"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "USER",
								"id": 1247
							},
							"defaultValue": " USER.getInstance()"
						},
						{
							"id": 3726,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3727,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3732,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3733,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3734,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3735,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3741,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3742,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3743,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3744,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3673
													}
												]
											}
										},
										{
											"id": 3745,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3691,
							"name": "checkPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "amount field validator, it compare amount with total amount of seleced row and check their equality"
							},
							"signatures": [
								{
									"id": 3692,
									"name": "checkPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "amount field validator, it compare amount with total amount of seleced row and check their equality"
									},
									"parameters": [
										{
											"id": 3693,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3694,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3695,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 77,
									"character": 21
								}
							]
						},
						{
							"id": 3711,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3712,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3713,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3714,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3689,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3690,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 71,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3719,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3720,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3721,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3722,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3673
													}
												]
											}
										},
										{
											"id": 3723,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3724,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3725,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3728,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3729,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3730,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3731,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3709,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3710,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3736,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3737,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3738,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3739,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3673
													}
												]
											}
										},
										{
											"id": 3740,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3759,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3760,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3761,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3762,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3763,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3701,
							"name": "getInvoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3702,
									"name": "getInvoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get merchant data and invouce"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 255,
									"character": 22
								}
							]
						},
						{
							"id": 3715,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3716,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3717,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3718,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3673
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3698,
							"name": "handleSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "handles form submit routine"
							},
							"signatures": [
								{
									"id": 3699,
									"name": "handleSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handles form submit routine"
									},
									"parameters": [
										{
											"id": 3700,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 213,
									"character": 23
								}
							]
						},
						{
							"id": 3696,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3697,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 88,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3746,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3747,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3748,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3749,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3750,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3751,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3752,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3673
																					}
																				]
																			}
																		},
																		{
																			"id": 3753,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 3666
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3754,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3755,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3756,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3757,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3758,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3704,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3705,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3706,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3666
													}
												]
											}
										},
										{
											"id": 3707,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3673
													}
												]
											}
										},
										{
											"id": 3708,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3681,
							"name": "rowSelection",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "handles row selection. this function set sum and seleced rows to the component state"
							},
							"children": [
								{
									"id": 3682,
									"name": "onChange",
									"kind": 64,
									"kindString": "Function",
									"flags": {},
									"signatures": [
										{
											"id": 3683,
											"name": "onChange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3684,
													"name": "selectedRowKeys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 3685,
													"name": "selectedRows",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/Settle/index.tsx",
											"line": 50,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										3682
									]
								}
							],
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 49,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3686
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3679,
								3768,
								3764,
								3769,
								3767,
								3680
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3726,
								3732,
								3741,
								3691,
								3711,
								3689,
								3719,
								3724,
								3728,
								3709,
								3736,
								3759,
								3701,
								3715,
								3698,
								3696,
								3746,
								3704
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3681
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 43,
							"character": 12
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 3666
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3673
								}
							]
						}
					]
				},
				{
					"id": 3666,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3672,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/form/Form.d.ts",
									"line": 106,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "WrappedFormUtils"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FormComponentProps.form"
							}
						},
						{
							"id": 3668,
							"name": "merchantId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the unique id of the merchnat. this is email address for now"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3669,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "success callback. it can be used to close modal"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3670,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3671,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/Settle/index.tsx",
											"line": 25,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3667,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current user's email address that is synced with redux"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3672,
								3668,
								3669,
								3667
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 19,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FormComponentProps"
						}
					]
				},
				{
					"id": 3673,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3674,
							"name": "invoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "merchant data with list of invoices"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3677,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "loading state,  spinner used this value to spinning"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3675,
							"name": "selectedInvoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds lists of seleced invoices"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 32,
									"character": 20
								}
							],
							"type": {
								"type": "tuple"
							}
						},
						{
							"id": 3676,
							"name": "sum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "total amount of selected invoices"
							},
							"sources": [
								{
									"fileName": "components/Settle/index.tsx",
									"line": 34,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3674,
								3677,
								3675,
								3676
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 28,
							"character": 16
						}
					]
				},
				{
					"id": 3773,
					"name": "FormItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 39,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "FormItem"
					},
					"defaultValue": " Form.Item"
				},
				{
					"id": 3774,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3775,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3776,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3777,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 270,
							"character": 27
						}
					]
				},
				{
					"id": 3778,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3779,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3780,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3781,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3782,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Settle/index.tsx",
													"line": 277,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3782
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Settle/index.tsx",
							"line": 275,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3678
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3666,
						3673
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3773
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3774,
						3778
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Settle/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3783,
			"name": "Components/StockComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Stock/index.tsx",
			"children": [
				{
					"id": 3791,
					"name": "StockComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "display a currency price in fiat"
					},
					"typeParameter": [
						{
							"id": 3808,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3801,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3802,
									"name": "new StockComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3803,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 3784
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "StockComponent",
										"id": 3791
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 61,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3873,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3869,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3870,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3871,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3871
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 3784
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3874,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3875,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3876,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3877,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3872,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3789
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3831,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3832,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3837,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3838,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3839,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3840,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3846,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3847,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3848,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3849,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3789
													}
												]
											}
										},
										{
											"id": 3850,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3816,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3817,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3818,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3819,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3804,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3805,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 70,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3824,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3825,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3826,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3827,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3789
													}
												]
											}
										},
										{
											"id": 3828,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3829,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3830,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3833,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3834,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3835,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3836,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3814,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3815,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3841,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3842,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3843,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3844,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3789
													}
												]
											}
										},
										{
											"id": 3845,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3864,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3865,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3866,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3867,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3868,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3820,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3821,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3822,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3823,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3789
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3806,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3807,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 74,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3851,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3852,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3853,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3854,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3855,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3856,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3857,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3789
																					}
																				]
																			}
																		},
																		{
																			"id": 3858,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 3784
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3859,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3860,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3861,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3862,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3863,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3809,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3810,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3811,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3784
													}
												]
											}
										},
										{
											"id": 3812,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3789
													}
												]
											}
										},
										{
											"id": 3813,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3792,
							"name": "getDerivedStateFromProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3793,
									"name": "getDerivedStateFromProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3794,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3795,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3796,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3797,
													"name": "exchangeRates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "components/Stock/index.tsx",
															"line": 58,
															"character": 34
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 3798,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 3800,
																		"name": "rate",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "components/Stock/index.tsx",
																				"line": 34,
																				"character": 29
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"defaultValue": "0"
																	},
																	{
																		"id": 3799,
																		"name": "symbol",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "components/Stock/index.tsx",
																				"line": 34,
																				"character": 16
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"defaultValue": "\"EUR\""
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			3800,
																			3799
																		]
																	}
																]
															}
														}
													},
													"defaultValue": " calcExchangeRate(props)"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3797
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 55,
									"character": 42
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3801
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3873,
								3869,
								3874,
								3872
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3831,
								3837,
								3846,
								3816,
								3804,
								3824,
								3829,
								3833,
								3814,
								3841,
								3864,
								3820,
								3806,
								3851,
								3809,
								3792
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Stock/index.tsx",
							"line": 53,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 3784
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3789
								}
							]
						}
					]
				},
				{
					"id": 3784,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3786,
							"name": "cryptos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "crypto currencies data from redux"
							},
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 3787,
							"name": "forex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "forex data from redux"
							},
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 3788,
							"name": "hideTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "don't dispay title and icon if sets to true, useful for using in collapsable blocks"
							},
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3785,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "selected symbol"
							},
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3786,
								3787,
								3788,
								3785
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Stock/index.tsx",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 3789,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3790,
							"name": "exchangeRates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds exchange rate data to display"
							},
							"sources": [
								{
									"fileName": "components/Stock/index.tsx",
									"line": 28,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3790
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Stock/index.tsx",
							"line": 26,
							"character": 16
						}
					]
				},
				{
					"id": 3878,
					"name": "calcExchangeRate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3879,
							"name": "calcExchangeRate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "calcucalte exchange rate from store"
							},
							"parameters": [
								{
									"id": 3880,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3881,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3883,
												"name": "rate",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "components/Stock/index.tsx",
														"line": 34,
														"character": 29
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												},
												"defaultValue": "0"
											},
											{
												"id": 3882,
												"name": "symbol",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "components/Stock/index.tsx",
														"line": 34,
														"character": 16
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"EUR\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													3883,
													3882
												]
											}
										]
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Stock/index.tsx",
							"line": 32,
							"character": 25
						}
					]
				},
				{
					"id": 3884,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3885,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3886,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3887,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3888,
											"name": "cryptos",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Stock/index.tsx",
													"line": 96,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.cryptos"
										},
										{
											"id": 3889,
											"name": "forex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Stock/index.tsx",
													"line": 97,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.market.forex"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3888,
												3889
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Stock/index.tsx",
							"line": 93,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3791
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3784,
						3789
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3878,
						3884
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Stock/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3890,
			"name": "Components/Transactions",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Transactions/index.tsx",
			"children": [
				{
					"id": 3906,
					"name": "Transactions",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "this component shows all transactions of merchant or transactions of all merchants for admin"
					},
					"typeParameter": [
						{
							"id": 3930,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3910,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3911,
									"name": "new Transactions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3912,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 3891
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transactions",
										"id": 3906
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 68,
									"character": 31
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3907,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "holds api instance"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 64,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "invoiceApi",
								"id": 3198
							},
							"defaultValue": " API.getInstance()"
						},
						{
							"id": 3995,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3909,
							"name": "lastFetchId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "holds last fetched id for merchant's search field"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 68,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3991,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3992,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3993,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3993
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 3891
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3996,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3997,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3998,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3999,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3994,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 3893
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3908,
							"name": "userObject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "user object wich is represent current user"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 66,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "USER",
								"id": 1247
							},
							"defaultValue": " USER.getInstance()"
						},
						{
							"id": 3953,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3954,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3959,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3960,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3961,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3962,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3968,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3969,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3970,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3971,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3893
													}
												]
											}
										},
										{
											"id": 3972,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3938,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3939,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3940,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3941,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3913,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3914,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 93,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3946,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3947,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3948,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3949,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3893
													}
												]
											}
										},
										{
											"id": 3950,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3951,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3952,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3955,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3956,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3957,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3958,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3936,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3937,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3963,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3964,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3965,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3966,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3893
													}
												]
											}
										},
										{
											"id": 3967,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3986,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3987,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3988,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3989,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3990,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3917,
							"name": "getData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3918,
									"name": "getData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 229,
									"character": 18
								}
							]
						},
						{
							"id": 3942,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3943,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3944,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3945,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3893
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3925,
							"name": "itemRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3926,
									"name": "itemRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "render paginations with local numbers"
									},
									"parameters": [
										{
											"id": 3927,
											"name": "current",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3928,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3929,
											"name": "originalElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 273,
									"character": 21
								}
							]
						},
						{
							"id": 3915,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3916,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 99,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3919,
							"name": "searchMerchants",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3920,
									"name": "searchMerchants",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "search for merchant"
									},
									"parameters": [
										{
											"id": 3921,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 245,
									"character": 26
								}
							]
						},
						{
							"id": 3922,
							"name": "selectMerchant",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 3923,
									"name": "selectMerchant",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set selected merchant in state so we can use it in api"
									},
									"parameters": [
										{
											"id": 3924,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 264,
									"character": 25
								}
							]
						},
						{
							"id": 3973,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3974,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3975,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3976,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3977,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3978,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3979,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 3893
																					}
																				]
																			}
																		},
																		{
																			"id": 3980,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 3891
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3981,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3982,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3983,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3984,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3985,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3931,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3932,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3933,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 3891
													}
												]
											}
										},
										{
											"id": 3934,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 3893
													}
												]
											}
										},
										{
											"id": 3935,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3910
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3907,
								3995,
								3909,
								3991,
								3996,
								3994,
								3908
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3953,
								3959,
								3968,
								3938,
								3913,
								3946,
								3951,
								3955,
								3936,
								3963,
								3986,
								3917,
								3942,
								3925,
								3915,
								3919,
								3922,
								3973,
								3931
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 61,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 3891
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 3893
								}
							]
						}
					]
				},
				{
					"id": 3891,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3892,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current user's email address that is synced with redux"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3892
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 23,
							"character": 16
						}
					]
				},
				{
					"id": 3893,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3895,
							"name": "currentPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current page"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 32,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3894,
							"name": "invoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "list of all invoices"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3896,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "loading state"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3899,
							"name": "merchantFilter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "merchant filter that must be applied in api"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 40,
									"character": 18
								}
							],
							"type": {
								"type": "tuple"
							}
						},
						{
							"id": 3897,
							"name": "merchantsLoading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "search input's loadint state"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 36,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3898,
							"name": "merchantsResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "result of merchant searchs"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 38,
									"character": 19
								}
							],
							"type": {
								"type": "tuple"
							}
						},
						{
							"id": 3900,
							"name": "statusFilters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "invoice status filters"
							},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 42,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3901,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3905,
											"name": "failed",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "components/Transactions/index.tsx",
													"line": 46,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3902,
											"name": "settled",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "components/Transactions/index.tsx",
													"line": 43,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3903,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "components/Transactions/index.tsx",
													"line": 44,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3904,
											"name": "waiting",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "components/Transactions/index.tsx",
													"line": 45,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3905,
												3902,
												3903,
												3904
											]
										}
									],
									"sources": [
										{
											"fileName": "components/Transactions/index.tsx",
											"line": 42,
											"character": 18
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3895,
								3894,
								3896,
								3899,
								3897,
								3898,
								3900
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 28,
							"character": 16
						}
					]
				},
				{
					"id": 4000,
					"name": "Option",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassicComponentClass",
						"typeArguments": [
							{
								"type": "reference",
								"name": "OptionProps"
							}
						]
					},
					"defaultValue": " Select.Option"
				},
				{
					"id": 4001,
					"name": "fiats",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": " [t.t(\"IRR\"), t.t(\"USD\"), t.t(\"EUR\"), t.t(\"Bitcoin\"), t.t(\"Ethereum\"), t.t(\"failed\"), t.t(\"waiting\"), t.t(\"success\"), t.t(\"settled\")]"
				},
				{
					"id": 4007,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4008,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4009,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4010,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 281,
							"character": 27
						}
					]
				},
				{
					"id": 4011,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4012,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4013,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4014,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4015,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Transactions/index.tsx",
													"line": 288,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												4015
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 286,
							"character": 24
						}
					]
				},
				{
					"id": 4002,
					"name": "icons",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "holds icons and colors for all invoice statuses"
					},
					"children": [
						{
							"id": 4003,
							"name": "failed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 52,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"defaultValue": " <FontAwesomeIcon className=\"archived\" icon={[\"fas\", \"times\"]} />"
						},
						{
							"id": 4006,
							"name": "settled",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"defaultValue": " <FontAwesomeIcon className=\"settled\" icon={[\"fas\", \"check-double\"]} />"
						},
						{
							"id": 4005,
							"name": "success",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 54,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"defaultValue": " <FontAwesomeIcon className=\"success\" icon={[\"fas\", \"check\"]} />"
						},
						{
							"id": 4004,
							"name": "waiting",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "components/Transactions/index.tsx",
									"line": 53,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"defaultValue": " <FontAwesomeIcon className=\"waiting\" icon={[\"fas\", \"hourglass-half\"]} />"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								4003,
								4006,
								4005,
								4004
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Transactions/index.tsx",
							"line": 51,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3906
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3891,
						3893
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4000,
						4001
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4007,
						4011
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						4002
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Transactions/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1504,
			"name": "Components/TranslateComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Translate/index.tsx",
			"children": [
				{
					"id": 1507,
					"name": "TranslateComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "translation select tool, it will dispatch global \"changeLanguage\" event with language code"
					},
					"typeParameter": [
						{
							"id": 1513,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1508,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1509,
									"name": "new TranslateComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1510,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 1505
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TranslateComponent",
										"id": 1507
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Translate/index.tsx",
									"line": 19,
									"character": 66
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1580,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1576,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1577,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1578,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1578
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 1505
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1581,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1582,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 1583,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1584,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1579,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 1506
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1538,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1539,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1544,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1545,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1546,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1547,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1553,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1554,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1555,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1556,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1506
													}
												]
											}
										},
										{
											"id": 1557,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1523,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1524,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1525,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1526,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1514,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1515,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1531,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1532,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1533,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1534,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1506
													}
												]
											}
										},
										{
											"id": 1535,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1536,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1537,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1540,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1541,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1542,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1543,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1521,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1522,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1548,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1549,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1550,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1551,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1506
													}
												]
											}
										},
										{
											"id": 1552,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1571,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1572,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1573,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1574,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1575,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1527,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1528,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1529,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1530,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1506
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1511,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1512,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Translate/index.tsx",
									"line": 25,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1558,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1559,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1560,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1561,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1562,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1563,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1564,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 1506
																					}
																				]
																			}
																		},
																		{
																			"id": 1565,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 1505
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1566,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1567,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1568,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1569,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1570,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1516,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1517,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1518,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 1505
													}
												]
											}
										},
										{
											"id": 1519,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 1506
													}
												]
											}
										},
										{
											"id": 1520,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1508
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1580,
								1576,
								1581,
								1579
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1538,
								1544,
								1553,
								1523,
								1514,
								1531,
								1536,
								1540,
								1521,
								1548,
								1571,
								1527,
								1511,
								1558,
								1516
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Translate/index.tsx",
							"line": 19,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 1505
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 1506
								}
							]
						}
					]
				},
				{
					"id": 1505,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Translate/index.tsx",
							"line": 10,
							"character": 16
						}
					]
				},
				{
					"id": 1506,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/Translate/index.tsx",
							"line": 13,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1507
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1505,
						1506
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Translate/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4016,
			"name": "Components/Unsettled",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Unsettled/index.tsx",
			"children": [
				{
					"id": 4025,
					"name": "Unsettled",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "this component shows all merchants that have Unsettled invoices and shows a modal to settle using settle component"
					},
					"typeParameter": [
						{
							"id": 4042,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4028,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4029,
									"name": "new Unsettled",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4030,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4017
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Unsettled",
										"id": 4025
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 41,
									"character": 43
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4026,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "holds an api instance"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 39,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "invoiceApi",
								"id": 3198
							},
							"defaultValue": " API.getInstance()"
						},
						{
							"id": 4107,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4103,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4104,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4105,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4105
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4017
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4108,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4109,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 4110,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4111,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4106,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4019
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4027,
							"name": "userObject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "represent user object from currently logged in user"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 41,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "USER",
								"id": 1247
							},
							"defaultValue": " USER.getInstance()"
						},
						{
							"id": 4065,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4066,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4071,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4072,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4073,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4074,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4080,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4081,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4082,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4083,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4019
													}
												]
											}
										},
										{
											"id": 4084,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4050,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4051,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4052,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4053,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4031,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4032,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 54,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4058,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4059,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4060,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4061,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4019
													}
												]
											}
										},
										{
											"id": 4062,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4063,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4064,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4067,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4068,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4069,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4070,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4048,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4049,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4075,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4076,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4077,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4078,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4019
													}
												]
											}
										},
										{
											"id": 4079,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4098,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4099,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4100,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4101,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4102,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4054,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4055,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4056,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4057,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4019
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4035,
							"name": "getUnsettledMerchants",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4036,
									"name": "getUnsettledMerchants",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 116,
									"character": 32
								}
							]
						},
						{
							"id": 4037,
							"name": "itemRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4038,
									"name": "itemRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "render paginations with local numbers"
									},
									"parameters": [
										{
											"id": 4039,
											"name": "current",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4040,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4041,
											"name": "originalElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 130,
									"character": 21
								}
							]
						},
						{
							"id": 4033,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4034,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 59,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4085,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4086,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4087,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4088,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4089,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4090,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4091,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4019
																					}
																				]
																			}
																		},
																		{
																			"id": 4092,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4017
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4093,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4094,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4095,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4096,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4097,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4043,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4044,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4045,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4017
													}
												]
											}
										},
										{
											"id": 4046,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4019
													}
												]
											}
										},
										{
											"id": 4047,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4028
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4026,
								4107,
								4103,
								4108,
								4106,
								4027
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4065,
								4071,
								4080,
								4050,
								4031,
								4058,
								4063,
								4067,
								4048,
								4075,
								4098,
								4054,
								4035,
								4037,
								4033,
								4085,
								4043
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Unsettled/index.tsx",
							"line": 37,
							"character": 15
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4017
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4019
								}
							]
						}
					]
				},
				{
					"id": 4017,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4018,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current user's email address that is synced with redux"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4018
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Unsettled/index.tsx",
							"line": 16,
							"character": 16
						}
					]
				},
				{
					"id": 4019,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4021,
							"name": "currentPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "current page"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 25,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4022,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "loadin state"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4020,
							"name": "merchants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "list of all invoices"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4024,
							"name": "selectedMerchant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "holds selected mercant for modal and settle component"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 31,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4023,
							"name": "showModal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "modal status"
							},
							"sources": [
								{
									"fileName": "components/Unsettled/index.tsx",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4021,
								4022,
								4020,
								4024,
								4023
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Unsettled/index.tsx",
							"line": 21,
							"character": 16
						}
					]
				},
				{
					"id": 4112,
					"name": "mapDispatchToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4113,
							"name": "mapDispatchToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4114,
									"name": "dispatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4115,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Unsettled/index.tsx",
							"line": 138,
							"character": 27
						}
					]
				},
				{
					"id": 4116,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4117,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4118,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4119,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4120,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Unsettled/index.tsx",
													"line": 145,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												4120
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Unsettled/index.tsx",
							"line": 143,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4025
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4017,
						4019
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4112,
						4116
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Unsettled/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4121,
			"name": "Components/UploaderComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/Uploader/index.tsx",
			"children": [
				{
					"id": 4139,
					"name": "UploaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "image upload component with example and preview support"
					},
					"typeParameter": [
						{
							"id": 4153,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4140,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4141,
									"name": "new UploaderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4142,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4122
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UploaderComponent",
										"id": 4139
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 60,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4220,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4216,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4217,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4218,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4218
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4122
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4221,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4222,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": {
										"id": 4223,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4224,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4219,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4134
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4178,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4179,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4184,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4185,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4186,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4187,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4193,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4194,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4195,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4196,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4134
													}
												]
											}
										},
										{
											"id": 4197,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4163,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4164,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4165,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4166,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4154,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4155,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4171,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4172,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4173,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4174,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4134
													}
												]
											}
										},
										{
											"id": 4175,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4176,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4177,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4180,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4181,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4182,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4183,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4161,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4162,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4188,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4189,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4190,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4191,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4134
													}
												]
											}
										},
										{
											"id": 4192,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4211,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4212,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4213,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4214,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4215,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4167,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4168,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4169,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4170,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4134
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4146,
							"name": "handleCancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4147,
									"name": "handleCancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 79,
									"character": 23
								}
							]
						},
						{
							"id": 4148,
							"name": "handleChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4149,
									"name": "handleChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4150,
											"name": "fileList",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 80,
									"character": 23
								}
							]
						},
						{
							"id": 4143,
							"name": "handlePreview",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4144,
									"name": "handlePreview",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4145,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 73,
									"character": 24
								}
							]
						},
						{
							"id": 4151,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4152,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 90,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4198,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4199,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4200,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4201,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4202,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4203,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4204,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4134
																					}
																				]
																			}
																		},
																		{
																			"id": 4205,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4122
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4206,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4207,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4208,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4209,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 4210,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4156,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4157,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4158,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4122
													}
												]
											}
										},
										{
											"id": 4159,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4134
													}
												]
											}
										},
										{
											"id": 4160,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4140
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4220,
								4216,
								4221,
								4219
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4178,
								4184,
								4193,
								4163,
								4154,
								4171,
								4176,
								4180,
								4161,
								4188,
								4211,
								4167,
								4146,
								4148,
								4143,
								4151,
								4198,
								4156
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 60,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4122
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4134
								}
							]
						}
					]
				},
				{
					"id": 4122,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4124,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "action url , endpoint for sending data"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4129,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "callback function wich is call when upload is done"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4130,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4131,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4132,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 4133,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "components/Uploader/index.tsx",
											"line": 23,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 4126,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "data object containing image type"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4127,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4128,
											"name": "imgtype",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/Uploader/index.tsx",
													"line": 21,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												4128
											]
										}
									],
									"sources": [
										{
											"fileName": "components/Uploader/index.tsx",
											"line": 21,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 4123,
							"name": "example",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "example image"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4125,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "name of the image"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4124,
								4129,
								4126,
								4123,
								4125
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 13,
							"character": 16
						}
					]
				},
				{
					"id": 4134,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4135,
							"name": "fileList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "list of uploaded files"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 28,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4138,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "extra headers"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "__type"
							}
						},
						{
							"id": 4136,
							"name": "previewImage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "preview  of uploaded file"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 30,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4137,
							"name": "previewVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "visibility of the preview"
							},
							"sources": [
								{
									"fileName": "components/Uploader/index.tsx",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4135,
								4138,
								4136,
								4137
							]
						}
					],
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 26,
							"character": 16
						}
					]
				},
				{
					"id": 4225,
					"name": "user",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 4230,
					"name": "beforeUpload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4231,
							"name": "beforeUpload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "validate image size before upload"
							},
							"parameters": [
								{
									"id": 4232,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 45,
							"character": 21
						}
					]
				},
				{
					"id": 4226,
					"name": "getBase64",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4227,
							"name": "getBase64",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "return base64 data of a selected image"
							},
							"parameters": [
								{
									"id": 4228,
									"name": "img",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4229,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "components/Uploader/index.tsx",
							"line": 38,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4139
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4122,
						4134
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4225
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4230,
						4226
					]
				}
			],
			"sources": [
				{
					"fileName": "components/Uploader/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4233,
			"name": "Components/UserStatusGuideComponent",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/UserStatusGuide/index.tsx",
			"children": [
				{
					"id": 4237,
					"name": "UserStatusGuideComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "a nice guideline for user to help him compelete kyc and registration verification"
					},
					"typeParameter": [
						{
							"id": 4246,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 4238,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4239,
									"name": "new UserStatusGuideComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4240,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProps",
												"id": 4234
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UserStatusGuideComponent",
										"id": 4237
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/UserStatusGuide/index.tsx",
									"line": 30,
									"character": 72
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 4313,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 315,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 4309,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 309,
									"character": 22
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4310,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4311,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 309,
																	"character": 43
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4311
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 309,
															"character": 33
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProps",
												"id": 4234
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 4314,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 320,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4315,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 4316,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 4317,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
											"line": 320,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 4312,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 310,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IState",
										"id": 4236
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 4271,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4272,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 475,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 4277,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4278,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4279,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4280,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 4286,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4287,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4288,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4289,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4236
													}
												]
											}
										},
										{
											"id": 4290,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 535,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 4243,
							"name": "action",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"signatures": [
								{
									"id": 4244,
									"name": "action",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4245,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/UserStatusGuide/index.tsx",
									"line": 55,
									"character": 18
								}
							]
						},
						{
							"id": 4256,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4257,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 4258,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 4259,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 414,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 4247,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4248,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 4264,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4265,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 4266,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4267,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4236
													}
												]
											}
										},
										{
											"id": 4268,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 4269,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4270,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 461,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 4273,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4274,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4275,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4276,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 4254,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4255,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 409,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 4281,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4282,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 4283,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4284,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4236
													}
												]
											}
										},
										{
											"id": 4285,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 520,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 4304,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4305,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4306,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4307,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4308,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 301,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 4260,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4261,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 4262,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4263,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4236
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 440,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 4241,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 4242,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "components/UserStatusGuide/index.tsx",
									"line": 36,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 4291,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 4292,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4293,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "IState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 4294,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4295,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4296,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4297,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IState",
																						"id": 4236
																					}
																				]
																			}
																		},
																		{
																			"id": 4298,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "IProps",
																						"id": 4234
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 4299,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
																	"line": 297,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4300,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 4301,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4302,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4303,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
															"line": 298,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 296,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 4249,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 4250,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 4251,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IProps",
														"id": 4234
													}
												]
											}
										},
										{
											"id": 4252,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 4236
													}
												]
											}
										},
										{
											"id": 4253,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/mahdy/Projects/b2b/node_modules/@types/react/index.d.ts",
									"line": 404,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4238
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4313,
								4309,
								4314,
								4312
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4271,
								4277,
								4286,
								4243,
								4256,
								4247,
								4264,
								4269,
								4273,
								4254,
								4281,
								4304,
								4260,
								4241,
								4291,
								4249
							]
						}
					],
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 30,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "IProps",
									"id": 4234
								},
								{
									"type": "reference",
									"name": "IState",
									"id": 4236
								}
							]
						}
					]
				},
				{
					"id": 4234,
					"name": "IProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4235,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "user object from redux store"
							},
							"sources": [
								{
									"fileName": "components/UserStatusGuide/index.tsx",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4235
							]
						}
					],
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 4236,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 24,
							"character": 16
						}
					]
				},
				{
					"id": 4319,
					"name": "Step",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 17,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " Steps.Step"
				},
				{
					"id": 4318,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 16,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 4320,
					"name": "mapStateToProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4321,
							"name": "mapStateToProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4322,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRootState",
										"id": 857
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4323,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4324,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "components/UserStatusGuide/index.tsx",
													"line": 69,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " state.app.user"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												4324
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/UserStatusGuide/index.tsx",
							"line": 67,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4237
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4234,
						4236
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4319,
						4318
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4320
					]
				}
			],
			"sources": [
				{
					"fileName": "components/UserStatusGuide/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 200,
			"name": "Config",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/config.tsx",
			"children": [
				{
					"id": 201,
					"name": "config",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "configuration object"
					},
					"children": [
						{
							"id": 203,
							"name": "NewApiUrl",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://api.becopay.com\""
						},
						{
							"id": 202,
							"name": "apiUrl",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"http://87.98.188.77:9092/\""
						},
						{
							"id": 204,
							"name": "gateWayUrl",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://gateway.becopay.com\""
						},
						{
							"id": 205,
							"name": "language",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 206,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 211,
											"name": "antLocale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 23,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 212,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 224,
															"name": "Calendar",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 13,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 225,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 226,
																			"name": "lang",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 14,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 227,
																			"name": "timePickerLocale",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 15,
																					"character": 24
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 228,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {
																						"isExported": true
																					},
																					"children": [
																						{
																							"id": 229,
																							"name": "placeholder",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isExported": true
																							},
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																									"line": 16,
																									"character": 23
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								229
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 15,
																							"character": 25
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				226,
																				227
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 13,
																			"character": 13
																		}
																	]
																}
															}
														},
														{
															"id": 215,
															"name": "DatePicker",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 4,
																	"character": 14
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 216,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 217,
																			"name": "lang",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 5,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 218,
																			"name": "timePickerLocale",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 6,
																					"character": 24
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 219,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {
																						"isExported": true
																					},
																					"children": [
																						{
																							"id": 220,
																							"name": "placeholder",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isExported": true
																							},
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																									"line": 7,
																									"character": 23
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								220
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 6,
																							"character": 25
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				217,
																				218
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 4,
																			"character": 15
																		}
																	]
																}
															}
														},
														{
															"id": 238,
															"name": "Modal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 27,
																	"character": 9
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 239,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 241,
																			"name": "cancelText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 29,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 242,
																			"name": "justOkText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 30,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 240,
																			"name": "okText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 28,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				241,
																				242,
																				240
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 27,
																			"character": 10
																		}
																	]
																}
															}
														},
														{
															"id": 214,
															"name": "Pagination",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 3,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 243,
															"name": "Popconfirm",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 32,
																	"character": 14
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 244,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 246,
																			"name": "cancelText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 34,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 245,
																			"name": "okText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 33,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				246,
																				245
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 32,
																			"character": 15
																		}
																	]
																}
															}
														},
														{
															"id": 253,
															"name": "Select",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 42,
																	"character": 10
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 254,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 255,
																			"name": "notFoundContent",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 43,
																					"character": 23
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				255
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 42,
																			"character": 11
																		}
																	]
																}
															}
														},
														{
															"id": 230,
															"name": "Table",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 19,
																	"character": 9
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 231,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 235,
																			"name": "emptyText",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 23,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 233,
																			"name": "filterConfirm",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 21,
																					"character": 21
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 234,
																			"name": "filterReset",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 22,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 232,
																			"name": "filterTitle",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 20,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 236,
																			"name": "selectAll",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 24,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 237,
																			"name": "selectInvert",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 25,
																					"character": 20
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				235,
																				233,
																				234,
																				232,
																				236,
																				237
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 19,
																			"character": 10
																		}
																	]
																}
															}
														},
														{
															"id": 221,
															"name": "TimePicker",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 10,
																	"character": 14
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 222,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 223,
																			"name": "placeholder",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 11,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				223
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 10,
																			"character": 15
																		}
																	]
																}
															}
														},
														{
															"id": 247,
															"name": "Transfer",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 36,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 248,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 251,
																			"name": "itemUnit",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 39,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 252,
																			"name": "itemsUnit",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 40,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 249,
																			"name": "notFoundContent",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 37,
																					"character": 23
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 250,
																			"name": "searchPlaceholder",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 38,
																					"character": 25
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				251,
																				252,
																				249,
																				250
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 36,
																			"character": 13
																		}
																	]
																}
															}
														},
														{
															"id": 256,
															"name": "Upload",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 45,
																	"character": 10
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 257,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 261,
																			"name": "previewFile",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 49,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 259,
																			"name": "removeFile",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 47,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 260,
																			"name": "uploadError",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 48,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 258,
																			"name": "uploading",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 46,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				261,
																				259,
																				260,
																				258
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 45,
																			"character": 11
																		}
																	]
																}
															}
														},
														{
															"id": 213,
															"name": "locale",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 2,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																224,
																215,
																238,
																214,
																243,
																253,
																230,
																221,
																247,
																256,
																213
															]
														}
													]
												}
											},
											"defaultValue": " fa"
										},
										{
											"id": 207,
											"name": "codeName",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 19,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"fa\""
										},
										{
											"id": 208,
											"name": "dir",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 20,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"rtl\""
										},
										{
											"id": 210,
											"name": "locale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 22,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"fa-IR\""
										},
										{
											"id": 209,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 21,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"فارسی\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												211,
												207,
												208,
												210,
												209
											]
										}
									]
								}
							},
							"defaultValue": " Languages.fa"
						},
						{
							"id": 262,
							"name": "languages",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 16,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 263,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 264,
											"name": "en",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 269,
													"name": "antLocale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 16,
															"character": 17
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 270,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 282,
																	"name": "Calendar",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 13,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 283,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 284,
																					"name": "lang",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 14,
																							"character": 12
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 285,
																					"name": "timePickerLocale",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 15,
																							"character": 24
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 286,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {
																								"isExported": true
																							},
																							"children": [
																								{
																									"id": 287,
																									"name": "placeholder",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {
																										"isExported": true
																									},
																									"sources": [
																										{
																											"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																											"line": 16,
																											"character": 23
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										287
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																									"line": 15,
																									"character": 25
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						284,
																						285
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 13,
																					"character": 13
																				}
																			]
																		}
																	}
																},
																{
																	"id": 273,
																	"name": "DatePicker",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 4,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 274,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 275,
																					"name": "lang",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 5,
																							"character": 12
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 276,
																					"name": "timePickerLocale",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 6,
																							"character": 24
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 277,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {
																								"isExported": true
																							},
																							"children": [
																								{
																									"id": 278,
																									"name": "placeholder",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {
																										"isExported": true
																									},
																									"sources": [
																										{
																											"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																											"line": 7,
																											"character": 23
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										278
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																									"line": 6,
																									"character": 25
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						275,
																						276
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 4,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 296,
																	"name": "Modal",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 27,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 297,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 299,
																					"name": "cancelText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 29,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 300,
																					"name": "justOkText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 30,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 298,
																					"name": "okText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 28,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						299,
																						300,
																						298
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 27,
																					"character": 10
																				}
																			]
																		}
																	}
																},
																{
																	"id": 272,
																	"name": "Pagination",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 3,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 301,
																	"name": "Popconfirm",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 32,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 302,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 304,
																					"name": "cancelText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 34,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 303,
																					"name": "okText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 33,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						304,
																						303
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 32,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 312,
																	"name": "Select",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 43,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 313,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 314,
																					"name": "notFoundContent",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 44,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						314
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 43,
																					"character": 11
																				}
																			]
																		}
																	}
																},
																{
																	"id": 288,
																	"name": "Table",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 19,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 289,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 293,
																					"name": "emptyText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 23,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 291,
																					"name": "filterConfirm",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 21,
																							"character": 21
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 292,
																					"name": "filterReset",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 22,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 290,
																					"name": "filterTitle",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 20,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 294,
																					"name": "selectAll",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 24,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 295,
																					"name": "selectInvert",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 25,
																							"character": 20
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						293,
																						291,
																						292,
																						290,
																						294,
																						295
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 19,
																					"character": 10
																				}
																			]
																		}
																	}
																},
																{
																	"id": 279,
																	"name": "TimePicker",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 10,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 280,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 281,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 11,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						281
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 10,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 305,
																	"name": "Transfer",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 36,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 306,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 310,
																					"name": "itemUnit",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 40,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 311,
																					"name": "itemsUnit",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 41,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 308,
																					"name": "notFoundContent",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 38,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 309,
																					"name": "searchPlaceholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 39,
																							"character": 25
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 307,
																					"name": "titles",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 37,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						310,
																						311,
																						308,
																						309,
																						307
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 36,
																					"character": 13
																				}
																			]
																		}
																	}
																},
																{
																	"id": 315,
																	"name": "Upload",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 46,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 316,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 320,
																					"name": "previewFile",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 50,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 318,
																					"name": "removeFile",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 48,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 319,
																					"name": "uploadError",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 49,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 317,
																					"name": "uploading",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 47,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						320,
																						318,
																						319,
																						317
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 46,
																					"character": 11
																				}
																			]
																		}
																	}
																},
																{
																	"id": 271,
																	"name": "locale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 2,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		282,
																		273,
																		296,
																		272,
																		301,
																		312,
																		288,
																		279,
																		305,
																		315,
																		271
																	]
																}
															]
														}
													},
													"defaultValue": " en"
												},
												{
													"id": 265,
													"name": "codeName",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 12,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"en\""
												},
												{
													"id": 266,
													"name": "dir",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 13,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"ltr\""
												},
												{
													"id": 268,
													"name": "locale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 15,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"en-US\""
												},
												{
													"id": 267,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 14,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"English\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														269,
														265,
														266,
														268,
														267
													]
												}
											],
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 11,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 321,
											"name": "fa",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 326,
													"name": "antLocale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 23,
															"character": 17
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 327,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 339,
																	"name": "Calendar",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 13,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 340,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 341,
																					"name": "lang",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 14,
																							"character": 12
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 342,
																					"name": "timePickerLocale",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 15,
																							"character": 24
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 343,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {
																								"isExported": true
																							},
																							"children": [
																								{
																									"id": 344,
																									"name": "placeholder",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {
																										"isExported": true
																									},
																									"sources": [
																										{
																											"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																											"line": 16,
																											"character": 23
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										344
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																									"line": 15,
																									"character": 25
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						341,
																						342
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 13,
																					"character": 13
																				}
																			]
																		}
																	}
																},
																{
																	"id": 330,
																	"name": "DatePicker",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 4,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 331,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 332,
																					"name": "lang",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 5,
																							"character": 12
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 333,
																					"name": "timePickerLocale",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 6,
																							"character": 24
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 334,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {
																								"isExported": true
																							},
																							"children": [
																								{
																									"id": 335,
																									"name": "placeholder",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {
																										"isExported": true
																									},
																									"sources": [
																										{
																											"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																											"line": 7,
																											"character": 23
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										335
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																									"line": 6,
																									"character": 25
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						332,
																						333
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 4,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 353,
																	"name": "Modal",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 27,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 354,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 356,
																					"name": "cancelText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 29,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 357,
																					"name": "justOkText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 30,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 355,
																					"name": "okText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 28,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						356,
																						357,
																						355
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 27,
																					"character": 10
																				}
																			]
																		}
																	}
																},
																{
																	"id": 329,
																	"name": "Pagination",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 3,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 358,
																	"name": "Popconfirm",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 32,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 359,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 361,
																					"name": "cancelText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 34,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 360,
																					"name": "okText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 33,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						361,
																						360
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 32,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 368,
																	"name": "Select",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 42,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 369,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 370,
																					"name": "notFoundContent",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 43,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						370
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 42,
																					"character": 11
																				}
																			]
																		}
																	}
																},
																{
																	"id": 345,
																	"name": "Table",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 19,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 346,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 350,
																					"name": "emptyText",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 23,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 348,
																					"name": "filterConfirm",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 21,
																							"character": 21
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 349,
																					"name": "filterReset",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 22,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 347,
																					"name": "filterTitle",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 20,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 351,
																					"name": "selectAll",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 24,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 352,
																					"name": "selectInvert",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 25,
																							"character": 20
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						350,
																						348,
																						349,
																						347,
																						351,
																						352
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 19,
																					"character": 10
																				}
																			]
																		}
																	}
																},
																{
																	"id": 336,
																	"name": "TimePicker",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 10,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 337,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 338,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 11,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						338
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 10,
																					"character": 15
																				}
																			]
																		}
																	}
																},
																{
																	"id": 362,
																	"name": "Transfer",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 36,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 363,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 366,
																					"name": "itemUnit",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 39,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 367,
																					"name": "itemsUnit",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 40,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 364,
																					"name": "notFoundContent",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 37,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 365,
																					"name": "searchPlaceholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 38,
																							"character": 25
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						366,
																						367,
																						364,
																						365
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 36,
																					"character": 13
																				}
																			]
																		}
																	}
																},
																{
																	"id": 371,
																	"name": "Upload",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 45,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 372,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 376,
																					"name": "previewFile",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 49,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 374,
																					"name": "removeFile",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 47,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 375,
																					"name": "uploadError",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 48,
																							"character": 19
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 373,
																					"name": "uploading",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 46,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						376,
																						374,
																						375,
																						373
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 45,
																					"character": 11
																				}
																			]
																		}
																	}
																},
																{
																	"id": 328,
																	"name": "locale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 2,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		339,
																		330,
																		353,
																		329,
																		358,
																		368,
																		345,
																		336,
																		362,
																		371,
																		328
																	]
																}
															]
														}
													},
													"defaultValue": " fa"
												},
												{
													"id": 322,
													"name": "codeName",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 19,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"fa\""
												},
												{
													"id": 323,
													"name": "dir",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 20,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"rtl\""
												},
												{
													"id": 325,
													"name": "locale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 22,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"fa-IR\""
												},
												{
													"id": 324,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "services/trans/languages.tsx",
															"line": 21,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"فارسی\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														326,
														322,
														323,
														325,
														324
													]
												}
											],
											"sources": [
												{
													"fileName": "services/trans/languages.tsx",
													"line": 18,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												264,
												321
											]
										}
									]
								}
							},
							"defaultValue": " Languages"
						},
						{
							"id": 382,
							"name": "currencies",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 383,
									"name": "BTC",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 386,
											"name": "confirmationNumber",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 27,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "5"
										},
										{
											"id": 385,
											"name": "depositeWallet",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 26,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"btcbeygizasdfrwgsdfgsdfgsdfdfsgsfdgdfg\""
										},
										{
											"id": 384,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 25,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Bitcoin\""
										},
										{
											"id": 387,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 28,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"crypto\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												386,
												385,
												384,
												387
											]
										}
									],
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 24,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 388,
									"name": "ETH",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 391,
											"name": "confirmationNumber",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 33,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "20"
										},
										{
											"id": 390,
											"name": "depositeWallet",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 32,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"etherasdfrwgsdfgsdfgsdfgdfsgsfdgdfg\""
										},
										{
											"id": 389,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 31,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Ethereum\""
										},
										{
											"id": 392,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 34,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"crypto\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												391,
												390,
												389,
												392
											]
										}
									],
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 30,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 398,
									"name": "IRR",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 399,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 43,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"IR Rial\""
										},
										{
											"id": 400,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 44,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"fiat\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												399,
												400
											]
										}
									],
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 42,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 393,
									"name": "LTC",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 396,
											"name": "confirmationNumber",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 39,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "16"
										},
										{
											"id": 395,
											"name": "depositeWallet",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 38,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"litecoin1weasrtasdf4rtsadfsdfsd4s54sddfdf\""
										},
										{
											"id": 394,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 37,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Litecoin\""
										},
										{
											"id": 397,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 40,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"crypto\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												396,
												395,
												394,
												397
											]
										}
									],
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 36,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 401,
									"name": "USD",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 402,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 47,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"US dollar\""
										},
										{
											"id": 403,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "config.tsx",
													"line": 48,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"fiat\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												402,
												403
											]
										}
									],
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 46,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										383,
										388,
										398,
										393,
										401
									]
								}
							],
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 404,
							"name": "icons",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 405,
									"name": "BTC",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 53,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"defaultValue": " <i className=\"cc BTC-alt\"></i>"
								},
								{
									"id": 408,
									"name": "ETH",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 56,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"defaultValue": " <i className=\"cc ETH-alt\"></i>"
								},
								{
									"id": 407,
									"name": "IRR",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 55,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"defaultValue": " <span>﷼</span>"
								},
								{
									"id": 409,
									"name": "LTC",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 57,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"defaultValue": " <i className=\"cc LTC-alt\"></i>"
								},
								{
									"id": 406,
									"name": "USD",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 54,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"defaultValue": " <span>$</span>"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										405,
										408,
										407,
										409,
										406
									]
								}
							],
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 51,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 377,
							"name": "keycloakConfig",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 381,
									"name": "checkLoginIframe",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 21,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 380,
									"name": "clientId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 20,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"application\""
								},
								{
									"id": 379,
									"name": "realm",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 19,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"master\""
								},
								{
									"id": 378,
									"name": "url",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "config.tsx",
											"line": 18,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"https://accounts.becopay.com/auth\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										381,
										380,
										379,
										378
									]
								}
							],
							"sources": [
								{
									"fileName": "config.tsx",
									"line": 17,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								203,
								202,
								204,
								205,
								262
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								382,
								404,
								377
							]
						}
					],
					"sources": [
						{
							"fileName": "config.tsx",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "config.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5699,
			"name": "MainEntryPoint",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/index.tsx",
			"children": [
				{
					"id": 5700,
					"name": "history",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "index.tsx",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "History"
					},
					"defaultValue": " createBrowserHistory()"
				},
				{
					"id": 5702,
					"name": "keyCloak",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "index.tsx",
							"line": 31,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "API",
						"id": 4592
					},
					"defaultValue": " KeyCloacksApi.getInstance()"
				},
				{
					"id": 5701,
					"name": "user",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "index.tsx",
							"line": 29,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5700,
						5702,
						5701
					]
				}
			],
			"sources": [
				{
					"fileName": "index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 552,
			"name": "Services/i18n",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/services/trans/i18n.tsx",
			"children": [
				{
					"id": 553,
					"name": "localDate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 554,
							"name": "localDate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 555,
									"name": "langCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "services/trans/i18n.tsx",
							"line": 38,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						553
					]
				}
			],
			"sources": [
				{
					"fileName": "services/trans/i18n.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 85,
			"name": "Services/i18n/Languages",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/services/trans/languages.tsx",
			"children": [
				{
					"id": 86,
					"name": "languages",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "languages which is supported currently must be add here"
					},
					"children": [
						{
							"id": 87,
							"name": "en",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 92,
									"name": "antLocale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 16,
											"character": 17
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 93,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 105,
													"name": "Calendar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 13,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 106,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 107,
																	"name": "lang",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 14,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 108,
																	"name": "timePickerLocale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 15,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 109,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 110,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 16,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						110
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 15,
																					"character": 25
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		107,
																		108
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 13,
																	"character": 13
																}
															]
														}
													}
												},
												{
													"id": 96,
													"name": "DatePicker",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 4,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 97,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 98,
																	"name": "lang",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 5,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 99,
																	"name": "timePickerLocale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 6,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 100,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 101,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																							"line": 7,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						101
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																					"line": 6,
																					"character": 25
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		98,
																		99
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 4,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 119,
													"name": "Modal",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 27,
															"character": 9
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 120,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 122,
																	"name": "cancelText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 29,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 123,
																	"name": "justOkText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 30,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 121,
																	"name": "okText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 28,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		122,
																		123,
																		121
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 27,
																	"character": 10
																}
															]
														}
													}
												},
												{
													"id": 95,
													"name": "Pagination",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 3,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 124,
													"name": "Popconfirm",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 32,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 125,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 127,
																	"name": "cancelText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 34,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 126,
																	"name": "okText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 33,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		127,
																		126
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 32,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 135,
													"name": "Select",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 43,
															"character": 10
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 136,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 137,
																	"name": "notFoundContent",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 44,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		137
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 43,
																	"character": 11
																}
															]
														}
													}
												},
												{
													"id": 111,
													"name": "Table",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 19,
															"character": 9
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 112,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 116,
																	"name": "emptyText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 23,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 114,
																	"name": "filterConfirm",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 21,
																			"character": 21
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 115,
																	"name": "filterReset",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 22,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 113,
																	"name": "filterTitle",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 20,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 117,
																	"name": "selectAll",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 24,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 118,
																	"name": "selectInvert",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 25,
																			"character": 20
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		116,
																		114,
																		115,
																		113,
																		117,
																		118
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 19,
																	"character": 10
																}
															]
														}
													}
												},
												{
													"id": 102,
													"name": "TimePicker",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 10,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 103,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 104,
																	"name": "placeholder",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 11,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		104
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 10,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 128,
													"name": "Transfer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 36,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 133,
																	"name": "itemUnit",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 40,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 134,
																	"name": "itemsUnit",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 41,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 131,
																	"name": "notFoundContent",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 38,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 132,
																	"name": "searchPlaceholder",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 39,
																			"character": 25
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 130,
																	"name": "titles",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 37,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		133,
																		134,
																		131,
																		132,
																		130
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 36,
																	"character": 13
																}
															]
														}
													}
												},
												{
													"id": 138,
													"name": "Upload",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 46,
															"character": 10
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 139,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 143,
																	"name": "previewFile",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 50,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 141,
																	"name": "removeFile",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 48,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 142,
																	"name": "uploadError",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 49,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 140,
																	"name": "uploading",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																			"line": 47,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		143,
																		141,
																		142,
																		140
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
																	"line": 46,
																	"character": 11
																}
															]
														}
													}
												},
												{
													"id": 94,
													"name": "locale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/default.d.ts",
															"line": 2,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														105,
														96,
														119,
														95,
														124,
														135,
														111,
														102,
														128,
														138,
														94
													]
												}
											]
										}
									},
									"defaultValue": " en"
								},
								{
									"id": 88,
									"name": "codeName",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 12,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"en\""
								},
								{
									"id": 89,
									"name": "dir",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 13,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"ltr\""
								},
								{
									"id": 91,
									"name": "locale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 15,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"en-US\""
								},
								{
									"id": 90,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 14,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"English\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										92,
										88,
										89,
										91,
										90
									]
								}
							],
							"sources": [
								{
									"fileName": "services/trans/languages.tsx",
									"line": 11,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 144,
							"name": "fa",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 149,
									"name": "antLocale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 23,
											"character": 17
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 150,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 162,
													"name": "Calendar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 13,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 163,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 164,
																	"name": "lang",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 14,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 165,
																	"name": "timePickerLocale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 15,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 166,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 167,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 16,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						167
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 15,
																					"character": 25
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		164,
																		165
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 13,
																	"character": 13
																}
															]
														}
													}
												},
												{
													"id": 153,
													"name": "DatePicker",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 4,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 154,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 155,
																	"name": "lang",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 5,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 156,
																	"name": "timePickerLocale",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 6,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 157,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"children": [
																				{
																					"id": 158,
																					"name": "placeholder",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {
																						"isExported": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																							"line": 7,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						158
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																					"line": 6,
																					"character": 25
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		155,
																		156
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 4,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 176,
													"name": "Modal",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 27,
															"character": 9
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 177,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 179,
																	"name": "cancelText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 29,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 180,
																	"name": "justOkText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 30,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 178,
																	"name": "okText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 28,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		179,
																		180,
																		178
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 27,
																	"character": 10
																}
															]
														}
													}
												},
												{
													"id": 152,
													"name": "Pagination",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 3,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 181,
													"name": "Popconfirm",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 32,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 182,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 184,
																	"name": "cancelText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 34,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 183,
																	"name": "okText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 33,
																			"character": 14
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		184,
																		183
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 32,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 191,
													"name": "Select",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 42,
															"character": 10
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 192,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 193,
																	"name": "notFoundContent",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 43,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		193
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 42,
																	"character": 11
																}
															]
														}
													}
												},
												{
													"id": 168,
													"name": "Table",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 19,
															"character": 9
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 169,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 173,
																	"name": "emptyText",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 23,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 171,
																	"name": "filterConfirm",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 21,
																			"character": 21
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 172,
																	"name": "filterReset",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 22,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 170,
																	"name": "filterTitle",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 20,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 174,
																	"name": "selectAll",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 24,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 175,
																	"name": "selectInvert",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 25,
																			"character": 20
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		173,
																		171,
																		172,
																		170,
																		174,
																		175
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 19,
																	"character": 10
																}
															]
														}
													}
												},
												{
													"id": 159,
													"name": "TimePicker",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 10,
															"character": 14
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 160,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 161,
																	"name": "placeholder",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 11,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		161
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 10,
																	"character": 15
																}
															]
														}
													}
												},
												{
													"id": 185,
													"name": "Transfer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 36,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 186,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 189,
																	"name": "itemUnit",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 39,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 190,
																	"name": "itemsUnit",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 40,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 187,
																	"name": "notFoundContent",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 37,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 188,
																	"name": "searchPlaceholder",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 38,
																			"character": 25
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		189,
																		190,
																		187,
																		188
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 36,
																	"character": 13
																}
															]
														}
													}
												},
												{
													"id": 194,
													"name": "Upload",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 45,
															"character": 10
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 195,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 199,
																	"name": "previewFile",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 49,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 197,
																	"name": "removeFile",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 47,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 198,
																	"name": "uploadError",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 48,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 196,
																	"name": "uploading",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																			"line": 46,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		199,
																		197,
																		198,
																		196
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
																	"line": 45,
																	"character": 11
																}
															]
														}
													}
												},
												{
													"id": 151,
													"name": "locale",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "/home/mahdy/Projects/b2b/node_modules/antd/lib/locale-provider/fa_IR.d.ts",
															"line": 2,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														162,
														153,
														176,
														152,
														181,
														191,
														168,
														159,
														185,
														194,
														151
													]
												}
											]
										}
									},
									"defaultValue": " fa"
								},
								{
									"id": 145,
									"name": "codeName",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 19,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"fa\""
								},
								{
									"id": 146,
									"name": "dir",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 20,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"rtl\""
								},
								{
									"id": 148,
									"name": "locale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 22,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"fa-IR\""
								},
								{
									"id": 147,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "services/trans/languages.tsx",
											"line": 21,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"فارسی\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										149,
										145,
										146,
										148,
										147
									]
								}
							],
							"sources": [
								{
									"fileName": "services/trans/languages.tsx",
									"line": 18,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								87,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "services/trans/languages.tsx",
							"line": 10,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						86
					]
				}
			],
			"sources": [
				{
					"fileName": "services/trans/languages.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 878,
			"name": "Tools",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/services/tools/index.ts",
			"children": [
				{
					"id": 879,
					"name": "Tools",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a tool class which is provie useful functions"
					},
					"children": [
						{
							"id": 887,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "new Tools",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Tools",
										"id": 879
									}
								}
							],
							"sources": [
								{
									"fileName": "services/tools/index.ts",
									"line": 36,
									"character": 5
								}
							]
						},
						{
							"id": 883,
							"name": "getUsdPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 884,
									"name": "getUsdPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns usd price of any symbol value (fiat or crypto)\n   this function uses redux store to access informations"
									},
									"parameters": [
										{
											"id": 885,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 886,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "services/tools/index.ts",
									"line": 33,
									"character": 29
								}
							]
						},
						{
							"id": 880,
							"name": "getUsdRate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 881,
									"name": "getUsdRate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns usd rate of any symbol (fiat or crypto)\n   this function uses redux store to access informations"
									},
									"parameters": [
										{
											"id": 882,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "services/tools/index.ts",
									"line": 16,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								887
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								883,
								880
							]
						}
					],
					"sources": [
						{
							"fileName": "services/tools/index.ts",
							"line": 11,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						879
					]
				}
			],
			"sources": [
				{
					"fileName": "services/tools/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1246,
			"name": "User",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/lib/user/index.ts",
			"children": [
				{
					"id": 1247,
					"name": "USER",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "singleton class for representing the current user"
					},
					"children": [
						{
							"id": 1253,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1254,
									"name": "new USER",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "USER",
										"id": 1247
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 22,
									"character": 29
								}
							]
						},
						{
							"id": 1251,
							"name": "keycloak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 21,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1252,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 22,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 1250,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 20,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "USER",
								"id": 1247
							}
						},
						{
							"id": 1278,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1279,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 83,
									"character": 18
								}
							]
						},
						{
							"id": 1255,
							"name": "getCurrent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1256,
									"name": "getCurrent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 32,
									"character": 21
								}
							]
						},
						{
							"id": 1270,
							"name": "getToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1271,
									"name": "getToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1272,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1273,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 71,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"Authorization\""
												},
												{
													"id": 1274,
													"name": "value",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 72,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " `Bearer ${this.user.token}`"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1273,
														1274
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 68,
									"character": 19
								}
							]
						},
						{
							"id": 1267,
							"name": "hasRealmRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1268,
									"name": "hasRealmRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1269,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 64,
									"character": 23
								}
							]
						},
						{
							"id": 1257,
							"name": "permission",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1258,
									"name": "permission",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "return user permission for a speceific resource"
									},
									"parameters": [
										{
											"id": 1259,
											"name": "resourceName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1260,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1261,
													"name": "add",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 48,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1266,
													"name": "adminView",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 53,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1262,
													"name": "delete",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 49,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1263,
													"name": "edit",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 50,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1264,
													"name": "index",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 51,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1265,
													"name": "view",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/user/index.ts",
															"line": 52,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1261,
														1266,
														1262,
														1263,
														1264,
														1265
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 38,
									"character": 21
								}
							]
						},
						{
							"id": 1275,
							"name": "setUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1276,
									"name": "setUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set user object"
									},
									"parameters": [
										{
											"id": 1277,
											"name": "user",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 79,
									"character": 18
								}
							]
						},
						{
							"id": 1248,
							"name": "getInstance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1249,
									"name": "getInstance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "USER",
										"id": 1247
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user/index.ts",
									"line": 13,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1253
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1251,
								1252,
								1250
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1278,
								1255,
								1270,
								1267,
								1257,
								1275,
								1248
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/user/index.ts",
							"line": 12,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1247
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/user/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1499,
			"name": "UserMenu",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/mahdy/Projects/b2b/src/components/DashboardMenu/menu.tsx",
			"children": [
				{
					"id": 1500,
					"name": "userObject",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "return menu items for normal users"
					},
					"sources": [
						{
							"fileName": "components/DashboardMenu/menu.tsx",
							"line": 10,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "USER",
						"id": 1247
					},
					"defaultValue": " USER.getInstance()"
				},
				{
					"id": 1501,
					"name": "getMenus",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1502,
							"name": "getMenus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1503,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "components/DashboardMenu/menu.tsx",
							"line": 12,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1500
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1501
					]
				}
			],
			"sources": [
				{
					"fileName": "components/DashboardMenu/menu.tsx",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				4325,
				4406,
				4487,
				4632,
				4742,
				4824,
				4906,
				4990,
				5109,
				5216,
				5314,
				5395,
				5508,
				4591,
				5703,
				1087,
				3084,
				2373,
				5704,
				5675,
				830,
				1237,
				835,
				851,
				844,
				860,
				869,
				856,
				875,
				410,
				1475,
				5591,
				982,
				1280,
				1,
				736,
				1394,
				1686,
				1585,
				1791,
				1901,
				1997,
				2094,
				556,
				2186,
				652,
				2292,
				889,
				2631,
				2904,
				2724,
				2816,
				2990,
				3359,
				3466,
				3566,
				3573,
				3665,
				3783,
				3890,
				1504,
				4016,
				4121,
				4233,
				200,
				5699,
				552,
				85,
				878,
				1246,
				1499
			]
		}
	]
}